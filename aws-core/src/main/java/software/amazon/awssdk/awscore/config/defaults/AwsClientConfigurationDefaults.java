/*
 * Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package software.amazon.awssdk.awscore.config.defaults;

import software.amazon.awssdk.annotations.ReviewBeforeRelease;
import software.amazon.awssdk.annotations.SdkProtectedApi;
import software.amazon.awssdk.auth.credentials.AwsCredentialsProvider;
import software.amazon.awssdk.awscore.client.builder.AwsClientBuilder;
import software.amazon.awssdk.awscore.config.AwsClientConfiguration;
import software.amazon.awssdk.awscore.config.AwsMutableClientConfiguration;
import software.amazon.awssdk.core.config.defaults.GlobalClientConfigurationDefaults;
import software.amazon.awssdk.core.config.defaults.SdkClientConfigurationDefaults;

/**
 * A class that makes it easy to apply default values to a {@link AwsMutableClientConfiguration} if they weren't already
 * specified by the customer (or a higher precedent configuration). This is used by extending it and overriding optional
 * "apply default" methods to check if the customer has specified a piece of configuration. If not, the subclass can inject its
 * own configuration to be added to the customer's.
 *
 * <p>Configurations are implementing using different levels of precedents. For example, the customer's configuration has the
 * highest priority, followed by configuration generated by a builder, followed by service-specific overrides, followed by
 * generic global configurations. This configuration hierarchy is managed by the {@link AwsClientBuilder} implementation.</p>
 *
 * @see GlobalClientConfigurationDefaults
 */
@SdkProtectedApi
public class AwsClientConfigurationDefaults extends SdkClientConfigurationDefaults {
    /**
     * Apply sync defaults to a mutable configuration object. This will potentially override any values that are absent from the
     * provided configuration, but should never override something that is already present.
     */
    public final void applySyncDefaults(AwsMutableClientConfiguration config) {
        // There are currently no sync-specific fields.

        //TODO: fix does this make sense?
        super.applySyncDefaults(config);
        applyDefaultValues(config);
    }

    /**
     * Apply async defaults to a mutable configuration object. This will potentially override any values that are absent from the
     * provided configuration, but should never override something that is already present.
     */
    @ReviewBeforeRelease("Hardcodes thread pool default but that should go away anyways when we switch to NIO")
    public final void applyAsyncDefaults(AwsMutableClientConfiguration config) {
        super.applyAsyncDefaults(config);
        applyDefaultValues(config);
    }

    /**
     * Apply {@link AwsClientConfiguration} defaults to the provided configuration. This will potentially override any values that
     * are absent from the provided configuration, but should never override something that is already present.
     */
    private void applyDefaultValues(AwsMutableClientConfiguration config) {
        config.credentialsProvider(applyDefault(config.credentialsProvider(), this::getCredentialsDefault));
    }

    /**
     * Optionally overridden by the child class to return a default credentials provider.
     */
    protected AwsCredentialsProvider getCredentialsDefault() {
        return null;
    }
}
