{
    "version": "2.26.0",
    "date": "2024-06-11",
    "entries": [
        {
            "type": "bugfix",
            "category": "AWS SDK for Java v2",
            "contributor": "",
            "description": "Fixed an issue in async client where the future would get stuck if there is a server error and the server fails to return response body that matches with the content length specified in the response header. See [#4354](https://github.com/aws/aws-sdk-java-v2/issues/4354)"
        },
        {
            "type": "feature",
            "category": "AWS Network Manager",
            "contributor": "",
            "description": "This is model changes & documentation update for Service Insertion feature for AWS Cloud WAN. This feature allows insertion of AWS/3rd party security services on Cloud WAN. This allows to steer inter/intra segment traffic via security appliances and provide visibility to the route updates."
        },
        {
            "type": "feature",
            "category": "\"AWS SDK for Java v2\"",
            "contributor": "sugmanue",
            "description": "This release contains a major internal refactor of retries and is part\nof moving the SDK to a standardized AWS SDK architecture. It\nintroduces the interface `RetryStrategy` and three subclasses\n`StandardRetryStrategy`, `LegacyRetryStrategy` , and\n`AdaptiveRetryStrategy`. The new interfaces live in the `retry-spi`\nmodule, and the implementation classes live in the `retries` module.\n\nNote 1) This change marks RetryPolicy as as deprecated and we\nencourage users to migrate to its replacement, RetryStrategy. However,\nretry policies are, and will for the foreseeable future be fully\nsupported. Clients configured to use retry policies will not need any\ncode changes and won\u2019t see any behavioral change with this release.\n\nNote 2) The original implementation of adaptive mode (see\n[#2658](https://github.com/aws/aws-sdk-java-v2/pull/2658)) that was\nreleased with the retry policy API contains a bug in its rate-limiter\nlogic which prevents it from remembering state across requests. In\nthis release of the retry strategy API, we introduce\n`RetryMode.ADAPTIVE_V2`, which implements the correct adaptive\nbehavior. `RetryMode.ADAPTIVE` is still present in order to maintain\nbackwards compatibility, but is now marked as deprecated.\n\nNote 3) When configuring retry mode through system settings or\nenvironment variables, users can only choose adaptive mode. This\nsetting will map to `RetryMode.ADAPTIVE_V2` instead of\n`RetryMode.ADAPTIVE` with this release, giving users the correct\nbehavior and still keeping the settings consistent across all\nSDKs. The list of configuration options are: profile file `retry_mode`\nsetting, the `aws.retryMode` system property and the `AWS_RETRY_MODE`\nenvironment variable."
        },
        {
            "type": "feature",
            "category": "AWS SDK for Java v2",
            "contributor": "sugmanue",
            "description": "Adds the new module retries API module"
        },
        {
            "type": "feature",
            "category": "Access Analyzer",
            "contributor": "",
            "description": "IAM Access Analyzer now provides policy recommendations to help resolve unused permissions for IAM roles and users. Additionally, IAM Access Analyzer now extends its custom policy checks to detect when IAM policies grant public access or access to critical resources ahead of deployments."
        },
        {
            "type": "feature",
            "category": "Amazon GuardDuty",
            "contributor": "",
            "description": "Added API support for GuardDuty Malware Protection for S3."
        },
        {
            "type": "feature",
            "category": "Amazon SageMaker Service",
            "contributor": "",
            "description": "Introduced Scope and AuthenticationRequestExtraParams to SageMaker Workforce OIDC configuration; this allows customers to modify these options for their private Workforce IdP integration. Model Registry Cross-account model package groups are discoverable."
        },
        {
            "type": "feature",
            "category": "Private CA Connector for SCEP",
            "contributor": "",
            "description": "Connector for SCEP allows you to use a managed, cloud CA to enroll mobile devices and networking gear. SCEP is a widely-adopted protocol used by mobile device management (MDM) solutions for enrolling mobile devices. With the connector, you can use AWS Private CA with popular MDM solutions."
        },
        {
            "type": "feature",
            "category": "AWS SDK for Java v2",
            "contributor": "",
            "description": "Updated endpoint and partition metadata."
        }
    ]
}