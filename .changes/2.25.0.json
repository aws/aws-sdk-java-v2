{
    "version": "2.25.0",
    "date": "2024-02-29",
    "entries": [
        {
            "type": "bugfix",
            "category": "AWS CRT HTTP Client",
            "contributor": "",
            "description": "Addressing Issue [#4745](https://github.com/aws/aws-sdk-java-v2/issues/4745) , Netty and CRT clients' default proxy settings have been made consistent with the Apache client, now using environment and system property settings by default.\\n To disable the use of environment variables and system properties by default, set useSystemPropertyValue(false) and useEnvironmentVariablesValues(false) in ProxyConfigurations."
        },
        {
            "type": "bugfix",
            "category": "AWS SDK for Java v2",
            "contributor": "",
            "description": "Addressing Issue [#4745](https://github.com/aws/aws-sdk-java-v2/issues/4745) , Netty and CRT clients' default proxy settings have been made consistent with the Apache client, now using environment and system property settings by default.\n To disable the use of environment variables and system properties by default, set useSystemPropertyValue(false) and useEnvironmentVariablesValues(false) in ProxyConfigurations."
        },
        {
            "type": "bugfix",
            "category": "Netty NIO Async HTTP Client",
            "contributor": "",
            "description": "Addressing Issue [#4745](https://github.com/aws/aws-sdk-java-v2/issues/4745) , Netty and CRT clients' default proxy settings have been made consistent with the Apache client, now using environment and system property settings by default.\\n To disable the use of environment variables and system properties by default, set useSystemPropertyValue(false) and useEnvironmentVariablesValues(false) in ProxyConfigurations"
        },
        {
            "type": "feature",
            "category": "AWS CRT HTTP Client",
            "contributor": "",
            "description": "Support Non proxy host settings in the ProxyConfiguration for Crt http client."
        },
        {
            "type": "feature",
            "category": "AWS Migration Hub Orchestrator",
            "contributor": "",
            "description": "Adds new CreateTemplate, UpdateTemplate and DeleteTemplate APIs."
        },
        {
            "type": "feature",
            "category": "Amazon DocumentDB Elastic Clusters",
            "contributor": "",
            "description": "Launched Elastic Clusters Readable Secondaries, Start/Stop, Configurable Shard Instance count, Automatic Backups and Snapshot Copying"
        },
        {
            "type": "feature",
            "category": "Amazon Elastic Kubernetes Service",
            "contributor": "",
            "description": "Added support for new AL2023 AMIs to the supported AMITypes."
        },
        {
            "type": "feature",
            "category": "Amazon Lex Model Building V2",
            "contributor": "",
            "description": "This release makes AMAZON.QnAIntent generally available in Amazon Lex. This generative AI feature leverages large language models available through Amazon Bedrock to automate frequently asked questions (FAQ) experience for end-users."
        },
        {
            "type": "feature",
            "category": "Amazon QuickSight",
            "contributor": "",
            "description": "TooltipTarget for Combo chart visuals; ColumnConfiguration limit increase to 2000; Documentation Update"
        },
        {
            "type": "feature",
            "category": "Amazon SageMaker Service",
            "contributor": "",
            "description": "Adds support for ModelDataSource in Model Packages to support unzipped models. Adds support to specify SourceUri for models which allows registration of models without mandating a container for hosting. Using SourceUri, customers can decouple the model from hosting information during registration."
        },
        {
            "type": "feature",
            "category": "Amazon Security Lake",
            "contributor": "",
            "description": "Add capability to update the Data Lake's MetaStoreManager Role in order to perform required data lake updates to use Iceberg table format in their data lake or update the role for any other reason."
        },
        {
            "type": "feature",
            "category": "AWS SDK for Java v2",
            "contributor": "",
            "description": "Updated endpoint and partition metadata."
        }
    ]
}