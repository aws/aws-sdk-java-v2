{
    "date": "2019-03-07",
    "version": "2.5.5",
    "entries": [
        {
            "category": "Amazon GameLift",
            "type": "feature",
            "description": "Amazon GameLift-hosted instances can now securely access resources on other AWS services using IAM roles. See more details at https://aws.amazon.com/releasenotes/amazon-gamelift/."
        },
        {
            "category": "Auto Scaling",
            "type": "feature",
            "description": "Documentation updates for autoscaling"
        },
        {
            "category": "AWS SDK For Java v2",
            "type": "bugfix",
            "description": "Fix bug in the generated async clients where cancelling the `CompletableFuture` returned from an async operation does not result in cancelling the underlying HTTP request execution. In some cases, this can lead to unnecesarily keeping resources from being freed until the request execution finishes."
        },
        {
            "category": "AWS Elemental MediaLive",
            "type": "feature",
            "description": "This release adds a MediaPackage output group, simplifying configuration of outputs to AWS Elemental MediaPackage."
        },
        {
            "category": "AWS App Mesh",
            "type": "feature",
            "description": "This release includes a new version of the AWS App Mesh APIs. You can read more about the new APIs here: https://docs.aws.amazon.com/app-mesh/latest/APIReference/Welcome.html."
        },
        {
            "category": "AWS Greengrass",
            "type": "feature",
            "description": "Greengrass group UID and GID settings can now be configured to use a provided default via FunctionDefaultConfig. If configured, all Lambda processes in your deployed Greengrass group will by default start with the provided UID and/or GID, rather than by default starting with UID \"ggc_user\" and GID \"ggc_group\" as they would if not configured. Individual Lambdas can also be configured to override the defaults if desired via each object in the Functions list of your FunctionDefinitionVersion."
        },
        {
            "category": "Amazon EC2 Container Service",
            "type": "feature",
            "description": "This release of Amazon Elastic Container Service (Amazon ECS) introduces additional task definition parameters that enable you to define dependencies for container startup and shutdown, a per-container start and stop timeout value, as well as an AWS App Mesh proxy configuration which eases the integration between Amazon ECS and AWS App Mesh."
        },
        {
            "category": "Netty NIO HTTP Client",
            "type": "bugfix",
            "description": "Fix a bug where, if the future returned from the `NettyRequestExecutor#execute` is cancelled, the client continues to wait for the `Channel` acquire to complete, which leads to keeping potentially many resources around unnecessarily."
        },
        {
            "category": "Amazon Relational Database Service",
            "type": "feature",
            "description": "You can configure your Aurora database cluster to automatically copy tags on the cluster to any automated or manual database cluster snapshots that are created from the cluster. This allows you to easily set metadata on your snapshots to match the parent cluster, including access policies. You may enable or disable this functionality while creating a new cluster, or by modifying an existing database cluster."
        }
    ]
}