#
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#  http://aws.amazon.com/apache2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
---
type: specs.openrewrite.org/v1beta/recipe
name: software.amazon.awssdk.v2migration.S3MethodsToV2
displayName: Change S3 methods to v2.
description: Change S3 methods to v2.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 getObjectMetadata(com.amazonaws.services.s3.model.GetObjectMetadataRequest)
      newMethodName: headObject
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 initiateMultipartUpload(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest)
      newMethodName: createMultipartUpload
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 listVersions(com.amazonaws.services.s3.model.ListVersionsRequest)
      newMethodName: listObjectVersions
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest)
      newMethodName: putBucketCors
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 deleteBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.DeleteBucketCrossOriginConfigurationRequest)
      newMethodName: deleteBucketCors
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 getBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.GetBucketCrossOriginConfigurationRequest)
      newMethodName: getBucketCors
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 getBucketVersioningConfiguration(com.amazonaws.services.s3.model.GetBucketVersioningConfigurationRequest)
      newMethodName: getBucketVersioning
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 deleteBucketLifecycleConfiguration(com.amazonaws.services.s3.model.DeleteBucketLifecycleConfigurationRequest)
      newMethodName: deleteBucketLifecycle
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 deleteBucketReplicationConfiguration(com.amazonaws.services.s3.model.DeleteBucketReplicationConfigurationRequest)
      newMethodName: deleteBucketReplication
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 deleteBucketTaggingConfiguration(com.amazonaws.services.s3.model.DeleteBucketTaggingConfigurationRequest)
      newMethodName: deleteBucketTagging
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 deleteBucketWebsiteConfiguration(com.amazonaws.services.s3.model.DeleteBucketWebsiteConfigurationRequest)
      newMethodName: deleteBucketWebsite
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 getBucketLoggingConfiguration(com.amazonaws.services.s3.model.GetBucketLoggingConfigurationRequest)
      newMethodName: getBucketLogging
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 getBucketReplicationConfiguration(com.amazonaws.services.s3.model.GetBucketReplicationConfigurationRequest)
      newMethodName: getBucketReplication
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 getBucketTaggingConfiguration(com.amazonaws.services.s3.model.GetBucketTaggingConfigurationRequest)
      newMethodName: getBucketTagging
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 getBucketWebsiteConfiguration(com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest)
      newMethodName: getBucketWebsite
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 deleteVersion(com.amazonaws.services.s3.model.DeleteObjectRequest)
      newMethodName: deleteObject
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketPolicy(com.amazonaws.services.s3.model.PutBucketPolicyRequest)
      newMethodName: putBucketPolicy
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 copyPart(com.amazonaws.services.s3.model.CopyPartRequest)
      newMethodName: uploadPartCopy
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketAccelerateConfiguration(com.amazonaws.services.s3.model.SetBucketAccelerateConfigurationRequest)
      newMethodName: putBucketAccelerateConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketAnalyticsConfiguration(com.amazonaws.services.s3.model.SetBucketAnalyticsConfigurationRequest)
      newMethodName: putBucketAnalyticsConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketIntelligentTieringConfiguration(com.amazonaws.services.s3.model.SetBucketIntelligentTieringConfigurationRequest)
      newMethodName: putBucketIntelligentTieringConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketInventoryConfiguration(com.amazonaws.services.s3.model.SetBucketInventoryConfigurationRequest)
      newMethodName: putBucketInventoryConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketLifecycleConfiguration(com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest)
      newMethodName: putBucketLifecycleConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketMetricsConfiguration(com.amazonaws.services.s3.model.SetBucketMetricsConfigurationRequest)
      newMethodName: putBucketMetricsConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketNotificationConfiguration(com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest)
      newMethodName: putBucketNotificationConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketOwnershipControls(com.amazonaws.services.s3.model.SetBucketOwnershipControlsRequest)
      newMethodName: putBucketOwnershipControls
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketReplicationConfiguration(com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest)
      newMethodName: putBucketReplication
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketTaggingConfiguration(com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest)
      newMethodName: putBucketTagging
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3 setBucketWebsiteConfiguration(com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest)
      newMethodName: putBucketWebsite

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client getObjectMetadata(com.amazonaws.services.s3.model.GetObjectMetadataRequest)
      newMethodName: headObject
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client initiateMultipartUpload(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest)
      newMethodName: createMultipartUpload
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client listVersions(com.amazonaws.services.s3.model.ListVersionsRequest)
      newMethodName: listObjectVersions
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest)
      newMethodName: putBucketCors
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client deleteBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.DeleteBucketCrossOriginConfigurationRequest)
      newMethodName: deleteBucketCors
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client getBucketCrossOriginConfiguration(com.amazonaws.services.s3.model.GetBucketCrossOriginConfigurationRequest)
      newMethodName: getBucketCors
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client getBucketVersioningConfiguration(com.amazonaws.services.s3.model.GetBucketVersioningConfigurationRequest)
      newMethodName: getBucketVersioning
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client deleteBucketLifecycleConfiguration(com.amazonaws.services.s3.model.DeleteBucketLifecycleConfigurationRequest)
      newMethodName: deleteBucketLifecycle
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client deleteBucketReplicationConfiguration(com.amazonaws.services.s3.model.DeleteBucketReplicationConfigurationRequest)
      newMethodName: deleteBucketReplication
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client deleteBucketTaggingConfiguration(com.amazonaws.services.s3.model.DeleteBucketTaggingConfigurationRequest)
      newMethodName: deleteBucketTagging
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client deleteBucketWebsiteConfiguration(com.amazonaws.services.s3.model.DeleteBucketWebsiteConfigurationRequest)
      newMethodName: deleteBucketWebsite
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client getBucketLoggingConfiguration(com.amazonaws.services.s3.model.GetBucketLoggingConfigurationRequest)
      newMethodName: getBucketLogging
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client getBucketReplicationConfiguration(com.amazonaws.services.s3.model.GetBucketReplicationConfigurationRequest)
      newMethodName: getBucketReplication
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client getBucketTaggingConfiguration(com.amazonaws.services.s3.model.GetBucketTaggingConfigurationRequest)
      newMethodName: getBucketTagging
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client getBucketWebsiteConfiguration(com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest)
      newMethodName: getBucketWebsite
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client deleteVersion(com.amazonaws.services.s3.model.DeleteObjectRequest)
      newMethodName: deleteObject
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketPolicy(com.amazonaws.services.s3.model.PutBucketPolicyRequest)
      newMethodName: putBucketPolicy
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client copyPart(com.amazonaws.services.s3.model.CopyPartRequest)
      newMethodName: uploadPartCopy
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketAccelerateConfiguration(com.amazonaws.services.s3.model.SetBucketAccelerateConfigurationRequest)
      newMethodName: putBucketAccelerateConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketAnalyticsConfiguration(com.amazonaws.services.s3.model.SetBucketAnalyticsConfigurationRequest)
      newMethodName: putBucketAnalyticsConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketIntelligentTieringConfiguration(com.amazonaws.services.s3.model.SetBucketIntelligentTieringConfigurationRequest)
      newMethodName: putBucketIntelligentTieringConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketInventoryConfiguration(com.amazonaws.services.s3.model.SetBucketInventoryConfigurationRequest)
      newMethodName: putBucketInventoryConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketLifecycleConfiguration(com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest)
      newMethodName: putBucketLifecycleConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketMetricsConfiguration(com.amazonaws.services.s3.model.SetBucketMetricsConfigurationRequest)
      newMethodName: putBucketMetricsConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketNotificationConfiguration(com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest)
      newMethodName: putBucketNotificationConfiguration
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketOwnershipControls(com.amazonaws.services.s3.model.SetBucketOwnershipControlsRequest)
      newMethodName: putBucketOwnershipControls
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketReplicationConfiguration(com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest)
      newMethodName: putBucketReplication
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketTaggingConfiguration(com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest)
      newMethodName: putBucketTagging
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.AmazonS3Client setBucketWebsiteConfiguration(com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest)
      newMethodName: putBucketWebsite

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.model.BucketCrossOriginConfiguration withRules(com.amazonaws.services.s3.model.CORSRule...)
      newMethodName: withCorsRules
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.model.CopyPartRequest withSourceBucketName(String)
      newMethodName: withSourceBucket
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.model.CopyPartRequest withDestinationBucketName(String)
      newMethodName: withDestinationBucket
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination withBucketArn(String)
      newMethodName: withBucket
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.model.CompleteMultipartUploadRequest withPartETags(java.util.List)
      newMethodName: withMultipartUpload

  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.model.PutObjectRequest withRedirectLocation(String)
      newMethodName: withWebsiteRedirectLocation
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.model.PutObjectRequest withCannedAcl(com.amazonaws.services.s3.model.CannedAccessControlList)
      newMethodName: withAcl
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.amazonaws.services.s3.model.PutObjectRequest withRequesterPays(boolean)
      newMethodName: withRequestPayer