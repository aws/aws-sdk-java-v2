/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package software.amazon.awssdk.enhanced.dynamodb.extensions.annotations;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import software.amazon.awssdk.annotations.SdkPublicApi;
import software.amazon.awssdk.enhanced.dynamodb.internal.extensions.AutoGeneratedKeyTag;
import software.amazon.awssdk.enhanced.dynamodb.mapper.UpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.BeanTableSchemaAttributeTag;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbUpdateBehavior;

/**
 * Annotation that marks a string attribute to be automatically populated with a random UUID if no value is provided during a
 * write operation (put or update).
 *
 * <p>This annotation is designed for use with the V2 {@link software.amazon.awssdk.enhanced.dynamodb.mapper.BeanTableSchema}.
 * It is registered via {@link BeanTableSchemaAttributeTag} and its behavior is implemented by
 * {@link software.amazon.awssdk.enhanced.dynamodb.extensions.AutoGeneratedKeyExtension}.</p>
 *
 * <h3>Where this annotation can be applied</h3>
 * This annotation is only valid on attributes that serve as keys:
 * <ul>
 *   <li>The table’s primary partition key or sort key</li>
 *   <li>The partition key or sort key of a secondary index (GSI or LSI)</li>
 * </ul>
 * If applied to any other attribute, the {@code AutoGeneratedKeyExtension} will throw an
 * {@link IllegalArgumentException} at runtime.
 *
 * <h3>How values are generated</h3>
 * <ul>
 *   <li>On writes where the annotated attribute is null or empty, a new UUID value is generated
 *       using {@link java.util.UUID#randomUUID()}.</li>
 *   <li>If a value is already set on the attribute, that value is preserved and not replaced.</li>
 * </ul>
 *
 * <h3>Controlling regeneration on update</h3>
 * This annotation can be combined with {@link DynamoDbUpdateBehavior} to control whether a new
 * UUID should be generated on each update:
 * <ul>
 *   <li>{@link UpdateBehavior#WRITE_ALWAYS} (default) –
 *       Generate a new UUID whenever the attribute is missing during write.</li>
 *   <li>{@link UpdateBehavior#WRITE_IF_NOT_EXISTS} –
 *       Generate a UUID only the first time (on insert), and preserve that value on subsequent updates.</li>
 * </ul>
 *
 * <h3>Type restriction</h3>
 * This annotation is only valid on attributes of type {@link String}.
 */
@SdkPublicApi
@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.METHOD, ElementType.FIELD})
@BeanTableSchemaAttributeTag(AutoGeneratedKeyTag.class)
public @interface DynamoDbAutoGeneratedKey {
}