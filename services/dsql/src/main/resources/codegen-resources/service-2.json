{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2018-05-10",
    "auth":["aws.auth#sigv4"],
    "endpointPrefix":"dsql",
    "protocol":"rest-json",
    "protocols":["rest-json"],
    "serviceFullName":"Amazon Aurora DSQL",
    "serviceId":"DSQL",
    "signatureVersion":"v4",
    "signingName":"dsql",
    "uid":"dsql-2018-05-10"
  },
  "operations":{
    "CreateCluster":{
      "name":"CreateCluster",
      "http":{
        "method":"POST",
        "requestUri":"/cluster",
        "responseCode":200
      },
      "input":{"shape":"CreateClusterInput"},
      "output":{"shape":"CreateClusterOutput"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>This operation creates a cluster in Amazon Aurora DSQL. You need the following permissions to use this operation.</p> <p>Permission to create a cluster.</p> <dl> <dt>dsql:CreateCluster</dt> <dd> <p>Resources: arn:aws:dsql:<i>region</i>:<i>account-id</i>:cluster/*</p> </dd> </dl> <p> Permission to add tags to a resource.</p> <dl> <dt>dsql:TagResource</dt> <dd> <p>Resources: arn:aws:dsql:<i>region</i>:<i>account-id</i>:cluster/*</p> </dd> </dl> <p>Permission to configure multi-region properties for a cluster.</p> <dl> <dt>dsql:PutMultiRegionProperties</dt> <dd> <p>Resources: arn:aws:dsql:<i>region</i>:<i>account-id</i>:cluster/*</p> </dd> </dl> <p>When specifying multiRegionProperties.clusters.</p> <dl> <dt>dsql:AddPeerCluster</dt> <dd> <p>Permission to add peer clusters.</p> <p>Resources:</p> <ul> <li> <p>Local cluster: arn:aws:dsql:<i>region</i>:<i>account-id</i>:cluster/*</p> </li> <li> <p>Each peer cluster: exact ARN of each specified peer cluster</p> </li> </ul> </dd> </dl> <p>When specifying multiRegionProperties.witnessRegion.</p> <dl> <dt>dsql:PutWitnessRegion</dt> <dd> <p>Permission to set a witness region.</p> <p>Resources: arn:aws:dsql:<i>region</i>:<i>account-id</i>:cluster/*</p> <p>Condition Keys: <code>dsql:WitnessRegion</code> (matching the specified witness region)</p> <note> <p>This permission is checked both in the cluster Region and in the witness Region.</p> </note> </dd> </dl> <important> <p> <b>Important Notes for Multi-Region Operations</b> </p> <ul> <li> <p>The witness region specified in <code>multiRegionProperties.witnessRegion</code> cannot be the same as the cluster's Region.</p> </li> <li> <p>When updating clusters with peer relationships, permissions are checked for both adding and removing peers.</p> </li> </ul> </important>"
    },
    "CreateMultiRegionClusters":{
      "name":"CreateMultiRegionClusters",
      "http":{
        "method":"POST",
        "requestUri":"/multi-region-clusters",
        "responseCode":200
      },
      "input":{"shape":"CreateMultiRegionClustersInput"},
      "output":{"shape":"CreateMultiRegionClustersOutput"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Creates multi-Region clusters in Amazon Aurora DSQL. Multi-Region clusters require a linked Region list, which is an array of the Regions in which you want to create linked clusters. Multi-Region clusters require a witness Region, which participates in quorum in failure scenarios.</p>",
      "deprecated":true,
      "deprecatedMessage":"The CreateMultiRegionClusters API is deprecated. Use the CreateCluster API with multi-Region properties to create a multi-Region cluster.",
      "deprecatedSince":"5/13/2025"
    },
    "DeleteCluster":{
      "name":"DeleteCluster",
      "http":{
        "method":"DELETE",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"DeleteClusterInput"},
      "output":{"shape":"DeleteClusterOutput"},
      "errors":[
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Deletes a cluster in Amazon Aurora DSQL.</p>",
      "idempotent":true
    },
    "DeleteMultiRegionClusters":{
      "name":"DeleteMultiRegionClusters",
      "http":{
        "method":"DELETE",
        "requestUri":"/multi-region-clusters",
        "responseCode":200
      },
      "input":{"shape":"DeleteMultiRegionClustersInput"},
      "errors":[
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Deletes a multi-Region cluster in Amazon Aurora DSQL.</p>",
      "deprecated":true,
      "deprecatedMessage":"The DeleteMultiRegionClusters API is deprecated. To delete a multi-Region cluster, use the DeleteCluster API instead.",
      "deprecatedSince":"5/13/2025",
      "idempotent":true
    },
    "GetCluster":{
      "name":"GetCluster",
      "http":{
        "method":"GET",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetClusterInput"},
      "output":{"shape":"GetClusterOutput"},
      "errors":[
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Retrieves information about a cluster.</p>"
    },
    "GetVpcEndpointServiceName":{
      "name":"GetVpcEndpointServiceName",
      "http":{
        "method":"GET",
        "requestUri":"/clusters/{identifier}/vpc-endpoint-service-name",
        "responseCode":200
      },
      "input":{"shape":"GetVpcEndpointServiceNameInput"},
      "output":{"shape":"GetVpcEndpointServiceNameOutput"},
      "errors":[
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Retrieves the VPC endpoint service name.</p>"
    },
    "ListClusters":{
      "name":"ListClusters",
      "http":{
        "method":"GET",
        "requestUri":"/cluster",
        "responseCode":200
      },
      "input":{"shape":"ListClustersInput"},
      "output":{"shape":"ListClustersOutput"},
      "errors":[
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Retrieves information about a list of clusters.</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"ListTagsForResourceInput"},
      "output":{"shape":"ListTagsForResourceOutput"},
      "errors":[
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Lists all of the tags for a resource.</p>"
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"TagResourceInput"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Tags a resource with a map of key and value pairs.</p>",
      "idempotent":true
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"UntagResourceInput"},
      "errors":[
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Removes a tag from a resource.</p>",
      "idempotent":true
    },
    "UpdateCluster":{
      "name":"UpdateCluster",
      "http":{
        "method":"POST",
        "requestUri":"/cluster/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateClusterInput"},
      "output":{"shape":"UpdateClusterOutput"},
      "errors":[
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Updates a cluster.</p> <p> <b>Example IAM Policy for Multi-Region Operations</b> </p> <p>The following IAM policy grants permissions for multi-Region operations.</p> <p>The <code>dsql:RemovePeerCluster</code> permission uses a wildcard ARN pattern to simplify permission management during updates.</p> <important> <p> <b>Important Notes for Multi-Region Operations</b> </p> <ul> <li> <p>The witness region specified in <code>multiRegionProperties.witnessRegion</code> cannot be the same as the cluster's Region.</p> </li> <li> <p>When updating clusters with peer relationships, permissions are checked for both adding and removing peers.</p> </li> <li> <p>The <code>dsql:RemovePeerCluster</code> permission uses a wildcard ARN pattern to simplify permission management during updates.</p> </li> </ul> </important>"
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>You do not have sufficient access to perform this action.</p>",
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "Arn":{
      "type":"string",
      "documentation":"<p>Amazon Resource Name.</p>",
      "max":1011,
      "min":1,
      "pattern":"arn:.+"
    },
    "ClientToken":{
      "type":"string",
      "documentation":"<p>Idempotency token so a request is only processed once.</p>",
      "max":128,
      "min":1,
      "pattern":"[!-~]+"
    },
    "ClusterArn":{
      "type":"string",
      "documentation":"<p>The Amazon Resource Name of the cluster.</p>",
      "pattern":"arn:aws(-[^:]+)?:dsql:[a-z0-9-]{1,20}:[0-9]{12}:cluster/[a-z0-9]{26}"
    },
    "ClusterArnList":{
      "type":"list",
      "member":{"shape":"ClusterArn"},
      "documentation":"<p>A list of the Amazon Resource Names of the cluster.</p>"
    },
    "ClusterCreationTime":{
      "type":"timestamp",
      "documentation":"<p>The timestamp when the cluster was created.</p>"
    },
    "ClusterId":{
      "type":"string",
      "documentation":"<p>The ID of the cluster.</p>",
      "pattern":"[a-z0-9]{26}"
    },
    "ClusterList":{
      "type":"list",
      "member":{"shape":"ClusterSummary"},
      "documentation":"<p>The list of clusters.</p>"
    },
    "ClusterPropertyMap":{
      "type":"map",
      "key":{"shape":"Region"},
      "value":{"shape":"LinkedClusterProperties"},
      "documentation":"<p>A map of properties for a cluster.</p>",
      "deprecated":true,
      "deprecatedMessage":"The CreateMultiRegionClusters API is deprecated. To create a multi-Region cluster, use the CreateCluster API with multi-Region properties instead.",
      "deprecatedSince":"5/13/2025"
    },
    "ClusterStatus":{
      "type":"string",
      "documentation":"<p>The current status of a cluster.</p>",
      "enum":[
        "CREATING",
        "ACTIVE",
        "IDLE",
        "INACTIVE",
        "UPDATING",
        "DELETING",
        "DELETED",
        "FAILED",
        "PENDING_SETUP",
        "PENDING_DELETE"
      ]
    },
    "ClusterSummary":{
      "type":"structure",
      "required":[
        "identifier",
        "arn"
      ],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the cluster.</p>"
        },
        "arn":{
          "shape":"ClusterArn",
          "documentation":"<p>The ARN of the cluster.</p>"
        }
      },
      "documentation":"<p>A summary of the properties of a cluster.</p>"
    },
    "ConflictException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"},
        "resourceId":{
          "shape":"String",
          "documentation":"<p>Resource Id</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>Resource Type</p>"
        }
      },
      "documentation":"<p>The submitted action has conflicts.</p>",
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "CreateClusterInput":{
      "type":"structure",
      "members":{
        "deletionProtectionEnabled":{
          "shape":"DeletionProtectionEnabled",
          "documentation":"<p>If enabled, you can't delete your cluster. You must first disable this property before you can delete your cluster.</p>"
        },
        "tags":{
          "shape":"TagMap",
          "documentation":"<p>A map of key and value pairs to use to tag your cluster.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries with the same client token return the result from the original successful request and they have no additional effect.</p> <p>If you don't specify a client token, the Amazon Web Services SDK automatically generates one.</p>",
          "idempotencyToken":true
        },
        "multiRegionProperties":{
          "shape":"MultiRegionProperties",
          "documentation":"<p>The configuration settings when creating a multi-Region cluster, including the witness region and linked cluster properties.</p>"
        }
      }
    },
    "CreateClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the created cluster.</p>"
        },
        "arn":{
          "shape":"ClusterArn",
          "documentation":"<p>The ARN of the created cluster.</p>"
        },
        "status":{
          "shape":"ClusterStatus",
          "documentation":"<p>The status of the created cluster.</p>"
        },
        "creationTime":{
          "shape":"ClusterCreationTime",
          "documentation":"<p>The time of when created the cluster.</p>"
        },
        "multiRegionProperties":{
          "shape":"MultiRegionProperties",
          "documentation":"<p>The multi-Region cluster configuration details that were set during cluster creation</p>"
        },
        "deletionProtectionEnabled":{
          "shape":"DeletionProtectionEnabled",
          "documentation":"<p>Whether deletion protection is enabled on this cluster.</p>"
        }
      },
      "documentation":"<p>The output of a created cluster.</p>"
    },
    "CreateMultiRegionClustersInput":{
      "type":"structure",
      "required":[
        "linkedRegionList",
        "witnessRegion"
      ],
      "members":{
        "linkedRegionList":{
          "shape":"RegionList",
          "documentation":"<p>An array of the Regions in which you want to create additional clusters.</p>"
        },
        "clusterProperties":{
          "shape":"ClusterPropertyMap",
          "documentation":"<p>A mapping of properties to use when creating linked clusters.</p>"
        },
        "witnessRegion":{
          "shape":"Region",
          "documentation":"<p>The witness Region of multi-Region clusters.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully. The subsequent retries with the same client token return the result from the original successful request and they have no additional effect.</p> <p>If you don't specify a client token, the Amazon Web Services SDK automatically generates one.</p>",
          "idempotencyToken":true
        }
      }
    },
    "CreateMultiRegionClustersOutput":{
      "type":"structure",
      "required":["linkedClusterArns"],
      "members":{
        "linkedClusterArns":{
          "shape":"ClusterArnList",
          "documentation":"<p>An array that contains the ARNs of all linked clusters.</p>"
        }
      }
    },
    "DeleteClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the cluster to delete.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully. The subsequent retries with the same client token return the result from the original successful request and they have no additional effect.</p> <p>If you don't specify a client token, the Amazon Web Services SDK automatically generates one.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"client-token"
        }
      }
    },
    "DeleteClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the deleted cluster.</p>"
        },
        "arn":{
          "shape":"ClusterArn",
          "documentation":"<p>The ARN of the deleted cluster.</p>"
        },
        "status":{
          "shape":"ClusterStatus",
          "documentation":"<p>The status of the cluster.</p>"
        },
        "creationTime":{
          "shape":"ClusterCreationTime",
          "documentation":"<p>The time of when the cluster was created.</p>"
        },
        "deletionProtectionEnabled":{
          "shape":"DeletionProtectionEnabled",
          "documentation":"<p>Specifies whether deletion protection was enabled on the cluster.</p>",
          "deprecated":true,
          "deprecatedMessage":"The deletionProtectionEnabled field is deprecated in the DeleteCluster API. To check deletion protection status, use the GetCluster API instead.",
          "deprecatedSince":"5/13/2025"
        }
      },
      "documentation":"<p>The output from a deleted cluster.</p>"
    },
    "DeleteMultiRegionClustersInput":{
      "type":"structure",
      "required":["linkedClusterArns"],
      "members":{
        "linkedClusterArns":{
          "shape":"ClusterArnList",
          "documentation":"<p>The ARNs of the clusters linked to the cluster you want to delete. also deletes these clusters as part of the operation.</p>",
          "location":"querystring",
          "locationName":"linked-cluster-arns"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully. The subsequent retries with the same client token return the result from the original successful request and they have no additional effect.</p> <p>If you don't specify a client token, the Amazon Web Services SDK automatically generates one.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"client-token"
        }
      }
    },
    "DeletionProtectionEnabled":{
      "type":"boolean",
      "documentation":"<p>Indicates whether deletion protection is enabled for a cluster.</p>",
      "box":true
    },
    "GetClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the cluster to retrieve.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the retrieved cluster.</p>"
        },
        "arn":{
          "shape":"ClusterArn",
          "documentation":"<p>The ARN of the retrieved cluster.</p>"
        },
        "status":{
          "shape":"ClusterStatus",
          "documentation":"<p>The status of the retrieved cluster.</p>"
        },
        "creationTime":{
          "shape":"ClusterCreationTime",
          "documentation":"<p>The time of when the cluster was created.</p>"
        },
        "witnessRegion":{
          "shape":"Region",
          "documentation":"<p>The witness Region of the cluster. Applicable only for multi-Region clusters.</p>",
          "deprecated":true,
          "deprecatedMessage":"The witnessRegion field is deprecated. To see the witnessRegion, use multiRegionProperties.witnessRegion instead.",
          "deprecatedSince":"5/13/2025"
        },
        "linkedClusterArns":{
          "shape":"ClusterArnList",
          "documentation":"<p>The ARNs of the clusters linked to the retrieved cluster.</p>",
          "deprecated":true,
          "deprecatedMessage":"The linkedClusterArns field is deprecated. To see the peered cluster Arns, use multiRegionProperties.cluster instead.",
          "deprecatedSince":"5/13/2025"
        },
        "deletionProtectionEnabled":{
          "shape":"DeletionProtectionEnabled",
          "documentation":"<p>Whether deletion protection is enabled in this cluster.</p>"
        },
        "multiRegionProperties":{
          "shape":"MultiRegionProperties",
          "documentation":"<p>Returns the current multi-Region cluster configuration, including witness region and linked cluster information.</p>"
        },
        "tags":{"shape":"TagMap"}
      },
      "documentation":"<p>The output of a cluster.</p>"
    },
    "GetVpcEndpointServiceNameInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the cluster to retrieve.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetVpcEndpointServiceNameOutput":{
      "type":"structure",
      "required":["serviceName"],
      "members":{
        "serviceName":{
          "shape":"ServiceName",
          "documentation":"<p>The VPC endpoint service name.</p>"
        }
      }
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"},
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>Retry after seconds.</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>The request processing has failed because of an unknown error, exception or failure.</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true,
      "retryable":{"throttling":false}
    },
    "LinkedClusterProperties":{
      "type":"structure",
      "members":{
        "deletionProtectionEnabled":{
          "shape":"DeletionProtectionEnabled",
          "documentation":"<p>Whether deletion protection is enabled.</p>"
        },
        "tags":{
          "shape":"TagMap",
          "documentation":"<p>A map of key and value pairs the linked cluster is tagged with.</p>"
        }
      },
      "documentation":"<p>Properties of linked clusters.</p>",
      "deprecated":true,
      "deprecatedMessage":"The CreateMultiRegionClusters API is deprecated. To create a multi-Region cluster, use the CreateCluster API with multi-Region properties instead.",
      "deprecatedSince":"5/13/2025"
    },
    "ListClustersInput":{
      "type":"structure",
      "members":{
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>An optional parameter that specifies the maximum number of results to return. You can use nextToken to display the next page of results.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>If your initial ListClusters operation returns a nextToken, you can include the returned nextToken in following ListClusters operations, which returns results in the next page.</p>",
          "location":"querystring",
          "locationName":"next-token"
        }
      }
    },
    "ListClustersOutput":{
      "type":"structure",
      "required":["clusters"],
      "members":{
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. To retrieve the next page, make the call again using the returned token.</p>"
        },
        "clusters":{
          "shape":"ClusterList",
          "documentation":"<p>An array of the returned clusters.</p>"
        }
      }
    },
    "ListTagsForResourceInput":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "documentation":"<p>The ARN of the resource for which you want to list the tags.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        }
      }
    },
    "ListTagsForResourceOutput":{
      "type":"structure",
      "members":{
        "tags":{
          "shape":"TagMap",
          "documentation":"<p>A map of key and value pairs that you used to tag your resource.</p>"
        }
      }
    },
    "MaxResults":{
      "type":"integer",
      "documentation":"<p>Max results that will be returned per page.</p>",
      "box":true,
      "max":100,
      "min":1
    },
    "MultiRegionProperties":{
      "type":"structure",
      "members":{
        "witnessRegion":{
          "shape":"Region",
          "documentation":"<p>The that serves as the witness region for a multi-Region cluster. The witness region helps maintain cluster consistency and quorum.</p>"
        },
        "clusters":{
          "shape":"ClusterArnList",
          "documentation":"<p>The set of linked clusters that form the multi-Region cluster configuration. Each linked cluster represents a database instance in a different Region.</p>"
        }
      },
      "documentation":"<p>Defines the structure for multi-Region cluster configurations, containing the witness region and linked cluster settings.</p>"
    },
    "NextToken":{
      "type":"string",
      "documentation":"<p>Token used to retrieve next page.</p>"
    },
    "Region":{
      "type":"string",
      "documentation":"<p> Region name.</p>",
      "max":50,
      "min":0
    },
    "RegionList":{
      "type":"list",
      "member":{"shape":"Region"},
      "documentation":"<p>List of Regions.</p>",
      "deprecated":true,
      "deprecatedMessage":"The CreateMultiRegionClusters API is deprecated. Use the CreateCluster API with multi-Region properties to create a multi-Region cluster.",
      "deprecatedSince":"5/13/2025"
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType"
      ],
      "members":{
        "message":{"shape":"String"},
        "resourceId":{
          "shape":"String",
          "documentation":"<p>The resource ID could not be found.</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>The resource type could not be found.</p>"
        }
      },
      "documentation":"<p>The resource could not be found.</p>",
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "ServiceName":{
      "type":"string",
      "documentation":"<p>The name of the VPC endpoint service that provides access to your cluster. Use this endpoint to establish a private connection between your VPC and the cluster.</p>",
      "max":128,
      "min":1,
      "pattern":"com\\.amazonaws\\.[a-z0-9-]+\\.dsql-[a-f0-9]{6}"
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType",
        "serviceCode",
        "quotaCode"
      ],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>The service exception for exceeding a quota.</p>"
        },
        "resourceId":{
          "shape":"String",
          "documentation":"<p>The resource ID exceeds a quota.</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>The resource type exceeds a quota.</p>"
        },
        "serviceCode":{
          "shape":"String",
          "documentation":"<p>The request exceeds a service quota.</p>"
        },
        "quotaCode":{
          "shape":"String",
          "documentation":"<p>The service exceeds a quota.</p>"
        }
      },
      "documentation":"<p>The service limit was exceeded.</p>",
      "error":{
        "httpStatusCode":402,
        "senderFault":true
      },
      "exception":true
    },
    "String":{"type":"string"},
    "TagKey":{
      "type":"string",
      "documentation":"<p>Unique tag key, maximum 128 Unicode characters in UTF-8.</p>",
      "max":128,
      "min":1,
      "pattern":"[a-zA-Z0-9_.:/=+\\-@ ]*"
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "documentation":"<p>List of tag keys.</p>",
      "max":200,
      "min":0
    },
    "TagMap":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"},
      "documentation":"<p>Map of tags.</p>",
      "max":200,
      "min":0
    },
    "TagResourceInput":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tags"
      ],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "documentation":"<p>The ARN of the resource that you want to tag.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tags":{
          "shape":"TagMap",
          "documentation":"<p>A map of key and value pairs to use to tag your resource.</p>"
        }
      }
    },
    "TagValue":{
      "type":"string",
      "documentation":"<p>Tag value, maximum 256 Unicode characters in UTF-8.</p>",
      "max":256,
      "min":0,
      "pattern":"[a-zA-Z0-9_.:/=+\\-@ ]*"
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>The message that the request was denied due to request throttling.</p>"
        },
        "serviceCode":{
          "shape":"String",
          "documentation":"<p>The request exceeds a service quota.</p>"
        },
        "quotaCode":{
          "shape":"String",
          "documentation":"<p>The request exceeds a request rate quota.</p>"
        },
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>The request exceeds a request rate quota. Retry after seconds.</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>The request was denied due to request throttling.</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true,
      "retryable":{"throttling":true}
    },
    "UntagResourceInput":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tagKeys"
      ],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "documentation":"<p>The ARN of the resource from which to remove tags.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tagKeys":{
          "shape":"TagKeyList",
          "documentation":"<p>The array of keys of the tags that you want to remove.</p>",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UpdateClusterInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the cluster you want to update.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "deletionProtectionEnabled":{
          "shape":"DeletionProtectionEnabled",
          "documentation":"<p>Specifies whether to enable deletion protection in your cluster.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully. The subsequent retries with the same client token return the result from the original successful request and they have no additional effect.</p> <p>If you don't specify a client token, the Amazon Web Services SDK automatically generates one.</p>",
          "idempotencyToken":true
        },
        "multiRegionProperties":{
          "shape":"MultiRegionProperties",
          "documentation":"<p>The new multi-Region cluster configuration settings to be applied during an update operation.</p>"
        }
      }
    },
    "UpdateClusterOutput":{
      "type":"structure",
      "required":[
        "identifier",
        "arn",
        "status",
        "creationTime",
        "deletionProtectionEnabled"
      ],
      "members":{
        "identifier":{
          "shape":"ClusterId",
          "documentation":"<p>The ID of the cluster to update.</p>"
        },
        "arn":{
          "shape":"ClusterArn",
          "documentation":"<p>The ARN of the updated cluster.</p>"
        },
        "status":{
          "shape":"ClusterStatus",
          "documentation":"<p>The status of the updated cluster.</p>"
        },
        "creationTime":{
          "shape":"ClusterCreationTime",
          "documentation":"<p>The time of when the cluster was created.</p>"
        },
        "witnessRegion":{
          "shape":"Region",
          "documentation":"<p>The Region that receives all data you write to linked clusters.</p>",
          "deprecated":true,
          "deprecatedMessage":"The witnessRegion field is deprecated in the UpdateCluster API. To check witnessRegion, use the GetCluster API instead.",
          "deprecatedSince":"5/13/2025"
        },
        "linkedClusterArns":{
          "shape":"ClusterArnList",
          "documentation":"<p>The ARNs of the clusters linked to the updated cluster. Applicable only for multi-Region clusters.</p>",
          "deprecated":true,
          "deprecatedMessage":"The linkedClusterArns field is deprecated in the UpdateCluster API. To check peer cluster, use the GetCluster API instead.",
          "deprecatedSince":"5/13/2025"
        },
        "deletionProtectionEnabled":{
          "shape":"DeletionProtectionEnabled",
          "documentation":"<p>Whether deletion protection is enabled for the updated cluster.</p>",
          "deprecated":true,
          "deprecatedMessage":"The deletionProtectionEnabled field is deprecated in the UpdateCluster API. To check deletion protection status, use the GetCluster API instead.",
          "deprecatedSince":"5/13/2025"
        }
      },
      "documentation":"<p>The details of the cluster after it has been updated.</p>"
    },
    "ValidationException":{
      "type":"structure",
      "required":[
        "message",
        "reason"
      ],
      "members":{
        "message":{"shape":"String"},
        "reason":{
          "shape":"ValidationExceptionReason",
          "documentation":"<p>The reason for the validation exception.</p>"
        },
        "fieldList":{
          "shape":"ValidationExceptionFieldList",
          "documentation":"<p>A list of fields that didn't validate.</p>"
        }
      },
      "documentation":"<p>The input failed to satisfy the constraints specified by an Amazon Web Services service.</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "ValidationExceptionField":{
      "type":"structure",
      "required":[
        "name",
        "message"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the field.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>A message describing why this field failed validation.</p>"
        }
      },
      "documentation":"<p>Stores information about a field passed inside a request that resulted in an validation error.</p>"
    },
    "ValidationExceptionFieldList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionField"},
      "documentation":"<p>A list of fields that didn't validate.</p>"
    },
    "ValidationExceptionReason":{
      "type":"string",
      "documentation":"<p>The reason for the validation exception.</p>",
      "enum":[
        "unknownOperation",
        "cannotParse",
        "fieldValidationFailed",
        "deletionProtectionEnabled",
        "other"
      ]
    }
  },
  "documentation":"<p>This is an interface reference for Amazon Aurora DSQL. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Aurora DSQL.</p> <p>Amazon Aurora DSQL is a serverless, distributed SQL database suitable for workloads of any size. is available in both single-Region and multi-Region configurations, so your clusters and databases are always available even if an Availability Zone or an Amazon Web Services Region are unavailable. lets you focus on using your data to acquire new insights for your business and customers.</p>"
}
