{
  "metadata": {
    "apiVersion": "2019-12-02",
    "endpointPrefix": "route53-recovery-readiness",
    "signingName": "route53-recovery-readiness",
    "serviceFullName": "AWS Route53 Recovery Readiness",
    "serviceId": "Route53 Recovery Readiness",
    "protocol": "rest-json",
    "jsonVersion": "1.1",
    "uid": "route53-recovery-readiness-2019-12-02",
    "signatureVersion": "v4"
  },
  "operations": {
    "CreateCell": {
      "name": "CreateCell",
      "http": {
        "method": "POST",
        "requestUri": "/cells",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateCellRequest"
      },
      "output": {
        "shape": "CreateCellResponse",
        "documentation": "Result of a CreateCell call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Creates a new Cell."
    },
    "CreateCrossAccountAuthorization": {
      "name": "CreateCrossAccountAuthorization",
      "http": {
        "method": "POST",
        "requestUri": "/crossaccountauthorizations",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateCrossAccountAuthorizationRequest"
      },
      "output": {
        "shape": "CreateCrossAccountAuthorizationResponse",
        "documentation": "Result of a CreateCrossAccountAuthorization call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Create a new cross account readiness authorization."
    },
    "CreateReadinessCheck": {
      "name": "CreateReadinessCheck",
      "http": {
        "method": "POST",
        "requestUri": "/readinesschecks",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateReadinessCheckRequest"
      },
      "output": {
        "shape": "CreateReadinessCheckResponse",
        "documentation": "Result of a CreateReadinessCheck call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Creates a new Readiness Check."
    },
    "CreateRecoveryGroup": {
      "name": "CreateRecoveryGroup",
      "http": {
        "method": "POST",
        "requestUri": "/recoverygroups",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateRecoveryGroupRequest"
      },
      "output": {
        "shape": "CreateRecoveryGroupResponse",
        "documentation": "Result of a CreateRecoveryGroup call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Creates a new Recovery Group."
    },
    "CreateResourceSet": {
      "name": "CreateResourceSet",
      "http": {
        "method": "POST",
        "requestUri": "/resourcesets",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateResourceSetRequest"
      },
      "output": {
        "shape": "CreateResourceSetResponse",
        "documentation": "Result of a CreateResourceSet call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Creates a new Resource Set."
    },
    "DeleteCell": {
      "name": "DeleteCell",
      "http": {
        "method": "DELETE",
        "requestUri": "/cells/{cellName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteCellRequest"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Deletes an existing Cell."
    },
    "DeleteCrossAccountAuthorization": {
      "name": "DeleteCrossAccountAuthorization",
      "http": {
        "method": "DELETE",
        "requestUri": "/crossaccountauthorizations/{crossAccountAuthorization}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteCrossAccountAuthorizationRequest"
      },
      "output": {
        "shape": "DeleteCrossAccountAuthorizationResponse",
        "documentation": "Result of a DeleteCrossAccountAuthorization call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Delete cross account readiness authorization"
    },
    "DeleteReadinessCheck": {
      "name": "DeleteReadinessCheck",
      "http": {
        "method": "DELETE",
        "requestUri": "/readinesschecks/{readinessCheckName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteReadinessCheckRequest"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Deletes an existing Readiness Check."
    },
    "DeleteRecoveryGroup": {
      "name": "DeleteRecoveryGroup",
      "http": {
        "method": "DELETE",
        "requestUri": "/recoverygroups/{recoveryGroupName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteRecoveryGroupRequest"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Deletes an existing Recovery Group."
    },
    "DeleteResourceSet": {
      "name": "DeleteResourceSet",
      "http": {
        "method": "DELETE",
        "requestUri": "/resourcesets/{resourceSetName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteResourceSetRequest"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Deletes an existing Resource Set."
    },
    "GetArchitectureRecommendations": {
      "name": "GetArchitectureRecommendations",
      "http": {
        "method": "GET",
        "requestUri": "/recoverygroups/{recoveryGroupName}/architectureRecommendations",
        "responseCode": 200
      },
      "input": {
        "shape": "GetArchitectureRecommendationsRequest"
      },
      "output": {
        "shape": "GetArchitectureRecommendationsResponse",
        "documentation": "Result of a GetArchitectureRecommendations call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns a collection of recommendations to improve resilliance and readiness check quality for a Recovery Group."
    },
    "GetCell": {
      "name": "GetCell",
      "http": {
        "method": "GET",
        "requestUri": "/cells/{cellName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCellRequest"
      },
      "output": {
        "shape": "GetCellResponse",
        "documentation": "Result of a GetCell call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns information about a Cell."
    },
    "GetCellReadinessSummary": {
      "name": "GetCellReadinessSummary",
      "http": {
        "method": "GET",
        "requestUri": "/cellreadiness/{cellName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCellReadinessSummaryRequest"
      },
      "output": {
        "shape": "GetCellReadinessSummaryResponse",
        "documentation": "Result of a GetCellReadinessSummary call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns information about readiness of a Cell."
    },
    "GetReadinessCheck": {
      "name": "GetReadinessCheck",
      "http": {
        "method": "GET",
        "requestUri": "/readinesschecks/{readinessCheckName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadinessCheckRequest"
      },
      "output": {
        "shape": "GetReadinessCheckResponse",
        "documentation": "Result of a GetReadinessCheck call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns information about a ReadinessCheck."
    },
    "GetReadinessCheckResourceStatus": {
      "name": "GetReadinessCheckResourceStatus",
      "http": {
        "method": "GET",
        "requestUri": "/readinesschecks/{readinessCheckName}/resource/{resourceIdentifier}/status",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadinessCheckResourceStatusRequest"
      },
      "output": {
        "shape": "GetReadinessCheckResourceStatusResponse",
        "documentation": "Result of a GetReadinessCheckResourceStatus call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns detailed information about the status of an individual resource within a Readiness Check's Resource Set."
    },
    "GetReadinessCheckStatus": {
      "name": "GetReadinessCheckStatus",
      "http": {
        "method": "GET",
        "requestUri": "/readinesschecks/{readinessCheckName}/status",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadinessCheckStatusRequest"
      },
      "output": {
        "shape": "GetReadinessCheckStatusResponse",
        "documentation": "Result of a GetReadinessCheckStatus call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns information about the status of a Readiness Check."
    },
    "GetRecoveryGroup": {
      "name": "GetRecoveryGroup",
      "http": {
        "method": "GET",
        "requestUri": "/recoverygroups/{recoveryGroupName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetRecoveryGroupRequest"
      },
      "output": {
        "shape": "GetRecoveryGroupResponse",
        "documentation": "Result of a GetRecoveryGroup call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns information about a Recovery Group."
    },
    "GetRecoveryGroupReadinessSummary": {
      "name": "GetRecoveryGroupReadinessSummary",
      "http": {
        "method": "GET",
        "requestUri": "/recoverygroupreadiness/{recoveryGroupName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetRecoveryGroupReadinessSummaryRequest"
      },
      "output": {
        "shape": "GetRecoveryGroupReadinessSummaryResponse",
        "documentation": "Result of a GetRecoveryGroupReadinessSummary call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns information about a Recovery Group."
    },
    "GetResourceSet": {
      "name": "GetResourceSet",
      "http": {
        "method": "GET",
        "requestUri": "/resourcesets/{resourceSetName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetResourceSetRequest"
      },
      "output": {
        "shape": "GetResourceSetResponse",
        "documentation": "Result of a GetResourceSets call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns information about a Resource Set."
    },
    "ListCells": {
      "name": "ListCells",
      "http": {
        "method": "GET",
        "requestUri": "/cells",
        "responseCode": 200
      },
      "input": {
        "shape": "ListCellsRequest"
      },
      "output": {
        "shape": "ListCellsResponse",
        "documentation": "Result of a ListCells call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns a collection of Cells."
    },
    "ListCrossAccountAuthorizations": {
      "name": "ListCrossAccountAuthorizations",
      "http": {
        "method": "GET",
        "requestUri": "/crossaccountauthorizations",
        "responseCode": 200
      },
      "input": {
        "shape": "ListCrossAccountAuthorizationsRequest"
      },
      "output": {
        "shape": "ListCrossAccountAuthorizationsResponse",
        "documentation": "Result of a ListCrossAccountAuthorizations call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns a collection of cross account readiness authorizations."
    },
    "ListReadinessChecks": {
      "name": "ListReadinessChecks",
      "http": {
        "method": "GET",
        "requestUri": "/readinesschecks",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReadinessChecksRequest"
      },
      "output": {
        "shape": "ListReadinessChecksResponse",
        "documentation": "Result of a ListReadinessChecks call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns a collection of Readiness Checks."
    },
    "ListRecoveryGroups": {
      "name": "ListRecoveryGroups",
      "http": {
        "method": "GET",
        "requestUri": "/recoverygroups",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRecoveryGroupsRequest"
      },
      "output": {
        "shape": "ListRecoveryGroupsResponse",
        "documentation": "Result of a ListRecoveryGroups call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns a collection of Recovery Groups."
    },
    "ListResourceSets": {
      "name": "ListResourceSets",
      "http": {
        "method": "GET",
        "requestUri": "/resourcesets",
        "responseCode": 200
      },
      "input": {
        "shape": "ListResourceSetsRequest"
      },
      "output": {
        "shape": "ListResourceSetsResponse",
        "documentation": "Result of a ListResourceSets call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns a collection of Resource Sets."
    },
    "ListRules": {
      "name": "ListRules",
      "http": {
        "method": "GET",
        "requestUri": "/rules",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRulesRequest"
      },
      "output": {
        "shape": "ListRulesResponse",
        "documentation": "Result of a ListRules call"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Returns a collection of rules that are applied as part of Readiness Checks."
    },
    "ListTagsForResources": {
      "name": "ListTagsForResources",
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourcesRequest"
      },
      "output": {
        "shape": "ListTagsForResourcesResponse",
        "documentation": "200 response"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException",
          "documentation": "requested resource was not found"
        },
        {
          "shape": "ValidationException",
          "documentation": "an invalid request"
        },
        {
          "shape": "InternalServerException",
          "documentation": "Internal service error"
        }
      ],
      "documentation": "Returns a list of the tags assigned to the specified resource."
    },
    "TagResource": {
      "name": "TagResource",
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 200
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "output": {
        "shape": "TagResourceResponse",
        "documentation": "200 response"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException",
          "documentation": "requested resource was not found"
        },
        {
          "shape": "ValidationException",
          "documentation": "an invalid request"
        },
        {
          "shape": "InternalServerException",
          "documentation": "Internal service error"
        }
      ],
      "documentation": "Adds tags to the specified resource. You can specify one or more tags to add."
    },
    "UntagResource": {
      "name": "UntagResource",
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException",
          "documentation": "requested resource was not found"
        },
        {
          "shape": "ValidationException",
          "documentation": "an invalid request"
        },
        {
          "shape": "InternalServerException",
          "documentation": "Internal service error"
        }
      ],
      "documentation": "Removes tags from the specified resource. You can specify one or more tags to remove."
    },
    "UpdateCell": {
      "name": "UpdateCell",
      "http": {
        "method": "PUT",
        "requestUri": "/cells/{cellName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateCellRequest"
      },
      "output": {
        "shape": "UpdateCellResponse",
        "documentation": "Result of a UpdateCell call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Updates an existing Cell."
    },
    "UpdateReadinessCheck": {
      "name": "UpdateReadinessCheck",
      "http": {
        "method": "PUT",
        "requestUri": "/readinesschecks/{readinessCheckName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateReadinessCheckRequest"
      },
      "output": {
        "shape": "UpdateReadinessCheckResponse",
        "documentation": "Result of a UpdateReadinessChecks call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Updates an exisiting Readiness Check."
    },
    "UpdateRecoveryGroup": {
      "name": "UpdateRecoveryGroup",
      "http": {
        "method": "PUT",
        "requestUri": "/recoverygroups/{recoveryGroupName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateRecoveryGroupRequest"
      },
      "output": {
        "shape": "UpdateRecoveryGroupResponse",
        "documentation": "Result of a UpdateRecoveryGroups call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Updates an existing Recovery Group."
    },
    "UpdateResourceSet": {
      "name": "UpdateResourceSet",
      "http": {
        "method": "PUT",
        "requestUri": "/resourcesets/{resourceSetName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateResourceSetRequest"
      },
      "output": {
        "shape": "UpdateResourceSetResponse",
        "documentation": "Result of a UpdateResourceSets call"
      },
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "documentation": "Updates an existing Resource Set."
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "type": "structure",
      "exception": true,
      "error": {
        "httpStatusCode": 403
      },
      "documentation": "User does not have sufficient access to perform this action.",
      "members": {
        "Message": {
          "shape": "__string",
          "locationName": "message"
        }
      }
    },
    "CellOutput": {
      "type": "structure",
      "members": {
        "CellArn": {
          "shape": "__stringMax256",
          "locationName": "cellArn",
          "documentation": "The arn for the Cell"
        },
        "CellName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "cellName",
          "documentation": "The name of the Cell"
        },
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "ParentReadinessScopes": {
          "shape": "__listOf__string",
          "locationName": "parentReadinessScopes",
          "documentation": "A list of Cell ARNs and/or RecoveryGroup ARNs"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "documentation": "A Cell and its properties",
      "required": [
        "ParentReadinessScopes",
        "CellArn",
        "CellName",
        "Cells"
      ]
    },
    "ConflictException": {
      "type": "structure",
      "exception": true,
      "error": {
        "httpStatusCode": 409
      },
      "documentation": "Updating or deleting a resource can cause an inconsistent state.",
      "members": {
        "Message": {
          "shape": "__string",
          "locationName": "message"
        }
      }
    },
    "CreateCellRequest": {
      "type": "structure",
      "members": {
        "CellName": {
          "shape": "__string",
          "locationName": "cellName",
          "documentation": "The name of the Cell to create"
        },
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns contained within this Cell (for use in nested Cells, e.g. regions within which AZs)"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "documentation": "The Cell to create",
      "required": [
        "CellName"
      ]
    },
    "CreateCellResponse": {
      "type": "structure",
      "members": {
        "CellArn": {
          "shape": "__stringMax256",
          "locationName": "cellArn",
          "documentation": "The arn for the Cell"
        },
        "CellName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "cellName",
          "documentation": "The name of the Cell"
        },
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "ParentReadinessScopes": {
          "shape": "__listOf__string",
          "locationName": "parentReadinessScopes",
          "documentation": "A list of Cell ARNs and/or RecoveryGroup ARNs"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "CreateCrossAccountAuthorizationRequest": {
      "type": "structure",
      "members": {
        "CrossAccountAuthorization": {
          "shape": "CrossAccountAuthorization",
          "locationName": "crossAccountAuthorization",
          "documentation": "The cross account authorization"
        }
      },
      "documentation": "The cross account authorization",
      "required": [
        "CrossAccountAuthorization"
      ]
    },
    "CreateCrossAccountAuthorizationResponse": {
      "type": "structure",
      "members": {
        "CrossAccountAuthorization": {
          "shape": "CrossAccountAuthorization",
          "locationName": "crossAccountAuthorization",
          "documentation": "The cross account authorization"
        }
      }
    },
    "CreateReadinessCheckRequest": {
      "type": "structure",
      "members": {
        "ReadinessCheckName": {
          "shape": "__string",
          "locationName": "readinessCheckName",
          "documentation": "The name of the ReadinessCheck to create"
        },
        "ResourceSetName": {
          "shape": "__string",
          "locationName": "resourceSetName",
          "documentation": "The name of the ResourceSet to check"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "documentation": "The ReadinessCheck to create",
      "required": [
        "ResourceSetName",
        "ReadinessCheckName"
      ]
    },
    "CreateReadinessCheckResponse": {
      "type": "structure",
      "members": {
        "ReadinessCheckArn": {
          "shape": "__stringMax256",
          "locationName": "readinessCheckArn",
          "documentation": "Arn associated with ReadinessCheck"
        },
        "ReadinessCheckName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "readinessCheckName",
          "documentation": "Name for a ReadinessCheck"
        },
        "ResourceSet": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "resourceSet",
          "documentation": "Name of the ResourceSet to be checked"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "CreateRecoveryGroupRequest": {
      "type": "structure",
      "members": {
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "RecoveryGroupName": {
          "shape": "__string",
          "locationName": "recoveryGroupName",
          "documentation": "The name of the RecoveryGroup to create"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "documentation": "The RecoveryGroup to create",
      "required": [
        "RecoveryGroupName"
      ]
    },
    "CreateRecoveryGroupResponse": {
      "type": "structure",
      "members": {
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "RecoveryGroupArn": {
          "shape": "__stringMax256",
          "locationName": "recoveryGroupArn",
          "documentation": "The arn for the RecoveryGroup"
        },
        "RecoveryGroupName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "recoveryGroupName",
          "documentation": "The name of the RecoveryGroup"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "CreateResourceSetRequest": {
      "type": "structure",
      "members": {
        "ResourceSetName": {
          "shape": "__string",
          "locationName": "resourceSetName",
          "documentation": "The name of the ResourceSet to create"
        },
        "ResourceSetType": {
          "shape": "__stringPatternAWSAZaZ09AZaZ09",
          "locationName": "resourceSetType",
          "documentation": "AWS Resource type of the resources in the ResourceSet"
        },
        "Resources": {
          "shape": "__listOfResource",
          "locationName": "resources",
          "documentation": "A list of Resource objects"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "documentation": "The ResourceSet to create",
      "required": [
        "ResourceSetType",
        "ResourceSetName",
        "Resources"
      ]
    },
    "CreateResourceSetResponse": {
      "type": "structure",
      "members": {
        "ResourceSetArn": {
          "shape": "__stringMax256",
          "locationName": "resourceSetArn",
          "documentation": "The arn for the ResourceSet"
        },
        "ResourceSetName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "resourceSetName",
          "documentation": "The name of the ResourceSet"
        },
        "ResourceSetType": {
          "shape": "__stringPatternAWSAZaZ09AZaZ09",
          "locationName": "resourceSetType",
          "documentation": "AWS Resource Type of the resources in the ResourceSet"
        },
        "Resources": {
          "shape": "__listOfResource",
          "locationName": "resources",
          "documentation": "A list of Resource objects"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "CrossAccountAuthorization": {
      "type": "string",
      "documentation": "A cross-account authorization, e.g. arn:aws:iam::123456789012:root"
    },
    "DNSTargetResource": {
      "type": "structure",
      "members": {
        "DomainName": {
          "shape": "__string",
          "locationName": "domainName",
          "documentation": "The DNS Name that acts as ingress point to a portion of application"
        },
        "HostedZoneArn": {
          "shape": "__string",
          "locationName": "hostedZoneArn",
          "documentation": "The Hosted Zone ARN that contains the DNS record with the provided name of target resource."
        },
        "RecordSetId": {
          "shape": "__string",
          "locationName": "recordSetId",
          "documentation": "The R53 Set Id to uniquely identify a record given a Name and a Type"
        },
        "RecordType": {
          "shape": "__string",
          "locationName": "recordType",
          "documentation": "The Type of DNS Record of target resource"
        },
        "TargetResource": {
          "shape": "TargetResource",
          "locationName": "targetResource"
        }
      },
      "documentation": "A component for DNS/Routing Control Readiness Checks"
    },
    "DeleteCellRequest": {
      "type": "structure",
      "members": {
        "CellName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "cellName",
          "documentation": "The Cell to delete"
        }
      },
      "required": [
        "CellName"
      ]
    },
    "DeleteCrossAccountAuthorizationRequest": {
      "type": "structure",
      "members": {
        "CrossAccountAuthorization": {
          "shape": "__string",
          "location": "uri",
          "locationName": "crossAccountAuthorization",
          "documentation": "The cross account authorization"
        }
      },
      "required": [
        "CrossAccountAuthorization"
      ]
    },
    "DeleteCrossAccountAuthorizationResponse": {
      "type": "structure",
      "members": {}
    },
    "DeleteReadinessCheckRequest": {
      "type": "structure",
      "members": {
        "ReadinessCheckName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "readinessCheckName",
          "documentation": "The ReadinessCheck to delete"
        }
      },
      "required": [
        "ReadinessCheckName"
      ]
    },
    "DeleteRecoveryGroupRequest": {
      "type": "structure",
      "members": {
        "RecoveryGroupName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "documentation": "The RecoveryGroup to delete"
        }
      },
      "required": [
        "RecoveryGroupName"
      ]
    },
    "DeleteResourceSetRequest": {
      "type": "structure",
      "members": {
        "ResourceSetName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "resourceSetName",
          "documentation": "The ResourceSet to delete"
        }
      },
      "required": [
        "ResourceSetName"
      ]
    },
    "GetArchitectureRecommendationsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "RecoveryGroupName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "documentation": "Name of RecoveryGroup (top level resource) to be analyzed."
        }
      },
      "required": [
        "RecoveryGroupName"
      ]
    },
    "GetArchitectureRecommendationsResponse": {
      "type": "structure",
      "members": {
        "LastAuditTimestamp": {
          "shape": "LastAuditTimestamp",
          "locationName": "lastAuditTimestamp",
          "documentation": "The time a Recovery Group was last assessed for recommendations in UTC ISO-8601 format."
        },
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection"
        },
        "Recommendations": {
          "shape": "__listOfRecommendation",
          "locationName": "recommendations",
          "documentation": "A list of recommendations for the customer's application"
        }
      }
    },
    "GetCellReadinessSummaryRequest": {
      "type": "structure",
      "members": {
        "CellName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "cellName",
          "documentation": "The name of the Cell"
        },
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        }
      },
      "required": [
        "CellName"
      ]
    },
    "GetCellReadinessSummaryResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "Readiness": {
          "shape": "Readiness",
          "locationName": "readiness",
          "documentation": "The readiness at Cell level."
        },
        "ReadinessChecks": {
          "shape": "__listOfReadinessCheckSummary",
          "locationName": "readinessChecks",
          "documentation": "Summaries for the ReadinessChecks making up the Cell"
        }
      }
    },
    "GetCellRequest": {
      "type": "structure",
      "members": {
        "CellName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "cellName",
          "documentation": "The Cell to get"
        }
      },
      "required": [
        "CellName"
      ]
    },
    "GetCellResponse": {
      "type": "structure",
      "members": {
        "CellArn": {
          "shape": "__stringMax256",
          "locationName": "cellArn",
          "documentation": "The arn for the Cell"
        },
        "CellName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "cellName",
          "documentation": "The name of the Cell"
        },
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "ParentReadinessScopes": {
          "shape": "__listOf__string",
          "locationName": "parentReadinessScopes",
          "documentation": "A list of Cell ARNs and/or RecoveryGroup ARNs"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "GetReadinessCheckRequest": {
      "type": "structure",
      "members": {
        "ReadinessCheckName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "readinessCheckName",
          "documentation": "The ReadinessCheck to get"
        }
      },
      "required": [
        "ReadinessCheckName"
      ]
    },
    "GetReadinessCheckResourceStatusRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        },
        "ReadinessCheckName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "readinessCheckName",
          "documentation": "The ReadinessCheck to get"
        },
        "ResourceIdentifier": {
          "shape": "__string",
          "location": "uri",
          "locationName": "resourceIdentifier",
          "documentation": "The resource ARN or component Id to get"
        }
      },
      "required": [
        "ReadinessCheckName",
        "ResourceIdentifier"
      ]
    },
    "GetReadinessCheckResourceStatusResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "Readiness": {
          "shape": "Readiness",
          "locationName": "readiness",
          "documentation": "The readiness at rule level."
        },
        "Rules": {
          "shape": "__listOfRuleResult",
          "locationName": "rules",
          "documentation": "Details of the rules's results"
        }
      }
    },
    "GetReadinessCheckResponse": {
      "type": "structure",
      "members": {
        "ReadinessCheckArn": {
          "shape": "__stringMax256",
          "locationName": "readinessCheckArn",
          "documentation": "Arn associated with ReadinessCheck"
        },
        "ReadinessCheckName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "readinessCheckName",
          "documentation": "Name for a ReadinessCheck"
        },
        "ResourceSet": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "resourceSet",
          "documentation": "Name of the ResourceSet to be checked"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "GetReadinessCheckStatusRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        },
        "ReadinessCheckName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "readinessCheckName",
          "documentation": "The ReadinessCheck to get"
        }
      },
      "required": [
        "ReadinessCheckName"
      ]
    },
    "GetReadinessCheckStatusResponse": {
      "type": "structure",
      "members": {
        "Messages": {
          "shape": "__listOfMessage",
          "locationName": "messages",
          "documentation": "Top level messages for readiness check status"
        },
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "Readiness": {
          "shape": "Readiness",
          "locationName": "readiness",
          "documentation": "The readiness at rule level."
        },
        "Resources": {
          "shape": "__listOfResourceResult",
          "locationName": "resources",
          "documentation": "Summary of resources's readiness"
        }
      }
    },
    "GetRecoveryGroupReadinessSummaryRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        },
        "RecoveryGroupName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "documentation": "The name of the RecoveryGroup"
        }
      },
      "required": [
        "RecoveryGroupName"
      ]
    },
    "GetRecoveryGroupReadinessSummaryResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "Readiness": {
          "shape": "Readiness",
          "locationName": "readiness",
          "documentation": "The readiness at RecoveryGroup level."
        },
        "ReadinessChecks": {
          "shape": "__listOfReadinessCheckSummary",
          "locationName": "readinessChecks",
          "documentation": "Summaries for the ReadinessChecks making up the RecoveryGroup"
        }
      }
    },
    "GetRecoveryGroupRequest": {
      "type": "structure",
      "members": {
        "RecoveryGroupName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "documentation": "The RecoveryGroup to get"
        }
      },
      "required": [
        "RecoveryGroupName"
      ]
    },
    "GetRecoveryGroupResponse": {
      "type": "structure",
      "members": {
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "RecoveryGroupArn": {
          "shape": "__stringMax256",
          "locationName": "recoveryGroupArn",
          "documentation": "The arn for the RecoveryGroup"
        },
        "RecoveryGroupName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "recoveryGroupName",
          "documentation": "The name of the RecoveryGroup"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "GetResourceSetRequest": {
      "type": "structure",
      "members": {
        "ResourceSetName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "resourceSetName",
          "documentation": "The ResourceSet to get"
        }
      },
      "required": [
        "ResourceSetName"
      ]
    },
    "GetResourceSetResponse": {
      "type": "structure",
      "members": {
        "ResourceSetArn": {
          "shape": "__stringMax256",
          "locationName": "resourceSetArn",
          "documentation": "The arn for the ResourceSet"
        },
        "ResourceSetName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "resourceSetName",
          "documentation": "The name of the ResourceSet"
        },
        "ResourceSetType": {
          "shape": "__stringPatternAWSAZaZ09AZaZ09",
          "locationName": "resourceSetType",
          "documentation": "AWS Resource Type of the resources in the ResourceSet"
        },
        "Resources": {
          "shape": "__listOfResource",
          "locationName": "resources",
          "documentation": "A list of Resource objects"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "InternalServerException": {
      "type": "structure",
      "exception": true,
      "error": {
        "httpStatusCode": 500
      },
      "documentation": "An unexpected error occurred.",
      "members": {
        "Message": {
          "shape": "__string",
          "locationName": "message"
        }
      }
    },
    "LastAuditTimestamp": {
      "type": "timestamp",
      "documentation": "The time a Recovery Group was last assessed for recommendations in UTC ISO-8601 format",
      "timestampFormat": "iso8601"
    },
    "ListCellsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        }
      }
    },
    "ListCellsResponse": {
      "type": "structure",
      "members": {
        "Cells": {
          "shape": "__listOfCellOutput",
          "locationName": "cells",
          "documentation": "A list of Cells"
        },
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        }
      }
    },
    "ListCrossAccountAuthorizationsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        }
      }
    },
    "ListCrossAccountAuthorizationsResponse": {
      "type": "structure",
      "members": {
        "CrossAccountAuthorizations": {
          "shape": "__listOfCrossAccountAuthorization",
          "locationName": "crossAccountAuthorizations",
          "documentation": "A list of CrossAccountAuthorizations"
        },
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        }
      }
    },
    "ListReadinessChecksRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        }
      }
    },
    "ListReadinessChecksResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "ReadinessChecks": {
          "shape": "__listOfReadinessCheckOutput",
          "locationName": "readinessChecks",
          "documentation": "A list of ReadinessCheck associated with the account"
        }
      }
    },
    "ListRecoveryGroupsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        }
      }
    },
    "ListRecoveryGroupsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "RecoveryGroups": {
          "shape": "__listOfRecoveryGroupOutput",
          "locationName": "recoveryGroups",
          "documentation": "A list of RecoveryGroups"
        }
      }
    },
    "ListResourceSetsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        }
      }
    },
    "ListResourceSetsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "ResourceSets": {
          "shape": "__listOfResourceSetOutput",
          "locationName": "resourceSets",
          "documentation": "A list of ResourceSets associated with the account"
        }
      }
    },
    "ListRulesOutput": {
      "type": "structure",
      "members": {
        "ResourceType": {
          "shape": "__stringMax64",
          "locationName": "resourceType",
          "documentation": "The resource type the rule applies to."
        },
        "RuleDescription": {
          "shape": "__stringMax256",
          "locationName": "ruleDescription",
          "documentation": "A description of the rule"
        },
        "RuleId": {
          "shape": "__stringMax64",
          "locationName": "ruleId",
          "documentation": "The Rule's ID."
        }
      },
      "documentation": "A collection of rules used in a readiness check",
      "required": [
        "RuleDescription",
        "RuleId",
        "ResourceType"
      ]
    },
    "ListRulesRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "MaxResults",
          "location": "querystring",
          "locationName": "maxResults",
          "documentation": "Upper bound on number of records to return."
        },
        "NextToken": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "nextToken",
          "documentation": "A token used to resume pagination from the end of a previous request."
        },
        "ResourceType": {
          "shape": "__string",
          "location": "querystring",
          "locationName": "resourceType",
          "documentation": "Filter parameter which specifies the rules to return given a resource type."
        }
      }
    },
    "ListRulesResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "__string",
          "locationName": "nextToken",
          "documentation": "A token that can be used to resume pagination from the end of the collection."
        },
        "Rules": {
          "shape": "__listOfListRulesOutput",
          "locationName": "rules",
          "documentation": "A list of rules"
        }
      }
    },
    "ListTagsForResourcesRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "shape": "__string",
          "location": "uri",
          "locationName": "resource-arn",
          "documentation": "The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource."
        }
      },
      "required": [
        "ResourceArn"
      ]
    },
    "ListTagsForResourcesResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "MaxResults": {
      "type": "integer",
      "min": 1,
      "max": 1000
    },
    "Message": {
      "type": "structure",
      "members": {
        "MessageText": {
          "shape": "__string",
          "locationName": "messageText",
          "documentation": "The text of a readiness check message"
        }
      },
      "documentation": "Information relating to readiness check status"
    },
    "NLBResource": {
      "type": "structure",
      "members": {
        "Arn": {
          "shape": "__string",
          "locationName": "arn",
          "documentation": "An NLB resource arn"
        }
      },
      "documentation": "The NLB resource a DNS Target Resource points to"
    },
    "R53ResourceRecord": {
      "type": "structure",
      "members": {
        "DomainName": {
          "shape": "__string",
          "locationName": "domainName",
          "documentation": "The DNS target name"
        },
        "RecordSetId": {
          "shape": "__string",
          "locationName": "recordSetId",
          "documentation": "The Resource Record set id"
        }
      },
      "documentation": "The Route 53 resource a DNS Target Resource record points to"
    },
    "Readiness": {
      "type": "string",
      "documentation": "The readiness of an entire ReadinessCheck or an individual resource ARN.",
      "enum": [
        "READY",
        "NOT_READY",
        "UNKNOWN",
        "NOT_AUTHORIZED"
      ]
    },
    "ReadinessCheckOutput": {
      "type": "structure",
      "members": {
        "ReadinessCheckArn": {
          "shape": "__stringMax256",
          "locationName": "readinessCheckArn",
          "documentation": "Arn associated with ReadinessCheck"
        },
        "ReadinessCheckName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "readinessCheckName",
          "documentation": "Name for a ReadinessCheck"
        },
        "ResourceSet": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "resourceSet",
          "documentation": "Name of the ResourceSet to be checked"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "documentation": "A resource used for checking the readiness of a Resource Set",
      "required": [
        "ReadinessCheckArn",
        "ResourceSet"
      ]
    },
    "ReadinessCheckSummary": {
      "type": "structure",
      "members": {
        "Readiness": {
          "shape": "Readiness",
          "locationName": "readiness",
          "documentation": "The readiness of this ReadinessCheck"
        },
        "ReadinessCheckName": {
          "shape": "__string",
          "locationName": "readinessCheckName",
          "documentation": "The name of a ReadinessCheck which is part of the given RecoveryGroup or Cell"
        }
      },
      "documentation": "Summary of ReadinessCheck status, paginated in GetRecoveryGroupReadinessSummary and GetCellReadinessSummary"
    },
    "ReadinessCheckTimestamp": {
      "type": "timestamp",
      "documentation": "The time the Cell was last checked for readiness, in ISO-8601 format, UTC.",
      "timestampFormat": "iso8601"
    },
    "Recommendation": {
      "type": "structure",
      "members": {
        "RecommendationText": {
          "shape": "__string",
          "locationName": "recommendationText",
          "documentation": "Guidance text for recommendation"
        }
      },
      "documentation": "Guidance for improving Recovery Group resilliancy",
      "required": [
        "RecommendationText"
      ]
    },
    "RecoveryGroupOutput": {
      "type": "structure",
      "members": {
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "RecoveryGroupArn": {
          "shape": "__stringMax256",
          "locationName": "recoveryGroupArn",
          "documentation": "The arn for the RecoveryGroup"
        },
        "RecoveryGroupName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "recoveryGroupName",
          "documentation": "The name of the RecoveryGroup"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "documentation": "A Recovery Group generally containing multiple Cells",
      "required": [
        "RecoveryGroupArn",
        "RecoveryGroupName",
        "Cells"
      ]
    },
    "Resource": {
      "type": "structure",
      "members": {
        "ComponentId": {
          "shape": "__string",
          "locationName": "componentId",
          "documentation": "The component id of the resource, generated by the service when dnsTargetResource is used"
        },
        "DnsTargetResource": {
          "shape": "DNSTargetResource",
          "locationName": "dnsTargetResource"
        },
        "ReadinessScopes": {
          "shape": "__listOf__string",
          "locationName": "readinessScopes",
          "documentation": "A list of RecoveryGroup ARNs and/or Cell ARNs that this resource is contained within."
        },
        "ResourceArn": {
          "shape": "__string",
          "locationName": "resourceArn",
          "documentation": "The ARN of the AWS resource, can be skipped if dnsTargetResource is used"
        }
      },
      "documentation": "The resource element of a ResourceSet"
    },
    "ResourceNotFoundException": {
      "type": "structure",
      "exception": true,
      "error": {
        "httpStatusCode": 404
      },
      "documentation": "The requested resource does not exist.",
      "members": {
        "Message": {
          "shape": "__string",
          "locationName": "message"
        }
      }
    },
    "ResourceResult": {
      "type": "structure",
      "members": {
        "ComponentId": {
          "shape": "__string",
          "locationName": "componentId",
          "documentation": "The component id of the resource"
        },
        "LastCheckedTimestamp": {
          "shape": "ReadinessCheckTimestamp",
          "locationName": "lastCheckedTimestamp",
          "documentation": "The time the resource was last checked for readiness, in ISO-8601 format, UTC."
        },
        "Readiness": {
          "shape": "Readiness",
          "locationName": "readiness",
          "documentation": "The readiness of the resource."
        },
        "ResourceArn": {
          "shape": "__string",
          "locationName": "resourceArn",
          "documentation": "The ARN of the resource"
        }
      },
      "documentation": "Result with status for an individual resource.",
      "required": [
        "Readiness",
        "LastCheckedTimestamp"
      ]
    },
    "ResourceSetOutput": {
      "type": "structure",
      "members": {
        "ResourceSetArn": {
          "shape": "__stringMax256",
          "locationName": "resourceSetArn",
          "documentation": "The arn for the ResourceSet"
        },
        "ResourceSetName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "resourceSetName",
          "documentation": "The name of the ResourceSet"
        },
        "ResourceSetType": {
          "shape": "__stringPatternAWSAZaZ09AZaZ09",
          "locationName": "resourceSetType",
          "documentation": "AWS Resource Type of the resources in the ResourceSet"
        },
        "Resources": {
          "shape": "__listOfResource",
          "locationName": "resources",
          "documentation": "A list of Resource objects"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "documentation": "A collection of resources of the same type",
      "required": [
        "ResourceSetType",
        "ResourceSetName",
        "ResourceSetArn",
        "Resources"
      ]
    },
    "RuleResult": {
      "type": "structure",
      "members": {
        "LastCheckedTimestamp": {
          "shape": "ReadinessCheckTimestamp",
          "locationName": "lastCheckedTimestamp",
          "documentation": "The time the resource was last checked for readiness, in ISO-8601 format, UTC."
        },
        "Messages": {
          "shape": "__listOfMessage",
          "locationName": "messages",
          "documentation": "Details about the resource's readiness"
        },
        "Readiness": {
          "shape": "Readiness",
          "locationName": "readiness",
          "documentation": "The readiness at rule level."
        },
        "RuleId": {
          "shape": "__string",
          "locationName": "ruleId",
          "documentation": "The identifier of the rule."
        }
      },
      "documentation": "Result with status for an individual rule..",
      "required": [
        "Messages",
        "Readiness",
        "RuleId",
        "LastCheckedTimestamp"
      ]
    },
    "TagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "shape": "__string",
          "location": "uri",
          "locationName": "resource-arn",
          "documentation": "The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource."
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ]
    },
    "TagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "Tags": {
      "type": "map",
      "documentation": "A collection of tags associated with a resource",
      "key": {
        "shape": "__string"
      },
      "value": {
        "shape": "__string"
      }
    },
    "TargetResource": {
      "type": "structure",
      "members": {
        "NLBResource": {
          "shape": "NLBResource",
          "locationName": "nLBResource"
        },
        "R53Resource": {
          "shape": "R53ResourceRecord",
          "locationName": "r53Resource"
        }
      },
      "documentation": "The target resource the R53 record points to"
    },
    "ThrottlingException": {
      "type": "structure",
      "exception": true,
      "error": {
        "httpStatusCode": 429
      },
      "documentation": "Request was denied due to request throttling.",
      "members": {
        "Message": {
          "shape": "__string",
          "locationName": "message"
        }
      }
    },
    "UntagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "shape": "__string",
          "location": "uri",
          "locationName": "resource-arn",
          "documentation": "The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource."
        },
        "TagKeys": {
          "shape": "__listOf__string",
          "location": "querystring",
          "locationName": "tagKeys",
          "documentation": "A comma-separated list of the tag keys to remove from the resource."
        }
      },
      "required": [
        "TagKeys",
        "ResourceArn"
      ]
    },
    "UpdateCellRequest": {
      "type": "structure",
      "members": {
        "CellName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "cellName",
          "documentation": "The Cell to update"
        },
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns, completely replaces previous list"
        }
      },
      "documentation": "Parameters to update for the Cell",
      "required": [
        "CellName",
        "Cells"
      ]
    },
    "UpdateCellResponse": {
      "type": "structure",
      "members": {
        "CellArn": {
          "shape": "__stringMax256",
          "locationName": "cellArn",
          "documentation": "The arn for the Cell"
        },
        "CellName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "cellName",
          "documentation": "The name of the Cell"
        },
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "ParentReadinessScopes": {
          "shape": "__listOf__string",
          "locationName": "parentReadinessScopes",
          "documentation": "A list of Cell ARNs and/or RecoveryGroup ARNs"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "UpdateReadinessCheckRequest": {
      "type": "structure",
      "members": {
        "ReadinessCheckName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "readinessCheckName",
          "documentation": "The ReadinessCheck to update"
        },
        "ResourceSetName": {
          "shape": "__string",
          "locationName": "resourceSetName",
          "documentation": "The name of the ResourceSet to check"
        }
      },
      "documentation": "The new Readiness Check values",
      "required": [
        "ReadinessCheckName",
        "ResourceSetName"
      ]
    },
    "UpdateReadinessCheckResponse": {
      "type": "structure",
      "members": {
        "ReadinessCheckArn": {
          "shape": "__stringMax256",
          "locationName": "readinessCheckArn",
          "documentation": "Arn associated with ReadinessCheck"
        },
        "ReadinessCheckName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "readinessCheckName",
          "documentation": "Name for a ReadinessCheck"
        },
        "ResourceSet": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "resourceSet",
          "documentation": "Name of the ResourceSet to be checked"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "UpdateRecoveryGroupRequest": {
      "type": "structure",
      "members": {
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns, completely replaces previous list"
        },
        "RecoveryGroupName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "documentation": "The RecoveryGroup to update"
        }
      },
      "documentation": "Parameters to update for the RecoveryGroup",
      "required": [
        "RecoveryGroupName",
        "Cells"
      ]
    },
    "UpdateRecoveryGroupResponse": {
      "type": "structure",
      "members": {
        "Cells": {
          "shape": "__listOf__string",
          "locationName": "cells",
          "documentation": "A list of Cell arns"
        },
        "RecoveryGroupArn": {
          "shape": "__stringMax256",
          "locationName": "recoveryGroupArn",
          "documentation": "The arn for the RecoveryGroup"
        },
        "RecoveryGroupName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "recoveryGroupName",
          "documentation": "The name of the RecoveryGroup"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "UpdateResourceSetRequest": {
      "type": "structure",
      "members": {
        "ResourceSetName": {
          "shape": "__string",
          "location": "uri",
          "locationName": "resourceSetName",
          "documentation": "The ResourceSet to update"
        },
        "ResourceSetType": {
          "shape": "__stringPatternAWSAZaZ09AZaZ09",
          "locationName": "resourceSetType",
          "documentation": "AWS Resource Type of the resources in the ResourceSet"
        },
        "Resources": {
          "shape": "__listOfResource",
          "locationName": "resources",
          "documentation": "A list of Resource objects"
        }
      },
      "documentation": "configuration for the desired",
      "required": [
        "ResourceSetName",
        "ResourceSetType",
        "Resources"
      ]
    },
    "UpdateResourceSetResponse": {
      "type": "structure",
      "members": {
        "ResourceSetArn": {
          "shape": "__stringMax256",
          "locationName": "resourceSetArn",
          "documentation": "The arn for the ResourceSet"
        },
        "ResourceSetName": {
          "shape": "__stringMax64PatternAAZAZ09Z",
          "locationName": "resourceSetName",
          "documentation": "The name of the ResourceSet"
        },
        "ResourceSetType": {
          "shape": "__stringPatternAWSAZaZ09AZaZ09",
          "locationName": "resourceSetType",
          "documentation": "AWS Resource Type of the resources in the ResourceSet"
        },
        "Resources": {
          "shape": "__listOfResource",
          "locationName": "resources",
          "documentation": "A list of Resource objects"
        },
        "Tags": {
          "shape": "Tags",
          "locationName": "tags"
        }
      }
    },
    "ValidationException": {
      "type": "structure",
      "exception": true,
      "error": {
        "httpStatusCode": 400
      },
      "documentation": "The input fails to satisfy the constraints specified by an AWS service.",
      "members": {
        "Message": {
          "shape": "__string",
          "locationName": "message"
        }
      }
    },
    "__listOfCellOutput": {
      "type": "list",
      "member": {
        "shape": "CellOutput"
      }
    },
    "__listOfCrossAccountAuthorization": {
      "type": "list",
      "member": {
        "shape": "CrossAccountAuthorization"
      }
    },
    "__listOfListRulesOutput": {
      "type": "list",
      "member": {
        "shape": "ListRulesOutput"
      }
    },
    "__listOfMessage": {
      "type": "list",
      "member": {
        "shape": "Message"
      }
    },
    "__listOfReadinessCheckOutput": {
      "type": "list",
      "member": {
        "shape": "ReadinessCheckOutput"
      }
    },
    "__listOfReadinessCheckSummary": {
      "type": "list",
      "member": {
        "shape": "ReadinessCheckSummary"
      }
    },
    "__listOfRecommendation": {
      "type": "list",
      "member": {
        "shape": "Recommendation"
      }
    },
    "__listOfRecoveryGroupOutput": {
      "type": "list",
      "member": {
        "shape": "RecoveryGroupOutput"
      }
    },
    "__listOfResource": {
      "type": "list",
      "member": {
        "shape": "Resource"
      }
    },
    "__listOfResourceResult": {
      "type": "list",
      "member": {
        "shape": "ResourceResult"
      }
    },
    "__listOfResourceSetOutput": {
      "type": "list",
      "member": {
        "shape": "ResourceSetOutput"
      }
    },
    "__listOfRuleResult": {
      "type": "list",
      "member": {
        "shape": "RuleResult"
      }
    },
    "__listOf__string": {
      "type": "list",
      "member": {
        "shape": "__string"
      }
    },
    "__string": {
      "type": "string"
    },
    "__stringMax256": {
      "type": "string",
      "max": 256
    },
    "__stringMax64": {
      "type": "string",
      "max": 64
    },
    "__stringMax64PatternAAZAZ09Z": {
      "type": "string",
      "max": 64,
      "pattern": "\\A[a-zA-Z0-9_]+\\z"
    },
    "__stringPatternAWSAZaZ09AZaZ09": {
      "type": "string",
      "pattern": "AWS::[A-Za-z0-9]+::[A-Za-z0-9]+"
    }
  },
  "documentation": "AWS Route53 Recovery Readiness"
}
