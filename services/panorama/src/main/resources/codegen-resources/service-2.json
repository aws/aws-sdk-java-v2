{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2019-07-24",
    "endpointPrefix":"panorama",
    "jsonVersion":"1.1",
    "protocol":"rest-json",
    "serviceAbbreviation":"Panorama",
    "serviceFullName":"AWS Panorama",
    "serviceId":"Panorama",
    "signatureVersion":"v4",
    "signingName":"panorama",
    "uid":"panorama-2019-07-24"
  },
  "operations":{
    "CreateApplicationInstance":{
      "name":"CreateApplicationInstance",
      "http":{
        "method":"POST",
        "requestUri":"/application-instances"
      },
      "input":{"shape":"CreateApplicationInstanceRequest"},
      "output":{"shape":"CreateApplicationInstanceResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates an application instance and deploys it to a device.</p>"
    },
    "CreateJobForDevices":{
      "name":"CreateJobForDevices",
      "http":{
        "method":"POST",
        "requestUri":"/jobs"
      },
      "input":{"shape":"CreateJobForDevicesRequest"},
      "output":{"shape":"CreateJobForDevicesResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Creates a job to run on one or more devices.</p>"
    },
    "CreateNodeFromTemplateJob":{
      "name":"CreateNodeFromTemplateJob",
      "http":{
        "method":"POST",
        "requestUri":"/packages/template-job"
      },
      "input":{"shape":"CreateNodeFromTemplateJobRequest"},
      "output":{"shape":"CreateNodeFromTemplateJobResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Creates a camera stream node.</p>"
    },
    "CreatePackage":{
      "name":"CreatePackage",
      "http":{
        "method":"POST",
        "requestUri":"/packages"
      },
      "input":{"shape":"CreatePackageRequest"},
      "output":{"shape":"CreatePackageResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Creates a package and storage location in an Amazon S3 access point.</p>"
    },
    "CreatePackageImportJob":{
      "name":"CreatePackageImportJob",
      "http":{
        "method":"POST",
        "requestUri":"/packages/import-jobs"
      },
      "input":{"shape":"CreatePackageImportJobRequest"},
      "output":{"shape":"CreatePackageImportJobResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Imports a node package.</p>"
    },
    "DeleteDevice":{
      "name":"DeleteDevice",
      "http":{
        "method":"DELETE",
        "requestUri":"/devices/{DeviceId}"
      },
      "input":{"shape":"DeleteDeviceRequest"},
      "output":{"shape":"DeleteDeviceResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Deletes a device.</p>"
    },
    "DeletePackage":{
      "name":"DeletePackage",
      "http":{
        "method":"DELETE",
        "requestUri":"/packages/{PackageId}"
      },
      "input":{"shape":"DeletePackageRequest"},
      "output":{"shape":"DeletePackageResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Deletes a package.</p>"
    },
    "DeregisterPackageVersion":{
      "name":"DeregisterPackageVersion",
      "http":{
        "method":"DELETE",
        "requestUri":"/packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}"
      },
      "input":{"shape":"DeregisterPackageVersionRequest"},
      "output":{"shape":"DeregisterPackageVersionResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Deregisters a package version.</p>"
    },
    "DescribeApplicationInstance":{
      "name":"DescribeApplicationInstance",
      "http":{
        "method":"GET",
        "requestUri":"/application-instances/{applicationInstanceId}"
      },
      "input":{"shape":"DescribeApplicationInstanceRequest"},
      "output":{"shape":"DescribeApplicationInstanceResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns information about an application instance on a device.</p>"
    },
    "DescribeApplicationInstanceDetails":{
      "name":"DescribeApplicationInstanceDetails",
      "http":{
        "method":"GET",
        "requestUri":"/application-instances/{applicationInstanceId}/details"
      },
      "input":{"shape":"DescribeApplicationInstanceDetailsRequest"},
      "output":{"shape":"DescribeApplicationInstanceDetailsResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns information about an application instance's configuration manifest.</p>"
    },
    "DescribeDevice":{
      "name":"DescribeDevice",
      "http":{
        "method":"GET",
        "requestUri":"/devices/{DeviceId}"
      },
      "input":{"shape":"DescribeDeviceRequest"},
      "output":{"shape":"DescribeDeviceResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns information about a device.</p>"
    },
    "DescribeDeviceJob":{
      "name":"DescribeDeviceJob",
      "http":{
        "method":"GET",
        "requestUri":"/jobs/{JobId}"
      },
      "input":{"shape":"DescribeDeviceJobRequest"},
      "output":{"shape":"DescribeDeviceJobResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns information about a device job.</p>"
    },
    "DescribeNode":{
      "name":"DescribeNode",
      "http":{
        "method":"GET",
        "requestUri":"/nodes/{NodeId}"
      },
      "input":{"shape":"DescribeNodeRequest"},
      "output":{"shape":"DescribeNodeResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns information about a node.</p>"
    },
    "DescribeNodeFromTemplateJob":{
      "name":"DescribeNodeFromTemplateJob",
      "http":{
        "method":"GET",
        "requestUri":"/packages/template-job/{JobId}"
      },
      "input":{"shape":"DescribeNodeFromTemplateJobRequest"},
      "output":{"shape":"DescribeNodeFromTemplateJobResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Returns information about a job to create a camera stream node.</p>"
    },
    "DescribePackage":{
      "name":"DescribePackage",
      "http":{
        "method":"GET",
        "requestUri":"/packages/metadata/{PackageId}"
      },
      "input":{"shape":"DescribePackageRequest"},
      "output":{"shape":"DescribePackageResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns information about a package.</p>"
    },
    "DescribePackageImportJob":{
      "name":"DescribePackageImportJob",
      "http":{
        "method":"GET",
        "requestUri":"/packages/import-jobs/{JobId}"
      },
      "input":{"shape":"DescribePackageImportJobRequest"},
      "output":{"shape":"DescribePackageImportJobResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Returns information about a package import job.</p>"
    },
    "DescribePackageVersion":{
      "name":"DescribePackageVersion",
      "http":{
        "method":"GET",
        "requestUri":"/packages/metadata/{PackageId}/versions/{PackageVersion}"
      },
      "input":{"shape":"DescribePackageVersionRequest"},
      "output":{"shape":"DescribePackageVersionResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns information about a package version.</p>"
    },
    "ListApplicationInstanceDependencies":{
      "name":"ListApplicationInstanceDependencies",
      "http":{
        "method":"GET",
        "requestUri":"/application-instances/{applicationInstanceId}/package-dependencies"
      },
      "input":{"shape":"ListApplicationInstanceDependenciesRequest"},
      "output":{"shape":"ListApplicationInstanceDependenciesResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a list of application instance dependencies.</p>"
    },
    "ListApplicationInstanceNodeInstances":{
      "name":"ListApplicationInstanceNodeInstances",
      "http":{
        "method":"GET",
        "requestUri":"/application-instances/{applicationInstanceId}/node-instances"
      },
      "input":{"shape":"ListApplicationInstanceNodeInstancesRequest"},
      "output":{"shape":"ListApplicationInstanceNodeInstancesResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a list of application node instances.</p>"
    },
    "ListApplicationInstances":{
      "name":"ListApplicationInstances",
      "http":{
        "method":"GET",
        "requestUri":"/application-instances"
      },
      "input":{"shape":"ListApplicationInstancesRequest"},
      "output":{"shape":"ListApplicationInstancesResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a list of application instances.</p>"
    },
    "ListDevices":{
      "name":"ListDevices",
      "http":{
        "method":"GET",
        "requestUri":"/devices"
      },
      "input":{"shape":"ListDevicesRequest"},
      "output":{"shape":"ListDevicesResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Returns a list of devices.</p>"
    },
    "ListDevicesJobs":{
      "name":"ListDevicesJobs",
      "http":{
        "method":"GET",
        "requestUri":"/jobs"
      },
      "input":{"shape":"ListDevicesJobsRequest"},
      "output":{"shape":"ListDevicesJobsResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns a list of jobs.</p>"
    },
    "ListNodeFromTemplateJobs":{
      "name":"ListNodeFromTemplateJobs",
      "http":{
        "method":"GET",
        "requestUri":"/packages/template-job"
      },
      "input":{"shape":"ListNodeFromTemplateJobsRequest"},
      "output":{"shape":"ListNodeFromTemplateJobsResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Returns a list of camera stream node jobs.</p>"
    },
    "ListNodes":{
      "name":"ListNodes",
      "http":{
        "method":"GET",
        "requestUri":"/nodes"
      },
      "input":{"shape":"ListNodesRequest"},
      "output":{"shape":"ListNodesResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a list of nodes.</p>"
    },
    "ListPackageImportJobs":{
      "name":"ListPackageImportJobs",
      "http":{
        "method":"GET",
        "requestUri":"/packages/import-jobs"
      },
      "input":{"shape":"ListPackageImportJobsRequest"},
      "output":{"shape":"ListPackageImportJobsResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Returns a list of package import jobs.</p>"
    },
    "ListPackages":{
      "name":"ListPackages",
      "http":{
        "method":"GET",
        "requestUri":"/packages"
      },
      "input":{"shape":"ListPackagesRequest"},
      "output":{"shape":"ListPackagesResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Returns a list of packages.</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{ResourceArn}"
      },
      "input":{"shape":"ListTagsForResourceRequest"},
      "output":{"shape":"ListTagsForResourceResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a list of tags for a resource.</p>"
    },
    "ProvisionDevice":{
      "name":"ProvisionDevice",
      "http":{
        "method":"POST",
        "requestUri":"/devices"
      },
      "input":{"shape":"ProvisionDeviceRequest"},
      "output":{"shape":"ProvisionDeviceResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a device and returns a configuration archive. The configuration archive is a ZIP file that contains a provisioning certificate that is valid for 5 minutes. Transfer the configuration archive to the device with the included USB storage device within 5 minutes.</p>"
    },
    "RegisterPackageVersion":{
      "name":"RegisterPackageVersion",
      "http":{
        "method":"PUT",
        "requestUri":"/packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}"
      },
      "input":{"shape":"RegisterPackageVersionRequest"},
      "output":{"shape":"RegisterPackageVersionResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Registers a package version.</p>"
    },
    "RemoveApplicationInstance":{
      "name":"RemoveApplicationInstance",
      "http":{
        "method":"DELETE",
        "requestUri":"/application-instances/{applicationInstanceId}"
      },
      "input":{"shape":"RemoveApplicationInstanceRequest"},
      "output":{"shape":"RemoveApplicationInstanceResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Removes an application instance.</p>"
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{ResourceArn}"
      },
      "input":{"shape":"TagResourceRequest"},
      "output":{"shape":"TagResourceResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Tags a resource.</p>"
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{ResourceArn}"
      },
      "input":{"shape":"UntagResourceRequest"},
      "output":{"shape":"UntagResourceResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Removes tags from a resource.</p>"
    },
    "UpdateDeviceMetadata":{
      "name":"UpdateDeviceMetadata",
      "http":{
        "method":"PUT",
        "requestUri":"/devices/{DeviceId}"
      },
      "input":{"shape":"UpdateDeviceMetadataRequest"},
      "output":{"shape":"UpdateDeviceMetadataResponse"},
      "errors":[
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Updates a device's metadata.</p>"
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p>The requestor does not have permission to access the target action or resource.</p>",
      "error":{"httpStatusCode":403},
      "exception":true
    },
    "ApplicationInstance":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"ApplicationInstanceName",
          "documentation":"<p>The application instance's name.</p>"
        },
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The application instance's ID.</p>"
        },
        "DefaultRuntimeContextDevice":{
          "shape":"DefaultRuntimeContextDevice",
          "documentation":"<p>The device's ID.</p>"
        },
        "DefaultRuntimeContextDeviceName":{
          "shape":"DeviceName",
          "documentation":"<p>The device's name.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>The application instance's description.</p>"
        },
        "Status":{
          "shape":"ApplicationInstanceStatus",
          "documentation":"<p>The application instance's status.</p>"
        },
        "HealthStatus":{
          "shape":"ApplicationInstanceHealthStatus",
          "documentation":"<p>The application instance's health status.</p>"
        },
        "StatusDescription":{
          "shape":"ApplicationInstanceStatusDescription",
          "documentation":"<p>The application instance's status description.</p>"
        },
        "CreatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>When the application instance was created.</p>"
        },
        "Arn":{
          "shape":"ApplicationInstanceArn",
          "documentation":"<p>The application instance's ARN.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The application instance's tags.</p>"
        }
      },
      "documentation":"<p>An application instance on a device.</p>"
    },
    "ApplicationInstanceArn":{
      "type":"string",
      "max":255,
      "min":1
    },
    "ApplicationInstanceHealthStatus":{
      "type":"string",
      "enum":[
        "RUNNING",
        "ERROR",
        "NOT_AVAILABLE"
      ]
    },
    "ApplicationInstanceId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "ApplicationInstanceName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "ApplicationInstanceStatus":{
      "type":"string",
      "enum":[
        "DEPLOYMENT_PENDING",
        "DEPLOYMENT_REQUESTED",
        "DEPLOYMENT_IN_PROGRESS",
        "DEPLOYMENT_ERROR",
        "DEPLOYMENT_SUCCEEDED",
        "REMOVAL_PENDING",
        "REMOVAL_REQUESTED",
        "REMOVAL_IN_PROGRESS",
        "REMOVAL_FAILED",
        "REMOVAL_SUCCEEDED"
      ]
    },
    "ApplicationInstanceStatusDescription":{
      "type":"string",
      "max":255,
      "min":1
    },
    "ApplicationInstances":{
      "type":"list",
      "member":{"shape":"ApplicationInstance"}
    },
    "Boolean":{"type":"boolean"},
    "Bucket":{"type":"string"},
    "BucketName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$"
    },
    "Certificates":{"type":"blob"},
    "ClientToken":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "ConflictException":{
      "type":"structure",
      "required":[
        "Message",
        "ResourceId",
        "ResourceType"
      ],
      "members":{
        "Message":{"shape":"String"},
        "ResourceId":{
          "shape":"String",
          "documentation":"<p>The resource's ID.</p>"
        },
        "ResourceType":{
          "shape":"String",
          "documentation":"<p>The resource's type.</p>"
        },
        "ErrorId":{
          "shape":"String",
          "documentation":"<p>A unique ID for the error.</p>"
        },
        "ErrorArguments":{
          "shape":"ConflictExceptionErrorArgumentList",
          "documentation":"<p>A list of attributes that led to the exception and their values.</p>"
        }
      },
      "documentation":"<p>The target resource is in use.</p>",
      "error":{"httpStatusCode":409},
      "exception":true
    },
    "ConflictExceptionErrorArgument":{
      "type":"structure",
      "required":[
        "Name",
        "Value"
      ],
      "members":{
        "Name":{
          "shape":"String",
          "documentation":"<p>The error argument's name.</p>"
        },
        "Value":{
          "shape":"String",
          "documentation":"<p>The error argument's value.</p>"
        }
      },
      "documentation":"<p>A conflict exception error argument.</p>"
    },
    "ConflictExceptionErrorArgumentList":{
      "type":"list",
      "member":{"shape":"ConflictExceptionErrorArgument"}
    },
    "ConnectionType":{
      "type":"string",
      "enum":[
        "STATIC_IP",
        "DHCP"
      ]
    },
    "CreateApplicationInstanceRequest":{
      "type":"structure",
      "required":[
        "ManifestPayload",
        "DefaultRuntimeContextDevice"
      ],
      "members":{
        "Name":{
          "shape":"ApplicationInstanceName",
          "documentation":"<p>A name for the application instance.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>A description for the application instance.</p>"
        },
        "ManifestPayload":{
          "shape":"ManifestPayload",
          "documentation":"<p>The application's manifest document.</p>"
        },
        "ManifestOverridesPayload":{
          "shape":"ManifestOverridesPayload",
          "documentation":"<p>Setting overrides for the application manifest.</p>"
        },
        "ApplicationInstanceIdToReplace":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The ID of an application instance to replace with the new instance.</p>"
        },
        "RuntimeRoleArn":{
          "shape":"RuntimeRoleArn",
          "documentation":"<p>The ARN of a runtime role for the application instance.</p>"
        },
        "DefaultRuntimeContextDevice":{
          "shape":"DefaultRuntimeContextDevice",
          "documentation":"<p>A device's ID.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>Tags for the application instance.</p>"
        }
      }
    },
    "CreateApplicationInstanceResponse":{
      "type":"structure",
      "required":["ApplicationInstanceId"],
      "members":{
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The application instance's ID.</p>"
        }
      }
    },
    "CreateJobForDevicesRequest":{
      "type":"structure",
      "required":[
        "DeviceIds",
        "DeviceJobConfig",
        "JobType"
      ],
      "members":{
        "DeviceIds":{
          "shape":"DeviceIdList",
          "documentation":"<p>IDs of target devices.</p>"
        },
        "DeviceJobConfig":{
          "shape":"DeviceJobConfig",
          "documentation":"<p>Configuration settings for the job.</p>"
        },
        "JobType":{
          "shape":"JobType",
          "documentation":"<p>The type of job to run.</p>"
        }
      }
    },
    "CreateJobForDevicesResponse":{
      "type":"structure",
      "required":["Jobs"],
      "members":{
        "Jobs":{
          "shape":"JobList",
          "documentation":"<p>A list of jobs.</p>"
        }
      }
    },
    "CreateNodeFromTemplateJobRequest":{
      "type":"structure",
      "required":[
        "TemplateType",
        "OutputPackageName",
        "OutputPackageVersion",
        "NodeName",
        "TemplateParameters"
      ],
      "members":{
        "TemplateType":{
          "shape":"TemplateType",
          "documentation":"<p>The type of node.</p>"
        },
        "OutputPackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>An output package name for the node.</p>"
        },
        "OutputPackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>An output package version for the node.</p>"
        },
        "NodeName":{
          "shape":"NodeName",
          "documentation":"<p>A name for the node.</p>"
        },
        "NodeDescription":{
          "shape":"Description",
          "documentation":"<p>A description for the node.</p>"
        },
        "TemplateParameters":{
          "shape":"TemplateParametersMap",
          "documentation":"<p>Template parameters for the node.</p>"
        },
        "JobTags":{
          "shape":"JobTagsList",
          "documentation":"<p>Tags for the job.</p>"
        }
      }
    },
    "CreateNodeFromTemplateJobResponse":{
      "type":"structure",
      "required":["JobId"],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        }
      }
    },
    "CreatePackageImportJobRequest":{
      "type":"structure",
      "required":[
        "JobType",
        "InputConfig",
        "OutputConfig",
        "ClientToken"
      ],
      "members":{
        "JobType":{
          "shape":"PackageImportJobType",
          "documentation":"<p>A job type for the package import job.</p>"
        },
        "InputConfig":{
          "shape":"PackageImportJobInputConfig",
          "documentation":"<p>An input config for the package import job.</p>"
        },
        "OutputConfig":{
          "shape":"PackageImportJobOutputConfig",
          "documentation":"<p>An output config for the package import job.</p>"
        },
        "ClientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A client token for the package import job.</p>"
        },
        "JobTags":{
          "shape":"JobTagsList",
          "documentation":"<p>Tags for the package import job.</p>"
        }
      }
    },
    "CreatePackageImportJobResponse":{
      "type":"structure",
      "required":["JobId"],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        }
      }
    },
    "CreatePackageRequest":{
      "type":"structure",
      "required":["PackageName"],
      "members":{
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>A name for the package.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>Tags for the package.</p>"
        }
      }
    },
    "CreatePackageResponse":{
      "type":"structure",
      "required":["StorageLocation"],
      "members":{
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The package's ID.</p>"
        },
        "Arn":{
          "shape":"NodePackageArn",
          "documentation":"<p>The package's ARN.</p>"
        },
        "StorageLocation":{
          "shape":"StorageLocation",
          "documentation":"<p>The package's storage location.</p>"
        }
      }
    },
    "CreatedTime":{"type":"timestamp"},
    "CurrentSoftware":{
      "type":"string",
      "max":255,
      "min":1
    },
    "DefaultGateway":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$"
    },
    "DefaultRuntimeContextDevice":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "DeleteDeviceRequest":{
      "type":"structure",
      "required":["DeviceId"],
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>",
          "location":"uri",
          "locationName":"DeviceId"
        }
      }
    },
    "DeleteDeviceResponse":{
      "type":"structure",
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>"
        }
      }
    },
    "DeletePackageRequest":{
      "type":"structure",
      "required":["PackageId"],
      "members":{
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The package's ID.</p>",
          "location":"uri",
          "locationName":"PackageId"
        },
        "ForceDelete":{
          "shape":"Boolean",
          "documentation":"<p>Delete the package even if it has artifacts stored in its access point. Deletes the package's artifacts from Amazon S3.</p>",
          "location":"querystring",
          "locationName":"ForceDelete"
        }
      }
    },
    "DeletePackageResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeregisterPackageVersionRequest":{
      "type":"structure",
      "required":[
        "PackageId",
        "PackageVersion",
        "PatchVersion"
      ],
      "members":{
        "OwnerAccount":{
          "shape":"PackageOwnerAccount",
          "documentation":"<p>An owner account.</p>",
          "location":"querystring",
          "locationName":"OwnerAccount"
        },
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>A package ID.</p>",
          "location":"uri",
          "locationName":"PackageId"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>A package version.</p>",
          "location":"uri",
          "locationName":"PackageVersion"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>A patch version.</p>",
          "location":"uri",
          "locationName":"PatchVersion"
        },
        "UpdatedLatestPatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>If the version was marked latest, the new version to maker as latest.</p>",
          "location":"querystring",
          "locationName":"UpdatedLatestPatchVersion"
        }
      }
    },
    "DeregisterPackageVersionResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DescribeApplicationInstanceDetailsRequest":{
      "type":"structure",
      "required":["ApplicationInstanceId"],
      "members":{
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The application instance's ID.</p>",
          "location":"uri",
          "locationName":"applicationInstanceId"
        }
      }
    },
    "DescribeApplicationInstanceDetailsResponse":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"ApplicationInstanceName",
          "documentation":"<p>The application instance's name.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>The application instance's description.</p>"
        },
        "DefaultRuntimeContextDevice":{
          "shape":"DefaultRuntimeContextDevice",
          "documentation":"<p>The application instance's default runtime context device.</p>"
        },
        "ManifestPayload":{
          "shape":"ManifestPayload",
          "documentation":"<p>The application instance's configuration manifest.</p>"
        },
        "ManifestOverridesPayload":{
          "shape":"ManifestOverridesPayload",
          "documentation":"<p>Parameter overrides for the configuration manifest.</p>"
        },
        "ApplicationInstanceIdToReplace":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The ID of the application instance that this instance replaced.</p>"
        },
        "CreatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>When the application instance was created.</p>"
        },
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The application instance's ID.</p>"
        }
      }
    },
    "DescribeApplicationInstanceRequest":{
      "type":"structure",
      "required":["ApplicationInstanceId"],
      "members":{
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The application instance's ID.</p>",
          "location":"uri",
          "locationName":"applicationInstanceId"
        }
      }
    },
    "DescribeApplicationInstanceResponse":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"ApplicationInstanceName",
          "documentation":"<p>The application instance's name.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>The application instance's description.</p>"
        },
        "DefaultRuntimeContextDevice":{
          "shape":"DefaultRuntimeContextDevice",
          "documentation":"<p>The device's ID.</p>"
        },
        "DefaultRuntimeContextDeviceName":{
          "shape":"DeviceName",
          "documentation":"<p>The device's bane.</p>"
        },
        "ApplicationInstanceIdToReplace":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The ID of the application instance that this instance replaced.</p>"
        },
        "RuntimeRoleArn":{
          "shape":"RuntimeRoleArn",
          "documentation":"<p>The application instance's runtime role ARN.</p>"
        },
        "Status":{
          "shape":"ApplicationInstanceStatus",
          "documentation":"<p>The application instance's status.</p>"
        },
        "HealthStatus":{
          "shape":"ApplicationInstanceHealthStatus",
          "documentation":"<p>The application instance's health status.</p>"
        },
        "StatusDescription":{
          "shape":"ApplicationInstanceStatusDescription",
          "documentation":"<p>The application instance's status description.</p>"
        },
        "CreatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>When the application instance was created.</p>"
        },
        "LastUpdatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>The application instance was updated.</p>"
        },
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The application instance's ID.</p>"
        },
        "Arn":{
          "shape":"ApplicationInstanceArn",
          "documentation":"<p>The application instance's ARN.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The application instance's tags.</p>"
        }
      }
    },
    "DescribeDeviceJobRequest":{
      "type":"structure",
      "required":["JobId"],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>",
          "location":"uri",
          "locationName":"JobId"
        }
      }
    },
    "DescribeDeviceJobResponse":{
      "type":"structure",
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        },
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>"
        },
        "DeviceArn":{
          "shape":"DeviceArn",
          "documentation":"<p>The device's ARN.</p>"
        },
        "DeviceName":{
          "shape":"DeviceName",
          "documentation":"<p>The device's name.</p>"
        },
        "DeviceType":{
          "shape":"DeviceType",
          "documentation":"<p>The device's type.</p>"
        },
        "ImageVersion":{
          "shape":"ImageVersion",
          "documentation":"<p>For an OTA job, the target version of the device software.</p>"
        },
        "Status":{
          "shape":"UpdateProgress",
          "documentation":"<p>The job's status.</p>"
        },
        "CreatedTime":{
          "shape":"UpdateCreatedTime",
          "documentation":"<p>When the job was created.</p>"
        }
      }
    },
    "DescribeDeviceRequest":{
      "type":"structure",
      "required":["DeviceId"],
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>",
          "location":"uri",
          "locationName":"DeviceId"
        }
      }
    },
    "DescribeDeviceResponse":{
      "type":"structure",
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>"
        },
        "Name":{
          "shape":"DeviceName",
          "documentation":"<p>The device's name.</p>"
        },
        "Arn":{
          "shape":"DeviceArn",
          "documentation":"<p>The device's ARN.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>The device's description.</p>"
        },
        "Type":{
          "shape":"DeviceType",
          "documentation":"<p>The device's type.</p>"
        },
        "DeviceConnectionStatus":{
          "shape":"DeviceConnectionStatus",
          "documentation":"<p>The device's connection status.</p>"
        },
        "CreatedTime":{
          "shape":"CreatedTime",
          "documentation":"<p>When the device was created.</p>"
        },
        "ProvisioningStatus":{
          "shape":"DeviceStatus",
          "documentation":"<p>The device's provisioning status.</p>"
        },
        "LatestSoftware":{
          "shape":"LatestSoftware",
          "documentation":"<p>The latest software version available for the device.</p>"
        },
        "CurrentSoftware":{
          "shape":"CurrentSoftware",
          "documentation":"<p>The device's current software version.</p>"
        },
        "SerialNumber":{
          "shape":"DeviceSerialNumber",
          "documentation":"<p>The device's serial number.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The device's tags.</p>"
        },
        "NetworkingConfiguration":{
          "shape":"NetworkPayload",
          "documentation":"<p>The device's networking configuration.</p>"
        },
        "CurrentNetworkingStatus":{
          "shape":"NetworkStatus",
          "documentation":"<p>The device's networking status.</p>"
        },
        "LeaseExpirationTime":{
          "shape":"LeaseExpirationTime",
          "documentation":"<p>The device's lease expiration time.</p>"
        }
      }
    },
    "DescribeNodeFromTemplateJobRequest":{
      "type":"structure",
      "required":["JobId"],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>",
          "location":"uri",
          "locationName":"JobId"
        }
      }
    },
    "DescribeNodeFromTemplateJobResponse":{
      "type":"structure",
      "required":[
        "JobId",
        "Status",
        "StatusMessage",
        "CreatedTime",
        "LastUpdatedTime",
        "OutputPackageName",
        "OutputPackageVersion",
        "NodeName",
        "TemplateType",
        "TemplateParameters"
      ],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        },
        "Status":{
          "shape":"NodeFromTemplateJobStatus",
          "documentation":"<p>The job's status.</p>"
        },
        "StatusMessage":{
          "shape":"NodeFromTemplateJobStatusMessage",
          "documentation":"<p>The job's status message.</p>"
        },
        "CreatedTime":{
          "shape":"CreatedTime",
          "documentation":"<p>When the job was created.</p>"
        },
        "LastUpdatedTime":{
          "shape":"LastUpdatedTime",
          "documentation":"<p>When the job was updated.</p>"
        },
        "OutputPackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>The job's output package name.</p>"
        },
        "OutputPackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The job's output package version.</p>"
        },
        "NodeName":{
          "shape":"NodeName",
          "documentation":"<p>The node's name.</p>"
        },
        "NodeDescription":{
          "shape":"Description",
          "documentation":"<p>The node's description.</p>"
        },
        "TemplateType":{
          "shape":"TemplateType",
          "documentation":"<p>The job's template type.</p>"
        },
        "TemplateParameters":{
          "shape":"TemplateParametersMap",
          "documentation":"<p>The job's template parameters.</p>"
        },
        "JobTags":{
          "shape":"JobTagsList",
          "documentation":"<p>The job's tags.</p>"
        }
      }
    },
    "DescribeNodeRequest":{
      "type":"structure",
      "required":["NodeId"],
      "members":{
        "NodeId":{
          "shape":"NodeId",
          "documentation":"<p>The node's ID.</p>",
          "location":"uri",
          "locationName":"NodeId"
        },
        "OwnerAccount":{
          "shape":"PackageOwnerAccount",
          "documentation":"<p>The account ID of the node's owner.</p>",
          "location":"querystring",
          "locationName":"OwnerAccount"
        }
      }
    },
    "DescribeNodeResponse":{
      "type":"structure",
      "required":[
        "NodeId",
        "Name",
        "Category",
        "OwnerAccount",
        "PackageName",
        "PackageId",
        "PackageVersion",
        "PatchVersion",
        "NodeInterface",
        "Description",
        "CreatedTime",
        "LastUpdatedTime"
      ],
      "members":{
        "NodeId":{
          "shape":"NodeId",
          "documentation":"<p>The node's ID.</p>"
        },
        "Name":{
          "shape":"NodeName",
          "documentation":"<p>The node's name.</p>"
        },
        "Category":{
          "shape":"NodeCategory",
          "documentation":"<p>The node's category.</p>"
        },
        "OwnerAccount":{
          "shape":"PackageOwnerAccount",
          "documentation":"<p>The account ID of the node's owner.</p>"
        },
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>The node's package name.</p>"
        },
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The node's package ID.</p>"
        },
        "PackageArn":{
          "shape":"NodePackageArn",
          "documentation":"<p>The node's ARN.</p>"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The node's package version.</p>"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>The node's patch version.</p>"
        },
        "NodeInterface":{
          "shape":"NodeInterface",
          "documentation":"<p>The node's interface.</p>"
        },
        "AssetName":{
          "shape":"NodeAssetName",
          "documentation":"<p>The node's asset name.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>The node's description.</p>"
        },
        "CreatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>When the node was created.</p>"
        },
        "LastUpdatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>When the node was updated.</p>"
        }
      }
    },
    "DescribePackageImportJobRequest":{
      "type":"structure",
      "required":["JobId"],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>",
          "location":"uri",
          "locationName":"JobId"
        }
      }
    },
    "DescribePackageImportJobResponse":{
      "type":"structure",
      "required":[
        "JobId",
        "JobType",
        "InputConfig",
        "OutputConfig",
        "Output",
        "CreatedTime",
        "LastUpdatedTime",
        "Status",
        "StatusMessage"
      ],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        },
        "ClientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The job's client token.</p>"
        },
        "JobType":{
          "shape":"PackageImportJobType",
          "documentation":"<p>The job's type.</p>"
        },
        "InputConfig":{
          "shape":"PackageImportJobInputConfig",
          "documentation":"<p>The job's input config.</p>"
        },
        "OutputConfig":{
          "shape":"PackageImportJobOutputConfig",
          "documentation":"<p>The job's output config.</p>"
        },
        "Output":{
          "shape":"PackageImportJobOutput",
          "documentation":"<p>The job's output.</p>"
        },
        "CreatedTime":{
          "shape":"CreatedTime",
          "documentation":"<p>When the job was created.</p>"
        },
        "LastUpdatedTime":{
          "shape":"LastUpdatedTime",
          "documentation":"<p>When the job was updated.</p>"
        },
        "Status":{
          "shape":"PackageImportJobStatus",
          "documentation":"<p>The job's status.</p>"
        },
        "StatusMessage":{
          "shape":"PackageImportJobStatusMessage",
          "documentation":"<p>The job's status message.</p>"
        },
        "JobTags":{
          "shape":"JobTagsList",
          "documentation":"<p>The job's tags.</p>"
        }
      }
    },
    "DescribePackageRequest":{
      "type":"structure",
      "required":["PackageId"],
      "members":{
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The package's ID.</p>",
          "location":"uri",
          "locationName":"PackageId"
        }
      }
    },
    "DescribePackageResponse":{
      "type":"structure",
      "required":[
        "PackageId",
        "PackageName",
        "Arn",
        "StorageLocation",
        "CreatedTime",
        "Tags"
      ],
      "members":{
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The package's ID.</p>"
        },
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>The package's name.</p>"
        },
        "Arn":{
          "shape":"NodePackageArn",
          "documentation":"<p>The package's ARN.</p>"
        },
        "StorageLocation":{
          "shape":"StorageLocation",
          "documentation":"<p>The package's storage location.</p>"
        },
        "ReadAccessPrincipalArns":{
          "shape":"PrincipalArnsList",
          "documentation":"<p>ARNs of accounts that have read access to the package.</p>"
        },
        "WriteAccessPrincipalArns":{
          "shape":"PrincipalArnsList",
          "documentation":"<p>ARNs of accounts that have write access to the package.</p>"
        },
        "CreatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>When the package was created.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The package's tags.</p>"
        }
      }
    },
    "DescribePackageVersionRequest":{
      "type":"structure",
      "required":[
        "PackageId",
        "PackageVersion"
      ],
      "members":{
        "OwnerAccount":{
          "shape":"PackageOwnerAccount",
          "documentation":"<p>The version's owner account.</p>",
          "location":"querystring",
          "locationName":"OwnerAccount"
        },
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The version's ID.</p>",
          "location":"uri",
          "locationName":"PackageId"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The version's version.</p>",
          "location":"uri",
          "locationName":"PackageVersion"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>The version's patch version.</p>",
          "location":"querystring",
          "locationName":"PatchVersion"
        }
      }
    },
    "DescribePackageVersionResponse":{
      "type":"structure",
      "required":[
        "PackageId",
        "PackageName",
        "PackageVersion",
        "PatchVersion",
        "IsLatestPatch",
        "Status"
      ],
      "members":{
        "OwnerAccount":{
          "shape":"PackageOwnerAccount",
          "documentation":"<p>The account ID of the version's owner.</p>"
        },
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The version's ID.</p>"
        },
        "PackageArn":{
          "shape":"NodePackageArn",
          "documentation":"<p>The ARN of the package.</p>"
        },
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>The version's name.</p>"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The version's version.</p>"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>The version's patch version.</p>"
        },
        "IsLatestPatch":{
          "shape":"Boolean",
          "documentation":"<p>Whether the version is the latest available.</p>"
        },
        "Status":{
          "shape":"PackageVersionStatus",
          "documentation":"<p>The version's status.</p>"
        },
        "StatusDescription":{
          "shape":"PackageVersionStatusDescription",
          "documentation":"<p>The version's status description.</p>"
        },
        "RegisteredTime":{
          "shape":"TimeStamp",
          "documentation":"<p>The version's registered time.</p>"
        }
      }
    },
    "Description":{
      "type":"string",
      "max":255,
      "min":0,
      "pattern":"^.*$"
    },
    "Device":{
      "type":"structure",
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>"
        },
        "Name":{
          "shape":"DeviceName",
          "documentation":"<p>The device's name.</p>"
        },
        "CreatedTime":{
          "shape":"CreatedTime",
          "documentation":"<p>When the device was created.</p>"
        },
        "ProvisioningStatus":{
          "shape":"DeviceStatus",
          "documentation":"<p>The device's provisioning status.</p>"
        },
        "LastUpdatedTime":{
          "shape":"LastUpdatedTime",
          "documentation":"<p>When the device was updated.</p>"
        },
        "LeaseExpirationTime":{
          "shape":"LeaseExpirationTime",
          "documentation":"<p>The device's lease expiration time.</p>"
        }
      },
      "documentation":"<p>A device.</p>"
    },
    "DeviceArn":{
      "type":"string",
      "max":255,
      "min":1
    },
    "DeviceConnectionStatus":{
      "type":"string",
      "enum":[
        "ONLINE",
        "OFFLINE",
        "AWAITING_CREDENTIALS",
        "NOT_AVAILABLE",
        "ERROR"
      ]
    },
    "DeviceId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "DeviceIdList":{
      "type":"list",
      "member":{"shape":"DeviceId"},
      "max":1,
      "min":1
    },
    "DeviceJob":{
      "type":"structure",
      "members":{
        "DeviceName":{
          "shape":"DeviceName",
          "documentation":"<p>The name of the target device</p>"
        },
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The ID of the target device.</p>"
        },
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        },
        "CreatedTime":{
          "shape":"CreatedTime",
          "documentation":"<p>When the job was created.</p>"
        }
      },
      "documentation":"<p>A job that runs on a device.</p>"
    },
    "DeviceJobConfig":{
      "type":"structure",
      "members":{
        "OTAJobConfig":{
          "shape":"OTAJobConfig",
          "documentation":"<p>A configuration for an over-the-air (OTA) upgrade. Required for OTA jobs.</p>"
        }
      },
      "documentation":"<p>A job's configuration.</p>"
    },
    "DeviceJobList":{
      "type":"list",
      "member":{"shape":"DeviceJob"}
    },
    "DeviceList":{
      "type":"list",
      "member":{"shape":"Device"}
    },
    "DeviceName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "DeviceSerialNumber":{
      "type":"string",
      "pattern":"^[0-9]{1,20}$"
    },
    "DeviceStatus":{
      "type":"string",
      "enum":[
        "AWAITING_PROVISIONING",
        "PENDING",
        "SUCCEEDED",
        "FAILED",
        "ERROR",
        "DELETING"
      ]
    },
    "DeviceType":{
      "type":"string",
      "enum":[
        "PANORAMA_APPLIANCE_DEVELOPER_KIT",
        "PANORAMA_APPLIANCE"
      ]
    },
    "Dns":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$"
    },
    "DnsList":{
      "type":"list",
      "member":{"shape":"Dns"}
    },
    "EthernetPayload":{
      "type":"structure",
      "required":["ConnectionType"],
      "members":{
        "ConnectionType":{
          "shape":"ConnectionType",
          "documentation":"<p>How the device gets an IP address.</p>"
        },
        "StaticIpConnectionInfo":{
          "shape":"StaticIpConnectionInfo",
          "documentation":"<p>Network configuration for a static IP connection.</p>"
        }
      },
      "documentation":"<p>A device's network configuration.</p>"
    },
    "EthernetStatus":{
      "type":"structure",
      "members":{
        "IpAddress":{
          "shape":"IpAddress",
          "documentation":"<p>The device's IP address.</p>"
        },
        "ConnectionStatus":{
          "shape":"NetworkConnectionStatus",
          "documentation":"<p>The device's connection status.</p>"
        },
        "HwAddress":{
          "shape":"HwAddress",
          "documentation":"<p>The device's physical address.</p>"
        }
      },
      "documentation":"<p>A device's Ethernet status.</p>"
    },
    "HwAddress":{
      "type":"string",
      "max":255,
      "min":1
    },
    "ImageVersion":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$"
    },
    "InputPortList":{
      "type":"list",
      "member":{"shape":"NodeInputPort"}
    },
    "InternalServerException":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{"shape":"String"},
        "RetryAfterSeconds":{
          "shape":"RetryAfterSeconds",
          "documentation":"<p>The number of seconds a client should wait before retrying the call.</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>An internal error occurred.</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "IotThingName":{
      "type":"string",
      "max":255,
      "min":1
    },
    "IpAddress":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d))(:(6553[0-5]|655[0-2]\\d|65[0-4]\\d{2}|6[0-4]\\d{3}|[1-5]\\d{4}|[1-9]\\d{0,3}))?$"
    },
    "Job":{
      "type":"structure",
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        },
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The target device's ID.</p>"
        }
      },
      "documentation":"<p>A job for a device.</p>"
    },
    "JobId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "JobList":{
      "type":"list",
      "member":{"shape":"Job"}
    },
    "JobResourceTags":{
      "type":"structure",
      "required":[
        "ResourceType",
        "Tags"
      ],
      "members":{
        "ResourceType":{
          "shape":"JobResourceType",
          "documentation":"<p>The job's type.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The job's tags.</p>"
        }
      },
      "documentation":"<p>Tags for a job.</p>"
    },
    "JobResourceType":{
      "type":"string",
      "enum":["PACKAGE"]
    },
    "JobTagsList":{
      "type":"list",
      "member":{"shape":"JobResourceTags"}
    },
    "JobType":{
      "type":"string",
      "enum":["OTA"]
    },
    "LastUpdatedTime":{"type":"timestamp"},
    "LatestSoftware":{
      "type":"string",
      "max":255,
      "min":1
    },
    "LeaseExpirationTime":{"type":"timestamp"},
    "ListApplicationInstanceDependenciesRequest":{
      "type":"structure",
      "required":["ApplicationInstanceId"],
      "members":{
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The application instance's ID.</p>",
          "location":"uri",
          "locationName":"applicationInstanceId"
        },
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of application instance dependencies to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListApplicationInstanceDependenciesResponse":{
      "type":"structure",
      "members":{
        "PackageObjects":{
          "shape":"PackageObjects",
          "documentation":"<p>A list of package objects.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListApplicationInstanceNodeInstancesRequest":{
      "type":"structure",
      "required":["ApplicationInstanceId"],
      "members":{
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>The node instances' application instance ID.</p>",
          "location":"uri",
          "locationName":"applicationInstanceId"
        },
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of node instances to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListApplicationInstanceNodeInstancesResponse":{
      "type":"structure",
      "members":{
        "NodeInstances":{
          "shape":"NodeInstances",
          "documentation":"<p>A list of node instances.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListApplicationInstancesRequest":{
      "type":"structure",
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The application instances' device ID.</p>",
          "location":"querystring",
          "locationName":"deviceId"
        },
        "StatusFilter":{
          "shape":"StatusFilter",
          "documentation":"<p>Only include instances with a specific status.</p>",
          "location":"querystring",
          "locationName":"statusFilter"
        },
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of application instances to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListApplicationInstancesResponse":{
      "type":"structure",
      "members":{
        "ApplicationInstances":{
          "shape":"ApplicationInstances",
          "documentation":"<p>A list of application instances.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListDevicesJobsRequest":{
      "type":"structure",
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>Filter results by the job's target device ID.</p>",
          "location":"querystring",
          "locationName":"DeviceId"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of device jobs to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "ListDevicesJobsResponse":{
      "type":"structure",
      "members":{
        "DeviceJobs":{
          "shape":"DeviceJobList",
          "documentation":"<p>A list of jobs.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListDevicesRequest":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of devices to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "ListDevicesResponse":{
      "type":"structure",
      "required":["Devices"],
      "members":{
        "Devices":{
          "shape":"DeviceList",
          "documentation":"<p>A list of devices.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListNodeFromTemplateJobsRequest":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of node from template jobs to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "ListNodeFromTemplateJobsResponse":{
      "type":"structure",
      "required":["NodeFromTemplateJobs"],
      "members":{
        "NodeFromTemplateJobs":{
          "shape":"NodeFromTemplateJobList",
          "documentation":"<p>A list of jobs.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListNodesRequest":{
      "type":"structure",
      "members":{
        "Category":{
          "shape":"NodeCategory",
          "documentation":"<p>Search for nodes by category.</p>",
          "location":"querystring",
          "locationName":"category"
        },
        "OwnerAccount":{
          "shape":"PackageOwnerAccount",
          "documentation":"<p>Search for nodes by the account ID of the nodes' owner.</p>",
          "location":"querystring",
          "locationName":"ownerAccount"
        },
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>Search for nodes by name.</p>",
          "location":"querystring",
          "locationName":"packageName"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>Search for nodes by version.</p>",
          "location":"querystring",
          "locationName":"packageVersion"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>Search for nodes by patch version.</p>",
          "location":"querystring",
          "locationName":"patchVersion"
        },
        "NextToken":{
          "shape":"Token",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of nodes to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListNodesResponse":{
      "type":"structure",
      "members":{
        "Nodes":{
          "shape":"NodesList",
          "documentation":"<p>A list of nodes.</p>"
        },
        "NextToken":{
          "shape":"Token",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListPackageImportJobsRequest":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of package import jobs to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "ListPackageImportJobsResponse":{
      "type":"structure",
      "required":["PackageImportJobs"],
      "members":{
        "PackageImportJobs":{
          "shape":"PackageImportJobList",
          "documentation":"<p>A list of package import jobs.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListPackagesRequest":{
      "type":"structure",
      "members":{
        "MaxResults":{
          "shape":"MaxSize25",
          "documentation":"<p>The maximum number of packages to return in one page of results.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "NextToken":{
          "shape":"Token",
          "documentation":"<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListPackagesResponse":{
      "type":"structure",
      "members":{
        "Packages":{
          "shape":"PackageList",
          "documentation":"<p>A list of packages.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>A pagination token that's included if more results are available.</p>"
        }
      }
    },
    "ListTagsForResourceRequest":{
      "type":"structure",
      "required":["ResourceArn"],
      "members":{
        "ResourceArn":{
          "shape":"ResourceArn",
          "documentation":"<p>The resource's ARN.</p>",
          "location":"uri",
          "locationName":"ResourceArn"
        }
      }
    },
    "ListTagsForResourceResponse":{
      "type":"structure",
      "members":{
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>A list of tags.</p>"
        }
      }
    },
    "ManifestOverridesPayload":{
      "type":"structure",
      "members":{
        "PayloadData":{
          "shape":"ManifestOverridesPayloadData",
          "documentation":"<p>The overrides document.</p>"
        }
      },
      "documentation":"<p>Parameter overrides for an application instance. This is a JSON document that has a single key (<code>PayloadData</code>) where the value is an escaped string representation of the overrides document.</p>",
      "union":true
    },
    "ManifestOverridesPayloadData":{
      "type":"string",
      "max":51200,
      "min":0,
      "pattern":"^.*$"
    },
    "ManifestPayload":{
      "type":"structure",
      "members":{
        "PayloadData":{
          "shape":"ManifestPayloadData",
          "documentation":"<p>The application manifest.</p>"
        }
      },
      "documentation":"<p>A application verion's manifest file. This is a JSON document that has a single key (<code>PayloadData</code>) where the value is an escaped string representation of the application manifest (<code>graph.json</code>). This file is located in the <code>graphs</code> folder in your application source.</p>",
      "union":true
    },
    "ManifestPayloadData":{
      "type":"string",
      "max":51200,
      "min":1,
      "pattern":"^.+$"
    },
    "MarkLatestPatch":{"type":"boolean"},
    "Mask":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$"
    },
    "MaxConnections":{"type":"integer"},
    "MaxSize25":{
      "type":"integer",
      "max":25,
      "min":0
    },
    "NetworkConnectionStatus":{
      "type":"string",
      "enum":[
        "CONNECTED",
        "NOT_CONNECTED"
      ]
    },
    "NetworkPayload":{
      "type":"structure",
      "members":{
        "Ethernet0":{
          "shape":"EthernetPayload",
          "documentation":"<p>Settings for Ethernet port 0.</p>"
        },
        "Ethernet1":{
          "shape":"EthernetPayload",
          "documentation":"<p>Settings for Ethernet port 1.</p>"
        }
      },
      "documentation":"<p>The network configuration for a device.</p>"
    },
    "NetworkStatus":{
      "type":"structure",
      "members":{
        "Ethernet0Status":{
          "shape":"EthernetStatus",
          "documentation":"<p>The status of Ethernet port 0.</p>"
        },
        "Ethernet1Status":{
          "shape":"EthernetStatus",
          "documentation":"<p>The status of Ethernet port 1.</p>"
        }
      },
      "documentation":"<p>The network status of a device.</p>"
    },
    "NextToken":{
      "type":"string",
      "max":4096,
      "min":1,
      "pattern":"^.+$"
    },
    "Node":{
      "type":"structure",
      "required":[
        "NodeId",
        "Name",
        "Category",
        "PackageName",
        "PackageId",
        "PackageVersion",
        "PatchVersion",
        "CreatedTime"
      ],
      "members":{
        "NodeId":{
          "shape":"NodeId",
          "documentation":"<p>The node's ID.</p>"
        },
        "Name":{
          "shape":"NodeName",
          "documentation":"<p>The node's name.</p>"
        },
        "Category":{
          "shape":"NodeCategory",
          "documentation":"<p>The node's category.</p>"
        },
        "OwnerAccount":{
          "shape":"PackageOwnerAccount",
          "documentation":"<p>The account ID of the node's owner.</p>"
        },
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>The node's package name.</p>"
        },
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The node's package ID.</p>"
        },
        "PackageArn":{
          "shape":"NodePackageArn",
          "documentation":"<p>The node's ARN.</p>"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The node's package version.</p>"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>The node's patch version.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>The node's description.</p>"
        },
        "CreatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>When the node was created.</p>"
        }
      },
      "documentation":"<p>An application node that represents a camera stream, a model, code, or output.</p>"
    },
    "NodeAssetName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "NodeCategory":{
      "type":"string",
      "enum":[
        "BUSINESS_LOGIC",
        "ML_MODEL",
        "MEDIA_SOURCE",
        "MEDIA_SINK"
      ]
    },
    "NodeFromTemplateJob":{
      "type":"structure",
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        },
        "TemplateType":{
          "shape":"TemplateType",
          "documentation":"<p>The job's template type.</p>"
        },
        "Status":{
          "shape":"NodeFromTemplateJobStatus",
          "documentation":"<p>The job's status.</p>"
        },
        "StatusMessage":{
          "shape":"NodeFromTemplateJobStatusMessage",
          "documentation":"<p>The job's status message.</p>"
        },
        "CreatedTime":{
          "shape":"CreatedTime",
          "documentation":"<p>When the job was created.</p>"
        },
        "NodeName":{
          "shape":"NodeName",
          "documentation":"<p>The node's name.</p>"
        }
      },
      "documentation":"<p>A job to create a camera stream node.</p>"
    },
    "NodeFromTemplateJobList":{
      "type":"list",
      "member":{"shape":"NodeFromTemplateJob"}
    },
    "NodeFromTemplateJobStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "SUCCEEDED",
        "FAILED"
      ]
    },
    "NodeFromTemplateJobStatusMessage":{"type":"string"},
    "NodeId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_\\.]+$"
    },
    "NodeInputPort":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"PortName",
          "documentation":"<p>The input port's name.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>The input port's description.</p>"
        },
        "Type":{
          "shape":"PortType",
          "documentation":"<p>The input port's type.</p>"
        },
        "DefaultValue":{
          "shape":"PortDefaultValue",
          "documentation":"<p>The input port's default value.</p>"
        },
        "MaxConnections":{
          "shape":"MaxConnections",
          "documentation":"<p>The input port's max connections.</p>"
        }
      },
      "documentation":"<p>A node input port.</p>"
    },
    "NodeInstance":{
      "type":"structure",
      "required":[
        "NodeInstanceId",
        "CurrentStatus"
      ],
      "members":{
        "NodeInstanceId":{
          "shape":"NodeInstanceId",
          "documentation":"<p>The instance's ID.</p>"
        },
        "NodeId":{
          "shape":"NodeId",
          "documentation":"<p>The node's ID.</p>"
        },
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>The instance's package name.</p>"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The instance's package version.</p>"
        },
        "PackagePatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>The instance's package patch version.</p>"
        },
        "NodeName":{
          "shape":"NodeName",
          "documentation":"<p>The instance's name.</p>"
        },
        "CurrentStatus":{
          "shape":"NodeInstanceStatus",
          "documentation":"<p>The instance's current status.</p>"
        }
      },
      "documentation":"<p>A node instance.</p>"
    },
    "NodeInstanceId":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "NodeInstanceStatus":{
      "type":"string",
      "enum":[
        "RUNNING",
        "ERROR",
        "NOT_AVAILABLE"
      ]
    },
    "NodeInstances":{
      "type":"list",
      "member":{"shape":"NodeInstance"}
    },
    "NodeInterface":{
      "type":"structure",
      "required":[
        "Inputs",
        "Outputs"
      ],
      "members":{
        "Inputs":{
          "shape":"InputPortList",
          "documentation":"<p>The node interface's inputs.</p>"
        },
        "Outputs":{
          "shape":"OutputPortList",
          "documentation":"<p>The node interface's outputs.</p>"
        }
      },
      "documentation":"<p>A node interface.</p>"
    },
    "NodeName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "NodeOutputPort":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"PortName",
          "documentation":"<p>The output port's name.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>The output port's description.</p>"
        },
        "Type":{
          "shape":"PortType",
          "documentation":"<p>The output port's type.</p>"
        }
      },
      "documentation":"<p>A node output port.</p>"
    },
    "NodePackageArn":{
      "type":"string",
      "max":255,
      "min":1
    },
    "NodePackageId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_\\/]+$"
    },
    "NodePackageName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\-\\_]+$"
    },
    "NodePackagePatchVersion":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-z0-9]+$"
    },
    "NodePackageVersion":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^([0-9]+)\\.([0-9]+)$"
    },
    "NodesList":{
      "type":"list",
      "member":{"shape":"Node"}
    },
    "OTAJobConfig":{
      "type":"structure",
      "required":["ImageVersion"],
      "members":{
        "ImageVersion":{
          "shape":"ImageVersion",
          "documentation":"<p>The target version of the device software.</p>"
        }
      },
      "documentation":"<p>An over-the-air update (OTA) job configuration.</p>"
    },
    "Object":{"type":"string"},
    "ObjectKey":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$"
    },
    "OutPutS3Location":{
      "type":"structure",
      "required":[
        "BucketName",
        "ObjectKey"
      ],
      "members":{
        "BucketName":{
          "shape":"BucketName",
          "documentation":"<p>The object's bucket.</p>"
        },
        "ObjectKey":{
          "shape":"ObjectKey",
          "documentation":"<p>The object's key.</p>"
        }
      },
      "documentation":"<p>The location of an output object in Amazon S3.</p>"
    },
    "OutputPortList":{
      "type":"list",
      "member":{"shape":"NodeOutputPort"}
    },
    "PackageImportJob":{
      "type":"structure",
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The job's ID.</p>"
        },
        "JobType":{
          "shape":"PackageImportJobType",
          "documentation":"<p>The job's type.</p>"
        },
        "Status":{
          "shape":"PackageImportJobStatus",
          "documentation":"<p>The job's status.</p>"
        },
        "StatusMessage":{
          "shape":"PackageImportJobStatusMessage",
          "documentation":"<p>The job's status message.</p>"
        },
        "CreatedTime":{
          "shape":"CreatedTime",
          "documentation":"<p>When the job was created.</p>"
        },
        "LastUpdatedTime":{
          "shape":"LastUpdatedTime",
          "documentation":"<p>When the job was updated.</p>"
        }
      },
      "documentation":"<p>A job to import a package version.</p>"
    },
    "PackageImportJobInputConfig":{
      "type":"structure",
      "members":{
        "PackageVersionInputConfig":{
          "shape":"PackageVersionInputConfig",
          "documentation":"<p>The package version's input configuration.</p>"
        }
      },
      "documentation":"<p>A configuration for a package import job.</p>"
    },
    "PackageImportJobList":{
      "type":"list",
      "member":{"shape":"PackageImportJob"}
    },
    "PackageImportJobOutput":{
      "type":"structure",
      "required":[
        "PackageId",
        "PackageVersion",
        "PatchVersion",
        "OutputS3Location"
      ],
      "members":{
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The package's ID.</p>"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The package's version.</p>"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>The package's patch version.</p>"
        },
        "OutputS3Location":{
          "shape":"OutPutS3Location",
          "documentation":"<p>The package's output location.</p>"
        }
      },
      "documentation":"<p>Results of a package import job.</p>"
    },
    "PackageImportJobOutputConfig":{
      "type":"structure",
      "members":{
        "PackageVersionOutputConfig":{
          "shape":"PackageVersionOutputConfig",
          "documentation":"<p>The package version's output configuration.</p>"
        }
      },
      "documentation":"<p>An output configuration for a package import job.</p>"
    },
    "PackageImportJobStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "SUCCEEDED",
        "FAILED"
      ]
    },
    "PackageImportJobStatusMessage":{"type":"string"},
    "PackageImportJobType":{
      "type":"string",
      "enum":["NODE_PACKAGE_VERSION"]
    },
    "PackageList":{
      "type":"list",
      "member":{"shape":"PackageListItem"}
    },
    "PackageListItem":{
      "type":"structure",
      "members":{
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>The package's ID.</p>"
        },
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>The package's name.</p>"
        },
        "Arn":{
          "shape":"NodePackageArn",
          "documentation":"<p>The package's ARN.</p>"
        },
        "CreatedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>When the package was created.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The package's tags.</p>"
        }
      },
      "documentation":"<p>A package summary.</p>"
    },
    "PackageObject":{
      "type":"structure",
      "required":[
        "Name",
        "PackageVersion",
        "PatchVersion"
      ],
      "members":{
        "Name":{
          "shape":"NodePackageName",
          "documentation":"<p>The object's name.</p>"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The object's package version.</p>"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>The object's patch version.</p>"
        }
      },
      "documentation":"<p>A package object.</p>"
    },
    "PackageObjects":{
      "type":"list",
      "member":{"shape":"PackageObject"}
    },
    "PackageOwnerAccount":{
      "type":"string",
      "max":12,
      "min":1,
      "pattern":"^[0-9a-z\\_]+$"
    },
    "PackageVersionInputConfig":{
      "type":"structure",
      "required":["S3Location"],
      "members":{
        "S3Location":{
          "shape":"S3Location",
          "documentation":"<p>A location in Amazon S3.</p>"
        }
      },
      "documentation":"<p>A package version input configuration.</p>"
    },
    "PackageVersionOutputConfig":{
      "type":"structure",
      "required":[
        "PackageName",
        "PackageVersion"
      ],
      "members":{
        "PackageName":{
          "shape":"NodePackageName",
          "documentation":"<p>The output's package name.</p>"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>The output's package version.</p>"
        },
        "MarkLatest":{
          "shape":"MarkLatestPatch",
          "documentation":"<p>Indicates that the version is recommended for all users.</p>"
        }
      },
      "documentation":"<p>A package version output configuration.</p>"
    },
    "PackageVersionStatus":{
      "type":"string",
      "enum":[
        "REGISTER_PENDING",
        "REGISTER_COMPLETED",
        "FAILED",
        "DELETING"
      ]
    },
    "PackageVersionStatusDescription":{
      "type":"string",
      "max":255,
      "min":1
    },
    "PortDefaultValue":{
      "type":"string",
      "max":255,
      "min":1
    },
    "PortName":{
      "type":"string",
      "max":50,
      "min":1,
      "pattern":"^[a-zA-Z0-9\\_]+$"
    },
    "PortType":{
      "type":"string",
      "enum":[
        "BOOLEAN",
        "STRING",
        "INT32",
        "FLOAT32",
        "MEDIA"
      ]
    },
    "PrincipalArn":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^arn:[a-z0-9][-.a-z0-9]{0,62}:iam::[0-9]{12}:[a-zA-Z0-9+=,.@\\-_/]+$"
    },
    "PrincipalArnsList":{
      "type":"list",
      "member":{"shape":"PrincipalArn"}
    },
    "ProvisionDeviceRequest":{
      "type":"structure",
      "required":["Name"],
      "members":{
        "Name":{
          "shape":"DeviceName",
          "documentation":"<p>A name for the device.</p>"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>A description for the device.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>Tags for the device.</p>"
        },
        "NetworkingConfiguration":{
          "shape":"NetworkPayload",
          "documentation":"<p>A networking configuration for the device.</p>"
        }
      }
    },
    "ProvisionDeviceResponse":{
      "type":"structure",
      "required":[
        "Arn",
        "Status"
      ],
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>"
        },
        "Arn":{
          "shape":"DeviceArn",
          "documentation":"<p>The device's ARN.</p>"
        },
        "Status":{
          "shape":"DeviceStatus",
          "documentation":"<p>The device's status.</p>"
        },
        "Certificates":{
          "shape":"Certificates",
          "documentation":"<p>The device's configuration bundle.</p>"
        },
        "IotThingName":{
          "shape":"IotThingName",
          "documentation":"<p>The device's IoT thing name.</p>"
        }
      }
    },
    "Region":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$"
    },
    "RegisterPackageVersionRequest":{
      "type":"structure",
      "required":[
        "PackageId",
        "PackageVersion",
        "PatchVersion"
      ],
      "members":{
        "OwnerAccount":{
          "shape":"PackageOwnerAccount",
          "documentation":"<p>An owner account.</p>"
        },
        "PackageId":{
          "shape":"NodePackageId",
          "documentation":"<p>A package ID.</p>",
          "location":"uri",
          "locationName":"PackageId"
        },
        "PackageVersion":{
          "shape":"NodePackageVersion",
          "documentation":"<p>A package version.</p>",
          "location":"uri",
          "locationName":"PackageVersion"
        },
        "PatchVersion":{
          "shape":"NodePackagePatchVersion",
          "documentation":"<p>A patch version.</p>",
          "location":"uri",
          "locationName":"PatchVersion"
        },
        "MarkLatest":{
          "shape":"MarkLatestPatch",
          "documentation":"<p>Whether to mark the new version as the latest version.</p>"
        }
      }
    },
    "RegisterPackageVersionResponse":{
      "type":"structure",
      "members":{
      }
    },
    "RemoveApplicationInstanceRequest":{
      "type":"structure",
      "required":["ApplicationInstanceId"],
      "members":{
        "ApplicationInstanceId":{
          "shape":"ApplicationInstanceId",
          "documentation":"<p>An application instance ID.</p>",
          "location":"uri",
          "locationName":"applicationInstanceId"
        }
      }
    },
    "RemoveApplicationInstanceResponse":{
      "type":"structure",
      "members":{
      }
    },
    "ResourceArn":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"^.+$"
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":[
        "Message",
        "ResourceId",
        "ResourceType"
      ],
      "members":{
        "Message":{"shape":"String"},
        "ResourceId":{
          "shape":"String",
          "documentation":"<p>The resource's ID.</p>"
        },
        "ResourceType":{
          "shape":"String",
          "documentation":"<p>The resource's type.</p>"
        }
      },
      "documentation":"<p>The target resource was not found.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "RetryAfterSeconds":{"type":"integer"},
    "RuntimeRoleArn":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^arn:[a-z0-9][-.a-z0-9]{0,62}:iam::[0-9]{12}:role/.+$"
    },
    "S3Location":{
      "type":"structure",
      "required":[
        "BucketName",
        "ObjectKey"
      ],
      "members":{
        "Region":{
          "shape":"Region",
          "documentation":"<p>The bucket's Region.</p>"
        },
        "BucketName":{
          "shape":"BucketName",
          "documentation":"<p>A bucket name.</p>"
        },
        "ObjectKey":{
          "shape":"ObjectKey",
          "documentation":"<p>An object key.</p>"
        }
      },
      "documentation":"<p>A location in Amazon S3.</p>"
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":[
        "Message",
        "QuotaCode",
        "ServiceCode"
      ],
      "members":{
        "Message":{"shape":"String"},
        "ResourceId":{
          "shape":"String",
          "documentation":"<p>The target resource's ID.</p>"
        },
        "ResourceType":{
          "shape":"String",
          "documentation":"<p>The target resource's type.</p>"
        },
        "QuotaCode":{
          "shape":"String",
          "documentation":"<p>The name of the limit.</p>"
        },
        "ServiceCode":{
          "shape":"String",
          "documentation":"<p>The name of the service.</p>"
        }
      },
      "documentation":"<p>The request would cause a limit to be exceeded.</p>",
      "error":{"httpStatusCode":402},
      "exception":true
    },
    "StaticIpConnectionInfo":{
      "type":"structure",
      "required":[
        "IpAddress",
        "Mask",
        "Dns",
        "DefaultGateway"
      ],
      "members":{
        "IpAddress":{
          "shape":"IpAddress",
          "documentation":"<p>The connection's IP address.</p>"
        },
        "Mask":{
          "shape":"Mask",
          "documentation":"<p>The connection's DNS mask.</p>"
        },
        "Dns":{
          "shape":"DnsList",
          "documentation":"<p>The connection's DNS address.</p>"
        },
        "DefaultGateway":{
          "shape":"DefaultGateway",
          "documentation":"<p>The connection's default gateway.</p>"
        }
      },
      "documentation":"<p>A static IP configuration.</p>"
    },
    "StatusFilter":{
      "type":"string",
      "enum":[
        "DEPLOYMENT_SUCCEEDED",
        "DEPLOYMENT_ERROR",
        "REMOVAL_SUCCEEDED",
        "REMOVAL_FAILED",
        "PROCESSING_DEPLOYMENT",
        "PROCESSING_REMOVAL"
      ]
    },
    "StorageLocation":{
      "type":"structure",
      "required":[
        "Bucket",
        "RepoPrefixLocation",
        "GeneratedPrefixLocation",
        "BinaryPrefixLocation",
        "ManifestPrefixLocation"
      ],
      "members":{
        "Bucket":{
          "shape":"Bucket",
          "documentation":"<p>The location's bucket.</p>"
        },
        "RepoPrefixLocation":{
          "shape":"Object",
          "documentation":"<p>The location's repo prefix.</p>"
        },
        "GeneratedPrefixLocation":{
          "shape":"Object",
          "documentation":"<p>The location's generated prefix.</p>"
        },
        "BinaryPrefixLocation":{
          "shape":"Object",
          "documentation":"<p>The location's binary prefix.</p>"
        },
        "ManifestPrefixLocation":{
          "shape":"Object",
          "documentation":"<p>The location's manifest prefix.</p>"
        }
      },
      "documentation":"<p>A storage location.</p>"
    },
    "String":{"type":"string"},
    "TagKey":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^.+$"
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "max":50,
      "min":1
    },
    "TagMap":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"},
      "max":50,
      "min":0
    },
    "TagResourceRequest":{
      "type":"structure",
      "required":[
        "ResourceArn",
        "Tags"
      ],
      "members":{
        "ResourceArn":{
          "shape":"ResourceArn",
          "documentation":"<p>The resource's ARN.</p>",
          "location":"uri",
          "locationName":"ResourceArn"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>Tags for the resource.</p>"
        }
      }
    },
    "TagResourceResponse":{
      "type":"structure",
      "members":{
      }
    },
    "TagValue":{
      "type":"string",
      "max":256,
      "min":0,
      "pattern":"^.*$"
    },
    "TemplateKey":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$"
    },
    "TemplateParametersMap":{
      "type":"map",
      "key":{"shape":"TemplateKey"},
      "value":{"shape":"TemplateValue"}
    },
    "TemplateType":{
      "type":"string",
      "enum":["RTSP_CAMERA_STREAM"]
    },
    "TemplateValue":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^.+$",
      "sensitive":true
    },
    "TimeStamp":{"type":"timestamp"},
    "Token":{
      "type":"string",
      "max":4096,
      "min":1,
      "pattern":"^.+$"
    },
    "UntagResourceRequest":{
      "type":"structure",
      "required":[
        "ResourceArn",
        "TagKeys"
      ],
      "members":{
        "ResourceArn":{
          "shape":"ResourceArn",
          "documentation":"<p>The resource's ARN.</p>",
          "location":"uri",
          "locationName":"ResourceArn"
        },
        "TagKeys":{
          "shape":"TagKeyList",
          "documentation":"<p>Tag keys to remove.</p>",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UntagResourceResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateCreatedTime":{"type":"timestamp"},
    "UpdateDeviceMetadataRequest":{
      "type":"structure",
      "required":["DeviceId"],
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>",
          "location":"uri",
          "locationName":"DeviceId"
        },
        "Description":{
          "shape":"Description",
          "documentation":"<p>A description for the device.</p>"
        }
      }
    },
    "UpdateDeviceMetadataResponse":{
      "type":"structure",
      "members":{
        "DeviceId":{
          "shape":"DeviceId",
          "documentation":"<p>The device's ID.</p>"
        }
      }
    },
    "UpdateProgress":{
      "type":"string",
      "enum":[
        "PENDING",
        "IN_PROGRESS",
        "VERIFYING",
        "REBOOTING",
        "DOWNLOADING",
        "COMPLETED",
        "FAILED"
      ]
    },
    "ValidationException":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{"shape":"String"},
        "Reason":{
          "shape":"ValidationExceptionReason",
          "documentation":"<p>The reason that validation failed.</p>"
        },
        "ErrorId":{
          "shape":"String",
          "documentation":"<p>A unique ID for the error.</p>"
        },
        "ErrorArguments":{
          "shape":"ValidationExceptionErrorArgumentList",
          "documentation":"<p>A list of attributes that led to the exception and their values.</p>"
        },
        "Fields":{
          "shape":"ValidationExceptionFieldList",
          "documentation":"<p>A list of request parameters that failed validation.</p>"
        }
      },
      "documentation":"<p>The request contains an invalid parameter value.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "ValidationExceptionErrorArgument":{
      "type":"structure",
      "required":[
        "Name",
        "Value"
      ],
      "members":{
        "Name":{
          "shape":"String",
          "documentation":"<p>The argument's name.</p>"
        },
        "Value":{
          "shape":"String",
          "documentation":"<p>The argument's value.</p>"
        }
      },
      "documentation":"<p>A validation exception error argument.</p>"
    },
    "ValidationExceptionErrorArgumentList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionErrorArgument"}
    },
    "ValidationExceptionField":{
      "type":"structure",
      "required":[
        "Name",
        "Message"
      ],
      "members":{
        "Name":{
          "shape":"String",
          "documentation":"<p>The field's name.</p>"
        },
        "Message":{
          "shape":"String",
          "documentation":"<p>The field's message.</p>"
        }
      },
      "documentation":"<p>A validation exception field.</p>"
    },
    "ValidationExceptionFieldList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionField"}
    },
    "ValidationExceptionReason":{
      "type":"string",
      "enum":[
        "UNKNOWN_OPERATION",
        "CANNOT_PARSE",
        "FIELD_VALIDATION_FAILED",
        "OTHER"
      ]
    }
  },
  "documentation":"<fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p>"
}
