{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2017-07-01",
    "endpointPrefix":"healthlake",
    "jsonVersion":"1.0",
    "protocol":"json",
    "serviceAbbreviation":"HealthLake",
    "serviceFullName":"Amazon HealthLake",
    "serviceId":"HealthLake",
    "signatureVersion":"v4",
    "signingName":"healthlake",
    "targetPrefix":"HealthLake",
    "uid":"healthlake-2017-07-01"
  },
  "operations":{
    "CreateFHIRDatastore":{
      "name":"CreateFHIRDatastore",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateFHIRDatastoreRequest"},
      "output":{"shape":"CreateFHIRDatastoreResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Creates a Data Store that can ingest and export FHIR formatted data.</p>"
    },
    "DeleteFHIRDatastore":{
      "name":"DeleteFHIRDatastore",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteFHIRDatastoreRequest"},
      "output":{"shape":"DeleteFHIRDatastoreResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Deletes a Data Store. </p>"
    },
    "DescribeFHIRDatastore":{
      "name":"DescribeFHIRDatastore",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeFHIRDatastoreRequest"},
      "output":{"shape":"DescribeFHIRDatastoreResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Gets the properties associated with the FHIR Data Store, including the Data Store ID, Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and Data Store endpoint.</p>"
    },
    "DescribeFHIRExportJob":{
      "name":"DescribeFHIRExportJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeFHIRExportJobRequest"},
      "output":{"shape":"DescribeFHIRExportJobResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Displays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>"
    },
    "DescribeFHIRImportJob":{
      "name":"DescribeFHIRImportJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeFHIRImportJobRequest"},
      "output":{"shape":"DescribeFHIRImportJobResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Displays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job.</p>"
    },
    "ListFHIRDatastores":{
      "name":"ListFHIRDatastores",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListFHIRDatastoresRequest"},
      "output":{"shape":"ListFHIRDatastoresResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Lists all FHIR Data Stores that are in the user’s account, regardless of Data Store status.</p>"
    },
    "StartFHIRExportJob":{
      "name":"StartFHIRExportJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StartFHIRExportJobRequest"},
      "output":{"shape":"StartFHIRExportJobResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Begins a FHIR export job.</p>"
    },
    "StartFHIRImportJob":{
      "name":"StartFHIRImportJob",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StartFHIRImportJobRequest"},
      "output":{"shape":"StartFHIRImportJobResponse"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Begins a FHIR Import job.</p>"
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p>Access is denied. Your account is not authorized to perform this operation.</p>",
      "exception":true
    },
    "BoundedLengthString":{
      "type":"string",
      "max":5000,
      "min":1,
      "pattern":"[\\P{M}\\p{M}]{1,5000}"
    },
    "ClientTokenString":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[a-zA-Z0-9-]+$"
    },
    "ConflictException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p>The Data Store is in a transition state and the user requested action can not be performed.</p>",
      "exception":true
    },
    "CreateFHIRDatastoreRequest":{
      "type":"structure",
      "required":["DatastoreTypeVersion"],
      "members":{
        "DatastoreName":{
          "shape":"DatastoreName",
          "documentation":"<p>The user generated name for the Data Store.</p>"
        },
        "DatastoreTypeVersion":{
          "shape":"FHIRVersion",
          "documentation":"<p>The FHIR version of the Data Store. The only supported version is R4.</p>"
        },
        "PreloadDataConfig":{
          "shape":"PreloadDataConfig",
          "documentation":"<p>Optional parameter to preload data upon creation of the Data Store. Currently, the only supported preloaded data is synthetic data generated from Synthea.</p>"
        },
        "ClientToken":{
          "shape":"ClientTokenString",
          "documentation":"<p>Optional user provided token used for ensuring idempotency.</p>",
          "idempotencyToken":true
        }
      }
    },
    "CreateFHIRDatastoreResponse":{
      "type":"structure",
      "required":[
        "DatastoreId",
        "DatastoreArn",
        "DatastoreStatus",
        "DatastoreEndpoint"
      ],
      "members":{
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS-generated Data Store id. This id is in the output from the initial Data Store creation call.</p>"
        },
        "DatastoreArn":{
          "shape":"DatastoreArn",
          "documentation":"<p>The datastore ARN is generated during the creation of the Data Store and can be found in the output from the initial Data Store creation call.</p>"
        },
        "DatastoreStatus":{
          "shape":"DatastoreStatus",
          "documentation":"<p>The status of the FHIR Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’, ‘DELETING’, ‘DELETED’.</p>"
        },
        "DatastoreEndpoint":{
          "shape":"BoundedLengthString",
          "documentation":"<p>The AWS endpoint for the created Data Store. For preview, only US-east-1 endpoints are supported.</p>"
        }
      }
    },
    "DatastoreArn":{
      "type":"string",
      "pattern":"^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?"
    },
    "DatastoreFilter":{
      "type":"structure",
      "members":{
        "DatastoreName":{
          "shape":"DatastoreName",
          "documentation":"<p>Allows the user to filter Data Store results by name.</p>"
        },
        "DatastoreStatus":{
          "shape":"DatastoreStatus",
          "documentation":"<p>Allows the user to filter Data Store results by status.</p>"
        },
        "CreatedBefore":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that allows the user to set cutoff dates for records. All Data Stores created before the specified date will be included in the results. </p>"
        },
        "CreatedAfter":{
          "shape":"Timestamp",
          "documentation":"<p>A filter that allows the user to set cutoff dates for records. All Data Stores created after the specified date will be included in the results.</p>"
        }
      },
      "documentation":"<p>The filters applied to Data Store query.</p>"
    },
    "DatastoreId":{
      "type":"string",
      "max":32,
      "min":1,
      "pattern":"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
    },
    "DatastoreName":{
      "type":"string",
      "max":256,
      "min":1,
      "pattern":"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
    },
    "DatastoreProperties":{
      "type":"structure",
      "required":[
        "DatastoreId",
        "DatastoreArn",
        "DatastoreStatus",
        "DatastoreTypeVersion",
        "DatastoreEndpoint"
      ],
      "members":{
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS-generated ID number for the Data Store.</p>"
        },
        "DatastoreArn":{
          "shape":"DatastoreArn",
          "documentation":"<p>The Amazon Resource Name used in the creation of the Data Store.</p>"
        },
        "DatastoreName":{
          "shape":"DatastoreName",
          "documentation":"<p>The user-generated name for the Data Store.</p>"
        },
        "DatastoreStatus":{
          "shape":"DatastoreStatus",
          "documentation":"<p>The status of the Data Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or 'DELETED'.</p>"
        },
        "CreatedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The time that a Data Store was created. </p>"
        },
        "DatastoreTypeVersion":{
          "shape":"FHIRVersion",
          "documentation":"<p>The FHIR version. Only R4 version data is supported.</p>"
        },
        "DatastoreEndpoint":{
          "shape":"String",
          "documentation":"<p>The AWS endpoint for the Data Store. Each Data Store will have it's own endpoint with Data Store ID in the endpoint URL.</p>"
        },
        "PreloadDataConfig":{
          "shape":"PreloadDataConfig",
          "documentation":"<p>The preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.</p>"
        }
      },
      "documentation":"<p>Displays the properties of the Data Store, including the ID, Arn, name, and the status of the Data Store.</p>"
    },
    "DatastorePropertiesList":{
      "type":"list",
      "member":{"shape":"DatastoreProperties"}
    },
    "DatastoreStatus":{
      "type":"string",
      "enum":[
        "CREATING",
        "ACTIVE",
        "DELETING",
        "DELETED"
      ]
    },
    "DeleteFHIRDatastoreRequest":{
      "type":"structure",
      "members":{
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p> The AWS-generated ID for the Data Store to be deleted.</p>"
        }
      }
    },
    "DeleteFHIRDatastoreResponse":{
      "type":"structure",
      "required":[
        "DatastoreId",
        "DatastoreArn",
        "DatastoreStatus",
        "DatastoreEndpoint"
      ],
      "members":{
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS-generated ID for the Data Store to be deleted.</p>"
        },
        "DatastoreArn":{
          "shape":"DatastoreArn",
          "documentation":"<p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.</p>"
        },
        "DatastoreStatus":{
          "shape":"DatastoreStatus",
          "documentation":"<p>The status of the Data Store that the user has requested to be deleted. </p>"
        },
        "DatastoreEndpoint":{
          "shape":"BoundedLengthString",
          "documentation":"<p>The AWS endpoint for the Data Store the user has requested to be deleted.</p>"
        }
      }
    },
    "DescribeFHIRDatastoreRequest":{
      "type":"structure",
      "members":{
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS-generated Data Store id. This is part of the ‘CreateFHIRDatastore’ output.</p>"
        }
      }
    },
    "DescribeFHIRDatastoreResponse":{
      "type":"structure",
      "required":["DatastoreProperties"],
      "members":{
        "DatastoreProperties":{
          "shape":"DatastoreProperties",
          "documentation":"<p>All properties associated with a Data Store, including the Data Store ID, Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and Data Store endpoint.</p>"
        }
      }
    },
    "DescribeFHIRExportJobRequest":{
      "type":"structure",
      "required":[
        "DatastoreId",
        "JobId"
      ],
      "members":{
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS generated ID for the Data Store from which files are being exported from for an export job.</p>"
        },
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The AWS generated ID for an export job.</p>"
        }
      }
    },
    "DescribeFHIRExportJobResponse":{
      "type":"structure",
      "required":["ExportJobProperties"],
      "members":{
        "ExportJobProperties":{
          "shape":"ExportJobProperties",
          "documentation":"<p>Displays the properties of the export job, including the ID, Arn, Name, and the status of the job. </p>"
        }
      }
    },
    "DescribeFHIRImportJobRequest":{
      "type":"structure",
      "required":[
        "DatastoreId",
        "JobId"
      ],
      "members":{
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS-generated ID of the Data Store.</p>"
        },
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The AWS-generated job ID.</p>"
        }
      }
    },
    "DescribeFHIRImportJobResponse":{
      "type":"structure",
      "required":["ImportJobProperties"],
      "members":{
        "ImportJobProperties":{
          "shape":"ImportJobProperties",
          "documentation":"<p>The properties of the Import job request, including the ID, ARN, name, and the status of the job.</p>"
        }
      }
    },
    "ExportJobProperties":{
      "type":"structure",
      "required":[
        "JobId",
        "JobStatus",
        "SubmitTime",
        "DatastoreId",
        "OutputDataConfig"
      ],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The AWS generated ID for an export job.</p>"
        },
        "JobName":{
          "shape":"JobName",
          "documentation":"<p>The user generated name for an export job.</p>"
        },
        "JobStatus":{
          "shape":"JobStatus",
          "documentation":"<p>The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.</p>"
        },
        "SubmitTime":{
          "shape":"Timestamp",
          "documentation":"<p>The time an export job was initiated.</p>"
        },
        "EndTime":{
          "shape":"Timestamp",
          "documentation":"<p>The time an export job completed.</p>"
        },
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>"
        },
        "OutputDataConfig":{
          "shape":"OutputDataConfig",
          "documentation":"<p>The output data configuration that was supplied when the export job was created.</p>"
        },
        "DataAccessRoleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The Amazon Resource Name used during the initiation of the job.</p>"
        },
        "Message":{
          "shape":"Message",
          "documentation":"<p>An explanation of any errors that may have occurred during the export job.</p>"
        }
      },
      "documentation":"<p>The properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>"
    },
    "FHIRVersion":{
      "type":"string",
      "enum":["R4"]
    },
    "IamRoleArn":{
      "type":"string",
      "max":2048,
      "min":20,
      "pattern":"arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+"
    },
    "ImportJobProperties":{
      "type":"structure",
      "required":[
        "JobId",
        "JobStatus",
        "SubmitTime",
        "DatastoreId",
        "InputDataConfig"
      ],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The AWS-generated id number for the Import job.</p>"
        },
        "JobName":{
          "shape":"JobName",
          "documentation":"<p>The user-generated name for an Import job.</p>"
        },
        "JobStatus":{
          "shape":"JobStatus",
          "documentation":"<p>The job status for an Import job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.</p>"
        },
        "SubmitTime":{
          "shape":"Timestamp",
          "documentation":"<p>The time that the Import job was submitted for processing.</p>"
        },
        "EndTime":{
          "shape":"Timestamp",
          "documentation":"<p>The time that the Import job was completed.</p>"
        },
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The datastore id used when the Import job was created. </p>"
        },
        "InputDataConfig":{
          "shape":"InputDataConfig",
          "documentation":"<p>The input data configuration that was supplied when the Import job was created.</p>"
        },
        "DataAccessRoleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access to your input data.</p>"
        },
        "Message":{
          "shape":"Message",
          "documentation":"<p>An explanation of any errors that may have occurred during the FHIR import job. </p>"
        }
      },
      "documentation":"<p>Displays the properties of the import job, including the ID, Arn, Name, and the status of the Data Store.</p>"
    },
    "InputDataConfig":{
      "type":"structure",
      "members":{
        "S3Uri":{
          "shape":"S3Uri",
          "documentation":"<p>The S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake. </p>"
        }
      },
      "documentation":"<p> The input properties for an import job.</p>",
      "union":true
    },
    "InternalServerException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p>Unknown error occurs in the service.</p>",
      "exception":true,
      "fault":true
    },
    "JobId":{
      "type":"string",
      "max":32,
      "min":1,
      "pattern":"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
    },
    "JobName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
    },
    "JobStatus":{
      "type":"string",
      "enum":[
        "SUBMITTED",
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED"
      ]
    },
    "ListFHIRDatastoresRequest":{
      "type":"structure",
      "members":{
        "Filter":{
          "shape":"DatastoreFilter",
          "documentation":"<p>Lists all filters associated with a FHIR Data Store request.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Fetches the next page of Data Stores when results are paginated.</p>"
        },
        "MaxResults":{
          "shape":"MaxResultsInteger",
          "documentation":"<p>The maximum number of Data Stores returned in a single page of a ListFHIRDatastoresRequest call.</p>"
        }
      }
    },
    "ListFHIRDatastoresResponse":{
      "type":"structure",
      "required":["DatastorePropertiesList"],
      "members":{
        "DatastorePropertiesList":{
          "shape":"DatastorePropertiesList",
          "documentation":"<p>All properties associated with the listed Data Stores.</p>"
        },
        "NextToken":{
          "shape":"NextToken",
          "documentation":"<p>Pagination token that can be used to retrieve the next page of results.</p>"
        }
      }
    },
    "MaxResultsInteger":{
      "type":"integer",
      "max":500,
      "min":1
    },
    "Message":{
      "type":"string",
      "max":2048,
      "min":1,
      "pattern":"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
    },
    "NextToken":{
      "type":"string",
      "max":8192,
      "pattern":"\\p{ASCII}{0,8192}"
    },
    "OutputDataConfig":{
      "type":"structure",
      "members":{
        "S3Uri":{
          "shape":"S3Uri",
          "documentation":"<p>The S3Uri is the user specified S3 location to which data will be exported from a FHIR Data Store.</p>"
        }
      },
      "documentation":"<p>The output data configuration that was supplied when the export job was created.</p>",
      "union":true
    },
    "PreloadDataConfig":{
      "type":"structure",
      "required":["PreloadDataType"],
      "members":{
        "PreloadDataType":{
          "shape":"PreloadDataType",
          "documentation":"<p>The type of preloaded data. Only Synthea preloaded data is supported.</p>"
        }
      },
      "documentation":"<p> The input properties for the preloaded Data Store. Only data preloaded from Synthea is supported.</p>"
    },
    "PreloadDataType":{
      "type":"string",
      "enum":["SYNTHEA"]
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p> The requested Data Store was not found.</p>",
      "exception":true
    },
    "S3Uri":{
      "type":"string",
      "max":1024,
      "pattern":"s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?"
    },
    "StartFHIRExportJobRequest":{
      "type":"structure",
      "required":[
        "OutputDataConfig",
        "DatastoreId",
        "DataAccessRoleArn",
        "ClientToken"
      ],
      "members":{
        "JobName":{
          "shape":"JobName",
          "documentation":"<p>The user generated name for an export job.</p>"
        },
        "OutputDataConfig":{
          "shape":"OutputDataConfig",
          "documentation":"<p>The output data configuration that was supplied when the export job was created.</p>"
        },
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>"
        },
        "DataAccessRoleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The Amazon Resource Name used during the initiation of the job.</p>"
        },
        "ClientToken":{
          "shape":"ClientTokenString",
          "documentation":"<p>An optional user provided token used for ensuring idempotency.</p>",
          "idempotencyToken":true
        }
      }
    },
    "StartFHIRExportJobResponse":{
      "type":"structure",
      "required":[
        "JobId",
        "JobStatus"
      ],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The AWS generated ID for an export job.</p>"
        },
        "JobStatus":{
          "shape":"JobStatus",
          "documentation":"<p>The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.</p>"
        },
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>"
        }
      }
    },
    "StartFHIRImportJobRequest":{
      "type":"structure",
      "required":[
        "InputDataConfig",
        "DatastoreId",
        "DataAccessRoleArn",
        "ClientToken"
      ],
      "members":{
        "JobName":{
          "shape":"JobName",
          "documentation":"<p>The name of the FHIR Import job in the StartFHIRImport job request.</p>"
        },
        "InputDataConfig":{
          "shape":"InputDataConfig",
          "documentation":"<p>The input properties of the FHIR Import job in the StartFHIRImport job request.</p>"
        },
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS-generated Data Store ID.</p>"
        },
        "DataAccessRoleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.</p>"
        },
        "ClientToken":{
          "shape":"ClientTokenString",
          "documentation":"<p>Optional user provided token used for ensuring idempotency.</p>",
          "idempotencyToken":true
        }
      }
    },
    "StartFHIRImportJobResponse":{
      "type":"structure",
      "required":[
        "JobId",
        "JobStatus"
      ],
      "members":{
        "JobId":{
          "shape":"JobId",
          "documentation":"<p>The AWS-generated job ID.</p>"
        },
        "JobStatus":{
          "shape":"JobStatus",
          "documentation":"<p>The status of an import job.</p>"
        },
        "DatastoreId":{
          "shape":"DatastoreId",
          "documentation":"<p>The AWS-generated Data Store ID.</p>"
        }
      }
    },
    "String":{
      "type":"string",
      "max":10000,
      "pattern":"[\\P{M}\\p{M}]{0,10000}"
    },
    "ThrottlingException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p>The user has exceeded their maximum number of allowed calls to the given API. </p>",
      "exception":true
    },
    "Timestamp":{"type":"timestamp"},
    "ValidationException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"String"}
      },
      "documentation":"<p>The user input parameter was invalid.</p>",
      "exception":true
    }
  },
  "documentation":"<p>Amazon HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.</p>"
}
