{
  "authPolicyActions" : {
    "skip" : true
  },
  // TODO: What's this link for?
  // See https://github.com/aws/aws-sdk-net/blob/master/ServiceModels/ec2.customizations.json
  "operationModifiers": {
    "AttachVolume": {
        "useWrappingResult": true,
        "wrappedResultShape": "VolumeAttachment",
        "wrappedResultMember": "Attachment"
    },
    "CreateKeyPair": {
        "useWrappingResult": true,
        "wrappedResultShape": "KeyPair",
        "wrappedResultMember": "KeyPair"
    },
    "CreateSnapshot": {
        "useWrappingResult": true,
        "wrappedResultShape": "Snapshot",
        "wrappedResultMember": "Snapshot"
    },
    "CreateVolume": {
        "useWrappingResult": true,
        "wrappedResultShape": "Volume",
        "wrappedResultMember": "Volume"
    },
    "DescribeImageAttribute": {
        "useWrappingResult": true,
        "wrappedResultShape": "ImageAttribute",
        "wrappedResultMember": "ImageAttribute"
    },
    "DescribeInstanceAttribute": {
        "useWrappingResult": true,
        "wrappedResultShape": "InstanceAttribute",
        "wrappedResultMember": "InstanceAttribute"
    },
    "DetachVolume": {
        "useWrappingResult": true,
        "wrappedResultShape": "VolumeAttachment",
        "wrappedResultMember": "Attachment"
    },
    "RunInstances": {
        "useWrappingResult": true,
        "wrappedResultShape": "Reservation",
        "wrappedResultMember": "Reservation"
    }
  },

  "shapeSubstitutions" : {
    "AttributeValue": {
        "emitAsShape": "String",
        "emitFromMember": "Value",
        "skipMarshallPathForShapes": ["DhcpConfiguration"]
    },
    "AttributeBooleanValue": {
        "emitAsShape": "Boolean",
        "emitFromMember": "Value"
    },
    "Blob": {
        "emitAsShape": "String"
    },
    "BlobAttributeValue": {
        "emitAsShape": "String",
        "emitFromMember": "Value"
    },
    "NewDhcpConfiguration": {
        "emitAsShape": "DhcpConfiguration"
    },
    "RunInstancesMonitoringEnabled": {
        "emitAsShape": "Boolean",
        "emitFromMember": "Enabled"
    },
    "RequestSpotLaunchSpecification": {
        "emitAsShape": "LaunchSpecification"
    }
  },

    "shapeModifiers": {
        "*": {
            "exclude": [
                "DryRun"
            ]
        },
        "IpPermission": {
            "modify": [
                {
                  "IpRanges": {
                      "emitPropertyName": "Ipv4Ranges"
                  }
                }
            ]
        },
        "LaunchSpecification": {
            "modify": [
                {
                    // SecurityGroups is a list of strings in the request, but a list of group-identifier structures in the response.
                    // To handle this, we rename this property to "AllSecurityGroups" which will be only used for unmarshalling.
                    // Then we inject a new "securityGroups" property which is a list of groupName strings
                    // and it will be only used for marshalling.
                    "SecurityGroups": {
                        "emitPropertyName": "AllSecurityGroups"
                    }
                },
                {
                    "Monitoring": {
                        "emitPropertyName": "MonitoringEnabled"
                    }
                },
                {
                    "NetworkInterfaces": {
                        "marshallLocationName": "NetworkInterface"
                    }
                }
            ],
            "inject": [
                {
                    "SecurityGroups": {
                        "shape": "GroupNameStringList",
                        "documentation": "<p>One or more security group names.</p>",
                        "locationName": "securityGroup"
                    }
                }
            ]
        },
        "Reservation": {
            "inject": [
                {
                    "GroupNames": {
                        "shape": "GroupNameStringList",
                        "documentation": "<p>One or more security group names.</p>",
                        "locationName": "groupName"
                    }
                }
            ]
        },
        "DhcpConfiguration": {
            "modify": [
                {
                    "Values": {
                        "marshallLocationName" : "Value"
                    }
                }
            ]
        },
        "ImportInstanceLaunchSpecification": {
            "modify": [
                 {
                     "Monitoring": {
                         "marshallLocationName" : "Monitoring.Enabled",
                         "unmarshallLocationName" : "monitoring/enabled"
                     }
                 }
            ]
        },
        "AttachClassicLinkVpcResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "ConfirmProductInstanceResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "CreateRouteResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "DeleteVpcPeeringConnectionResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "DetachClassicLinkVpcResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
         "DisableVpcClassicLinkDnsSupportResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
         "DisableVpcClassicLinkResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
         "EnableVpcClassicLinkDnsSupportResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
         "EnableVpcClassicLinkResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
         "ModifyInstancePlacementResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
         "ModifySpotFleetRequestResponse": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "ModifyVpcEndpointResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "RejectVpcPeeringConnectionResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "DeleteFpgaImageResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "DeleteNetworkInterfacePermissionResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "ResetFpgaImageAttributeResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "UpdateSecurityGroupRuleDescriptionsEgressResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "UpdateSecurityGroupRuleDescriptionsIngressResult": {
            "modify": [
                {
                    "Return": {
                        "emitPropertyName": "ReturnValue"
                    }
                }
            ]
        },
        "Image": {
            "modify": [
                {
                    "Public": {
                        "emitPropertyName": "PublicLaunchPermissions"
                    }
                }
            ]
        },
        "FpgaImage": {
            "modify": [
                {
                    "Public": {
                        "emitPropertyName": "isPublic"
                    }
                }
            ]
        }
   },
   "blacklistedSimpleMethods" : [
    "acceptVpcPeeringConnection",
    "authorizeSecurityGroupIngress",
    "cancelImportTask",
    "createVpcPeeringConnection",
    "deleteSecurityGroup",
    "disableVpcClassicLinkDnsSupport",
    "disassociateAddress",
    "enableVpcClassicLinkDnsSupport",
    "importImage",
    "importSnapshot",
    "releaseAddress",
    "revokeSecurityGroupIngress"
  ],
  "verifiedSimpleMethods" : [
    "allocateAddress",
    "associateAddress",
    "createInternetGateway",
    "deleteSpotDatafeedSubscription",
    "describeFpgaImages",
    "describeReservedInstancesListings",
    "describeSpotDatafeedSubscription",
    "createDefaultVpc"
  ]
}
