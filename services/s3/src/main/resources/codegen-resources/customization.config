{
  "verifiedSimpleMethods": [
    "listBuckets"
  ],
  "renameShapes": {
    "Error": "S3Error",
    "Object": "S3Object"
  },
  "shapeModifiers": {
    "S3Object": {
      "modify": [
        {
          "Size": {
            "emitAsType": "long"
          }
        }
      ]
    }
  },
  "serviceSpecificClientConfigClass": "S3Configuration",
  "attachPayloadTraitToMember": {
    "GetBucketLocationOutput": "LocationConstraint"
  },
  "convenienceTypeOverloads": [
    {
      "shapeName": "PutObjectRequest",
      "memberName": "Tagging",
      "convenienceType": "software.amazon.awssdk.services.s3.model.Tagging",
      "typeAdapterFqcn": "software.amazon.awssdk.services.s3.internal.TaggingAdapter"
    },
    {
      "shapeName": "CopyObjectRequest",
      "memberName": "Tagging",
      "convenienceType": "software.amazon.awssdk.services.s3.model.Tagging",
      "typeAdapterFqcn": "software.amazon.awssdk.services.s3.internal.TaggingAdapter"
    }
  ],
  "customResponseMetadata": {
    "EXTENDED_REQUEST_ID": "x-amz-id-2",
    "CLOUD_FRONT_ID": "X-Amz-Cf-Id",
    "REQUEST_ID": "x-amz-request-id"
  },
  "customProtocolFactoryFqcn": "software.amazon.awssdk.protocols.xml.AwsS3ProtocolFactory",
  "operationModifiers": {
    "SelectObjectContent": {
      "exclude": true
    }
  },
  "deprecatedOperations": [
    "GetBucketLifecycle",
    "GetBucketNotification",
    "PutBucketLifecycle",
    "PutBucketNotification"
  ]
}
