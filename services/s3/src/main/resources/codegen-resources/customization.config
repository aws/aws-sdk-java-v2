{
  "verifiedSimpleMethods": [
    "listBuckets"
  ],
  "renameShapes": {
    "Error": "S3Error",
    "Object": "S3Object"
  },
  "customSdkShapes": {
    "shapes":{
      "SdkPartType":{
        "type":"string",
        "enum":[
          "DEFAULT",
          "LAST"
        ]
      }
    }
  },
  "shapeModifiers": {
    "S3Object": {
      "modify": [
        {
          "Size": {
            "emitAsType": "long"
          }
        }
      ]
    },
    "UploadPartRequest": {
      "inject": [
        {
          "SdkPartType": {
            "shape": "SdkPartType",
            "documentation": "Indicates whether the request is a last part or not. This field will not be included in the request payload."
          }
        }
      ]
    },
    "CopyObjectRequest": {
      "inject": [
        {
          "SourceBucket": {
            "shape": "BucketName",
            "documentation": "The name of the bucket containing the object to copy. The provided input will be URL encoded. The {@code sourceBucket}, {@code sourceKey}, and {@code sourceVersionId} parameters must not be used in conjunction with the {@code copySource} parameter."
          },
          "SourceKey": {
            "shape": "ObjectKey",
            "documentation": "The key of the object to copy. The provided input will be URL encoded. The {@code sourceBucket}, {@code sourceKey}, and {@code sourceVersionId} parameters must not be used in conjunction with the {@code copySource} parameter."
          },
          "SourceVersionId": {
            "shape": "ObjectVersionId",
            "documentation": "Specifies a particular version of the source object to copy. By default the latest version is copied. The {@code sourceBucket}, {@code sourceKey}, and {@code sourceVersionId} parameters must not be used in conjunction with the {@code copySource} parameter."
          }
        }
      ],
      "modify": [
        {
          "CopySource": {
            "deprecated": true,
            "deprecatedMessage": "The {@code copySource} parameter has been deprecated in favor of the more user-friendly {@code sourceBucket}, {@code sourceKey}, and {@code sourceVersionId} parameters. The {@code copySource} parameter will remain fully functional, but it must not be used in conjunction with its replacement parameters."
          },
          "Bucket": {
            "emitPropertyName": "DestinationBucket",
            "existingNameDeprecated": true
          },
          "Key": {
            "emitPropertyName": "DestinationKey",
            "existingNameDeprecated": true
          }
        }
      ]
    },
    "UploadPartCopyRequest": {
      "inject": [
        {
          "SourceBucket": {
            "shape": "BucketName",
            "documentation": "The name of the bucket containing the object to copy. The provided input will be URL encoded. The {@code sourceBucket}, {@code sourceKey}, and {@code sourceVersionId} parameters must not be used in conjunction with the {@code copySource} parameter."
          },
          "SourceKey": {
            "shape": "ObjectKey",
            "documentation": "The key of the object to copy. The provided input will be URL encoded. The {@code sourceBucket}, {@code sourceKey}, and {@code sourceVersionId} parameters must not be used in conjunction with the {@code copySource} parameter."
          },
          "SourceVersionId": {
            "shape": "ObjectVersionId",
            "documentation": "Specifies a particular version of the source object to copy. By default the latest version is copied. The {@code sourceBucket}, {@code sourceKey}, and {@code sourceVersionId} parameters must not be used in conjunction with the {@code copySource} parameter."
          }
        }
      ],
      "modify": [
        {
          "CopySource": {
            "deprecated": true,
            "deprecatedMessage": "The {@code copySource} parameter has been deprecated in favor of the more user-friendly {@code sourceBucket}, {@code sourceKey}, and {@code sourceVersionId} parameters. The {@code copySource} parameter will remain fully functional, but it must not be used in conjunction with its replacement parameters."
          },
          "Bucket": {
            "emitPropertyName": "DestinationBucket",
            "existingNameDeprecated": true
          },
          "Key": {
            "emitPropertyName": "DestinationKey",
            "existingNameDeprecated": true
          }
        }
      ]
    },
    "ObjectVersion": {
      "modify": [
        {
          "Size": {
            "emitAsType": "long"
          }
        }
      ]
    },
    "Part": {
      "modify": [
        {
          "Size": {
            "emitAsType": "long"
          }
        }
      ]
    },
    "FilterRuleName": {
      "modify": [
        {
          "prefix": { "emitEnumValue": "Prefix" }
        },
        {
          "suffix": { "emitEnumValue": "Suffix" }
        }
      ]
    },
    "ReplicationRuleFilter": {
      "union": true
    },
    "MetricsFilter": {
      "union": true
    },
    "AnalyticsFilter": {
      "union": true
    },
    "LifecycleRuleFilter": {
      "union": true
    }
  },
  "serviceConfig": {
    "className": "S3Configuration",
    "hasDualstackProperty": true,
    "hasUseArnRegionProperty": true,
    "hasMultiRegionEnabledProperty": true,
    "hasPathStyleAccessEnabledProperty":true,
    "hasAccelerateModeEnabledProperty":true
  },
  "skipEndpointTests": {
      "region is not a valid DNS-suffix": "Validation for region happens in client builder",
      "Invalid access point ARN: Not S3": "Test assumes UseArnRegion is true but SDK defaults to false",
      "Invalid access point ARN: AccountId is invalid": "Test assumes UseArnRegion is true but SDK defaults to false",
      "Invalid access point ARN: access point name is invalid": "Test assumes UseArnRegion is true but SDK defaults to false",
      "Access points (disable access points explicitly false)": "Test assumes UseArnRegion is true but SDK defaults to false",
      "Bucket region is invalid": "Test assumes UseArnRegion is true but SDK defaults to false",
      "Access points when Access points explicitly disabled (used for CreateBucket)": "Explicitly disabling access points not support on client",
      "Access point ARN with FIPS & Dualstack": "Test assumes UseArnRegion is true but SDK defaults to false",
      "Access point ARN with Dualstack": "Test assumes UseArnRegion is true but SDK defaults to false",
      "scheme is respected (virtual addressing)": "Test is broken for client test, needs operationInputs for Bucket",
      "scheme is respected": "Test is broken for client test, needs operationInputs for Bucket",
      "invalid Endpoint override": "Test is broken for client test, needs operationInputs for Bucket",
      "vanilla access point arn with region mismatch and UseArnRegion unset": "SDK config default to UseArnRegion = false",
      "no region set": "SDK client builder requires a region",
      "ForcePathStyle, aws-global region with fips is invalid": "Test is broken for client tests, need operationInputs for Bucket param",
      "accelerate (dualstack=false)@cn-north-1": "Test is broken for client tests, need operationInputs for Bucket param",
      "path style + accelerate = error@us-west-2": "Validation for this happens during client build time",
      "path style + accelerate = error@cn-north-1": "Validation for this happens during client build time",
      "path style + accelerate = error@af-south-1": "Validation for this happens during client build time",
      "SDK::HOST + accelerate@cn-north-1": "Test is broken for client tests, need operationInputs for Bucket param",
      "outposts arn with region mismatch and UseArnRegion unset": "SDK default to UseArnRegion=false",
      "S3 outposts does not support dualstack": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 outposts does not support fips": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 outposts does not support accelerate": "Test is broken for client tests, need operationInputs for Bucket param",
      "validates against subresource": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda @us-east-1": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda @us-gov-east-1": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda @us-gov-east-1, with fips": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda with invalid arn - invalid resource": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda with invalid arn - missing region": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda with invalid arn - missing account-id": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda with invalid arn - missing access point name": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda with invalid arn - access point name contains invalid character: *": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda with invalid arn - access point name contains invalid character: .": "Test is broken for client tests, need operationInputs for Bucket param",
      "object lambda with invalid arn - access point name contains sub resources": "Test is broken for client tests, need operationInputs for Bucket param",
      "WriteGetObjectResponse with accelerate": "Test is broken for client tests, need operationInputs to make SDK use WriteGetObjectResponse",
      "WriteGetObjectResponse with invalid partition": "SDK validates region earlier in the chain",
      "WriteGetObjectResponse with an unknown partition": "Test is broken for client tests, need operationInputs to make SDK use WriteGetObjectResponse",
      "S3 Outposts Abba Real Outpost Prod us-west-1": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Abba Real Outpost Prod ap-east-1": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Abba Ec2 Outpost Prod us-east-1": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Abba Ec2 Outpost Prod me-south-1": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Abba Real Outpost Beta": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Abba Ec2 Outpost Beta": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Abba - No endpoint set for beta": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Abba Invalid hardware type": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Abba Special character in Outpost Arn": "Test is broken for client tests, need operationInputs for Bucket param",
      "S3 Outposts Snow with bucket": "Test is broken for client tests, need operationInputs for Bucket and SnowEndpointUrl param",
      "S3 Outposts Snow without bucket": "Test is broken for client tests, need operationInputs for Bucket and SnowEndpointUrl param",
      "S3 Outposts Snow no port": "Test is broken for client tests, need operationInputs for Bucket and SnowEndpointUrl param",
      "S3 Outposts Snow dns endpoint": "Test is broken for client tests, need operationInputs for Bucket and SnowEndpointUrl param",
      "S3 Outposts Snow invalid url": "Test is broken for client tests, need operationInputs for Bucket and SnowEndpointUrl param",
      "S3 Outposts Snow FIPS enabled": "Test is broken for client tests, need operationInputs for Bucket and SnowEndpointUrl param",
      "S3 Outposts Snow Dual-stack enabled": "Test is broken for client tests, need operationInputs for Bucket and SnowEndpointUrl param",
      "S3 Outposts Snow Accelerate enabled": "Test is broken for client tests, need operationInputs for Bucket and SnowEndpointUrl param",
      "Endpoint override, accesspoint with http, path, query, and port": "Test is broken for client tests, need operationInputs for Bucket param"
  },
  "attachPayloadTraitToMember": {
    "GetBucketLocationOutput": "LocationConstraint"
  },
  "convenienceTypeOverloads": [
    {
      "shapeName": "PutObjectRequest",
      "memberName": "Tagging",
      "convenienceType": "software.amazon.awssdk.services.s3.model.Tagging",
      "typeAdapterFqcn": "software.amazon.awssdk.services.s3.internal.TaggingAdapter"
    },
    {
      "shapeName": "CopyObjectRequest",
      "memberName": "Tagging",
      "convenienceType": "software.amazon.awssdk.services.s3.model.Tagging",
      "typeAdapterFqcn": "software.amazon.awssdk.services.s3.internal.TaggingAdapter"
    },
    {
      "shapeName": "CreateMultipartUploadRequest",
      "memberName": "Tagging",
      "convenienceType": "software.amazon.awssdk.services.s3.model.Tagging",
      "typeAdapterFqcn": "software.amazon.awssdk.services.s3.internal.TaggingAdapter"
    }
  ],
  "customResponseMetadata": {
    "EXTENDED_REQUEST_ID": "x-amz-id-2",
    "CLOUD_FRONT_ID": "X-Amz-Cf-Id",
    "REQUEST_ID": "x-amz-request-id"
  },
  "customProtocolFactoryFqcn": "software.amazon.awssdk.protocols.xml.AwsS3ProtocolFactory",
  "operationModifiers": {
  },
  "deprecatedOperations": [
    "GetBucketLifecycle",
    "GetBucketNotification",
    "PutBucketLifecycle",
    "PutBucketNotification"
  ],
  "utilitiesMethod": {
    "returnType": "software.amazon.awssdk.services.s3.S3Utilities",
    "createMethodParams": [
      "clientConfiguration"
    ]
  },
  "additionalBuilderMethods": [
      {
        "methodName": "crtBuilder",
        "clientType": "async",
        "instanceType": "software.amazon.awssdk.services.s3.internal.crt.S3CrtAsyncClient",
        "returnType": "software.amazon.awssdk.services.s3.S3CrtAsyncClientBuilder",
        "statement": "builder()",
        "javaDoc": "Create a builder that can be used to configure a CRT-based {@link S3AsyncClient}"
      },
      {
        "methodName": "crtCreate",
        "clientType": "async",
        "instanceType": "software.amazon.awssdk.services.s3.internal.crt.S3CrtAsyncClient",
        "returnType": "software.amazon.awssdk.services.s3.S3AsyncClient",
        "statement": "builder().build()",
        "javaDoc": "Create a CRT-based {@link S3AsyncClient} with default settings"
      }
  ],
  "delegateAsyncClientClass": true,
  "delegateSyncClientClass": true,
  "useGlobalEndpoint": true,
  "interceptors": [
    "software.amazon.awssdk.services.s3.internal.handlers.PutObjectInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.CreateBucketInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.CreateMultipartUploadRequestInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.EnableChunkedEncodingInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.ConfigureSignerInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.DecodeUrlEncodedResponseInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.GetBucketPolicyInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.AsyncChecksumValidationInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.SyncChecksumValidationInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.EnableTrailingChecksumInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.ExceptionTranslationInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.GetObjectInterceptor",
    "software.amazon.awssdk.services.s3.internal.handlers.CopySourceInterceptor"
  ],
  "requiredTraitValidationEnabled": true,
  "additionalClientBuilders": {
    "S3CrtAsyncClientBuilder": {
        "clientType": "Async",
        "properties": {
            "credentialsProvider": {
                "classFqcn": "software.amazon.awssdk.auth.credentials.AwsCredentialsProvider",
                "javadoc": "Configure the credentials that should be used to authenticate with S3.\n\n<p>The default provider will attempt to identify the credentials automatically using the following checks:\n<ol>\n<li>Java System Properties - {@code aws.accessKeyId} and {@code aws.secretKey}</li>\n<li>Environment Variables - {@code AWS_ACCESS_KEY_ID} and {@code AWS_SECRET_ACCESS_KEY}</li>\n<li>Credential profiles file at the default location (~/.aws/credentials) shared by all AWS SDKs and the AWS CLI</li>\n<li>Credentials delivered through the Amazon EC2 container service if AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\nenvironment variable is set and security manager has permission to access the variable.</li>\n<li>Instance profile credentials delivered through the Amazon EC2 metadata service</li>\n</ol>\n\n<p>If the credentials are not found in any of the locations above, an exception will be thrown at {@link #build()}\ntime.\n</p>\n\n@param credentialsProvider the credentials to use\n@return This builder for method chaining."
            },
            "region": {
                "classFqcn": "software.amazon.awssdk.regions.Region",
                "javadoc": "Configure the region with which the SDK should communicate.\n\n<p>If this is not specified, the SDK will attempt to identify the endpoint automatically using the following logic:\n<ol>\n <li>Check the 'aws.region' system property for the region.</li>\n <li>Check the 'AWS_REGION' environment variable for the region.</li>\n <li>Check the {user.home}/.aws/credentials and {user.home}/.aws/config files for the region.</li>\n <li>If running in EC2, check the EC2 metadata service for the region.</li>\n</ol>\n\n@param region the region to be used\n@return this builder for method chaining."
            },
            "minimumPartSizeInBytes": {
                "classFqcn": "java.lang.Long",
                "javadoc": "Sets the minimum part size for transfer parts. Decreasing the minimum part size causes multipart transfer to be split into\na larger number of smaller parts. Setting this value too low has a negative effect on transfer speeds, causing extra\nlatency and network communication for each part.\n\n<p>\nBy default, it is 8MB. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/qfacts.html\">Amazon S3 multipart\nupload limits</a> for guidance.\n\n@param uploadPartSize The minimum part size for transfer parts.\n@return this builder for method chaining."
            },
            "targetThroughputInGbps": {
                "classFqcn": "java.lang.Double",
                "javadoc": "The target throughput for transfer requests. Higher value means more connections will be established with S3.\n\n<p>\nWhether the transfer manager can achieve the configured target throughput depends on various factors such as the network\nbandwidth of the environment and whether {@link #maxConcurrency} is configured.\n\n<p>\nBy default, it is 10 gigabits per second. If users want to transfer as fast as possible, it's recommended to set it to the\nmaximum network bandwidth on the host that the application is running on. For EC2 instances, you can find network\nbandwidth for a specific\ninstance type in <a href=\"https://aws.amazon.com/ec2/instance-types/\">Amazon EC2 instance type page</a>.\nIf you are running into out of file descriptors error, consider using {@link #maxConcurrency(Integer)} to limit the\nnumber of connections.\n\n@param targetThroughputInGbps the target throughput in Gbps\n@return this builder for method chaining.\n@see #maxConcurrency(Integer)"
            },
            "maxConcurrency": {
                "classFqcn": "java.lang.Integer",
                "javadoc": "Specifies the maximum number of S3 connections that should be established during\na transfer.\n\n<p>\nIf not provided, the TransferManager will calculate the optional number of connections\nbased on {@link #targetThroughputInGbps}. If the value is too low, the S3TransferManager\nmight not achieve the specified target throughput.\n\n@param maxConcurrency the max number of concurrent requests\n@return this builder for method chaining.\n@see #targetThroughputInGbps(Double)"
            },
            "endpointOverride": {
                "classFqcn": "java.net.URI",
                "javadoc": "Configure the endpoint override with which the SDK should communicate.\n\n@param endpointOverride the endpoint override to be used\n@return this builder for method chaining."
            },
            "checksumValidationEnabled": {
                "classFqcn": "java.lang.Boolean",
                "javadoc": "Option to disable checksum validation for {@link S3AsyncClient#getObject(GetObjectRequest, Path)} and\n{@link S3AsyncClient#putObject(PutObjectRequest, Path)}.\n\n<p>\nChecksum validation using CRC32 is enabled by default."
            },
            "initialReadBufferSizeInBytes": {
                "classFqcn": "java.lang.Long",
                "javadoc": "Configure the starting buffer size the client will use to buffer the parts downloaded from S3. Maintain a larger window to\nkeep up a high download throughput; parts cannot download in parallel unless the window is large enough to hold multiple\nparts. Maintain a smaller window to limit the amount of data buffered in memory.\n\n<p>\nBy default, it is equal to the resolved part size * 10\n\n@param initialReadBufferSizeInBytes the initial read buffer size\n@return this builder for method chaining."
            },
            "httpConfiguration": {
                "classFqcn": "software.amazon.awssdk.services.s3.crt.S3CrtHttpConfiguration",
                "javadoc": "Sets the HTTP configuration to use for this client.\n\n@param configuration The http proxy configuration to use\n@return The builder of the method chaining.",
                "generateConsumerBuilder": true
            }
        }
    }
  }
}
