/*
 * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package software.amazon.awssdk.services.dynamodb.mapper;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Set;
import org.junit.Test;
import software.amazon.awssdk.services.dynamodb.datamodeling.DynamoDbAttribute;
import software.amazon.awssdk.services.dynamodb.datamodeling.DynamoDbAutoGenerateStrategy;
import software.amazon.awssdk.services.dynamodb.datamodeling.DynamoDbAutoGeneratedTimestamp;
import software.amazon.awssdk.services.dynamodb.datamodeling.DynamoDbFlattened;
import software.amazon.awssdk.services.dynamodb.datamodeling.DynamoDbMappingException;
import software.amazon.awssdk.services.dynamodb.datamodeling.DynamoDbTable;
import software.amazon.awssdk.services.dynamodb.pojos.AuditRecord;
import software.amazon.awssdk.services.dynamodb.pojos.AutoKeyAndVal;
import software.amazon.awssdk.services.dynamodb.pojos.Currency;
import software.amazon.awssdk.services.dynamodb.pojos.DateRange;

/**
 * Tests updating component attribute fields correctly.
 */
public class FlattenedIntegrationTest extends AbstractKeyAndValIntegrationTestCase {

    /**
     * Test the mappings.
     */
    @Test
    public void testAuditRecord() {
        final KeyAndAuditRecord object = new KeyAndAuditRecord();
        final AuditRecord auditRecord = assertBeforeAndAfterChange(true, object);
        assertNotNull(auditRecord.getCreatedDate());
        assertNotNull(auditRecord.getLastModifiedDate());
        assertEquals(Long.valueOf(1L), auditRecord.getVersionNumber());
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test
    public void testDateRange() throws Exception {
        final KeyAndDateRange object = new KeyAndDateRange();
        object.setVal(new DateRange(new Date(), -60000L, 60000L));

        assertBeforeAndAfterChange(false, object);
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test
    public void testDateRangeIsNull() {
        final KeyAndDateRange object = new KeyAndDateRange();

        assertBeforeAndAfterChange(false, object);
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test
    public void testDateRangeStartAndEndIsNull() {
        final KeyAndDateRange object = new KeyAndDateRange();
        object.setVal(new DateRange());

        final DateRange after = assertBeforeAndAfterChange(null, object);
        assertNull(after); //<- an empty date range produces null object
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test
    public void testDateRangeStartIsNull() throws Exception {
        final KeyAndDateRange object = new KeyAndDateRange();
        object.setVal(new DateRange(null, new Date()));

        assertBeforeAndAfterChange(false, object);
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test
    public void testDateRangeEndIsNull() throws Exception {
        final KeyAndDateRange object = new KeyAndDateRange();
        object.setVal(new DateRange(new Date(), null));

        assertBeforeAndAfterChange(false, object);
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test
    public void testAutoDateRange() throws Exception {
        final KeyAndAutoDateRange object = new KeyAndAutoDateRange();

        assertBeforeAndAfterChange(true, object);
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test(expected = DynamoDbMappingException.class)
    public void testKeyAndUnknownAttribute() {
        final KeyAndUnknownAttribute object = new KeyAndUnknownAttribute();
        object.setVal(new DateRange(new Date(), -60000L, 60000L));

        assertBeforeAndAfterChange(false, object);
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test(expected = DynamoDbMappingException.class)
    public void testDateRangeSet() {
        final KeyAndDateRangeSet object = new KeyAndDateRangeSet();
        object.setVal(Collections.<DateRange>singleton(new DateRange(new Date(), -60000L, 60000L)));

        assertBeforeAndAfterChange(false, object);
    }

    /**
     * Test using {@code DateRange}.
     */
    @Test(expected = DynamoDbMappingException.class)
    public void testDateRangeList() {
        final KeyAndDateRangeList object = new KeyAndDateRangeList();
        object.setVal(Collections.<DateRange>singletonList(new DateRange(new Date(), -60000L, 60000L)));

        assertBeforeAndAfterChange(false, object);
    }

    /**
     * Test using {@code Currency}.
     */
    @Test
    public void testKeyAndCurrencies() {
        final KeyAndCurrencies object = new KeyAndCurrencies();
        object.setVal(new Currency(1000000D, "CAD"));
        object.setOther(new Currency(99.99D, "USD"));

        assertBeforeAndAfterChange(false, object);

        final KeyAndCurrencies reload = util.load(object.getClass(), object.getKey());
        assertEquals(object.getVal(), reload.getVal());
        assertEquals(object.getOther(), reload.getOther());
    }

    /**
     * test object.
     */
    @DynamoDbTable(tableName = "aws-java-sdk-util")
    public static class KeyAndAuditRecord extends AutoKeyAndVal<AuditRecord> {
        public AuditRecord getVal() {
            return super.getVal();
        }

        @Override
        public void setVal(final AuditRecord val) {
            super.setVal(val);
        }
    }

    /**
     * An object with {@code DateRange}.
     */
    @DynamoDbTable(tableName = "aws-java-sdk-util")
    public static class KeyAndDateRange extends AutoKeyAndVal<DateRange> {
        @DynamoDbFlattened(attributes = {
                @DynamoDbAttribute(mappedBy = "start", attributeName = "DateRangeStart"),
                @DynamoDbAttribute(mappedBy = "end", attributeName = "DateRangeEnd")})
        public DateRange getVal() {
            return super.getVal();
        }

        @Override
        public void setVal(final DateRange val) {
            super.setVal(val);
        }
    }

    /**
     * An object with {@code DateRange}.
     */
    @DynamoDbTable(tableName = "aws-java-sdk-util")
    public static class KeyAndAutoDateRange extends AutoKeyAndVal<KeyAndAutoDateRange.AutoDateRange> {
        @DynamoDbFlattened(attributes = {
                @DynamoDbAttribute(mappedBy = "start", attributeName = "CreatedDate"),
                @DynamoDbAttribute(mappedBy = "end", attributeName = "LastModifiedDate")})
        public AutoDateRange getVal() {
            return super.getVal();
        }

        @Override
        public void setVal(final AutoDateRange val) {
            super.setVal(val);
        }

        public static class AutoDateRange extends DateRange {
            @DynamoDbAutoGeneratedTimestamp(strategy = DynamoDbAutoGenerateStrategy.CREATE)
            public Date start() {
                return super.getStart();
            }

            @DynamoDbAutoGeneratedTimestamp(strategy = DynamoDbAutoGenerateStrategy.ALWAYS)
            public Date getEnd() {
                return super.getEnd();
            }
        }
    }

    /**
     * An object with {@code DateRange}.
     */
    @DynamoDbTable(tableName = "aws-java-sdk-util")
    public static class KeyAndUnknownAttribute extends AutoKeyAndVal<DateRange> {
        @DynamoDbFlattened(attributes = {
                @DynamoDbAttribute(mappedBy = "xstart", attributeName = "DateRangeStart"),
                @DynamoDbAttribute(mappedBy = "end", attributeName = "DateRangeEnd")})
        public DateRange getVal() {
            return super.getVal();
        }

        @Override
        public void setVal(final DateRange val) {
            super.setVal(val);
        }
    }

    /**
     * An object with {@code DateRange}.
     */
    @DynamoDbTable(tableName = "aws-java-sdk-util")
    public static class KeyAndDateRangeSet extends AutoKeyAndVal<Set<DateRange>> {
        @DynamoDbFlattened(attributes = {
                @DynamoDbAttribute(mappedBy = "start", attributeName = "starts"),
                @DynamoDbAttribute(mappedBy = "end", attributeName = "ends")})
        public Set<DateRange> getVal() {
            return super.getVal();
        }

        @Override
        public void setVal(final Set<DateRange> val) {
            super.setVal(val);
        }
    }

    /**
     * An object with {@code DateRange}.
     */
    @DynamoDbTable(tableName = "aws-java-sdk-util")
    public static class KeyAndDateRangeList extends AutoKeyAndVal<List<DateRange>> {
        @DynamoDbFlattened(attributes = {
                @DynamoDbAttribute(mappedBy = "start", attributeName = "starts"),
                @DynamoDbAttribute(mappedBy = "end", attributeName = "ends")})
        public List<DateRange> getVal() {
            return super.getVal();
        }

        @Override
        public void setVal(final List<DateRange> val) {
            super.setVal(val);
        }
    }

    /**
     * An object with {@code Currency}.
     */
    @DynamoDbTable(tableName = "aws-java-sdk-util")
    public static class KeyAndCurrencies extends AutoKeyAndVal<Currency> {
        private Currency other;

        @DynamoDbFlattened(attributes = {
                @DynamoDbAttribute(mappedBy = "amount", attributeName = "firstAmount"),
                @DynamoDbAttribute(mappedBy = "unit", attributeName = "firstUnit")})
        public Currency getVal() {
            return super.getVal();
        }

        @Override
        public void setVal(final Currency val) {
            super.setVal(val);
        }

        @DynamoDbFlattened(attributes = {
                @DynamoDbAttribute(mappedBy = "amount", attributeName = "secondAmount"),
                @DynamoDbAttribute(mappedBy = "unit", attributeName = "secondUnit")})
        public Currency getOther() {
            return this.other;
        }

        public void setOther(final Currency other) {
            this.other = other;
        }
    }

}
