[
  {
    "description": "Input with members in path, query parameters, headers, and payload is marshalled correctly",
    "given": {
      "input": {
        "PathParam": "pathParamValue",
        "QueryParamOne": "valueOne",
        "QueryParamTwo": "valueTwo",
        "StringHeaderMember": "headerVal",
        "PayloadStructParam": {
          "PayloadMemberOne": "payloadValueOne",
          "PayloadMemberTwo": "payloadValueTwo"
        }
      }
    },
    "when": {
      "action": "marshall",
      "operation": "MultiLocationOperation"
    },
    "then": {
      "serializedAs": {
        "uri": "/2016-03-11/multiLocationOperation/pathParamValue",
        "params": {
          "contains": {
            "QueryParamOne": "valueOne",
            "QueryParamTwo": "valueTwo"
          }
        },
        "headers": {
          "contains": {
            "x-amz-header-string": "headerVal"
          }
        },
        "body": {
          "jsonEquals": "{\"PayloadStructParam\": {\"PayloadMemberOne\": \"payloadValueOne\", \"PayloadMemberTwo\": \"payloadValueTwo\"}}"
        }
      }
    }
  },
  {
    "description": "Operation with structure member explicitly marked as the payload is serialized as unwrapped JSON",
    "given": {
      "input": {
        "PayloadMember": {
          "StringMember": "foo"
        }
      }
    },
    "when": {
      "action": "marshall",
      "operation": "OperationWithExplicitPayloadStructure"
    },
    "then": {
      "serializedAs": {
        "body": {
          "jsonEquals": "{\"StringMember\": \"foo\"}"
        }
      }
    }
  },
  {
    "description": "Explicit payload member and no parameters marshalls into an empty request body",
    "given": {
      "input": {
      }
    },
    "when": {
      "action": "marshall",
      "operation": "OperationWithExplicitPayloadStructure"
    },
    "then": {
      "serializedAs": {
        "body": {
          "equals": ""
        }
      }
    }
  },
  // TODO this should be moved up to common rest tests but Java SDK doesn't support streaming members for
  // Rest XML
  {
    "description": "Streaming payload member is marshalled correctly",
    "given": {
      "input": {
        "StreamingMember": "contents"
      }
    },
    "when": {
      "action": "marshall",
      "operation": "StreamingInputOperation"
    },
    "then": {
      "serializedAs": {
        "headers": {
          "contains": {
            "Content-Length": "8"
          }
        },
        "body": {
          "equals": "contents"
        }
      }
    }
  },
  {
    "description": "String header with JSON trait is base 64 encoded",
    "given": {
      "input": {
        "JsonValueHeaderMember": "toEncode",
        "JsonValueMember": "dontEncode"
      }
    },
    "when": {
      "action": "marshall",
      "operation": "JsonValuesOperation"
    },
    "then": {
      "serializedAs": {
        "headers": {
          "contains": {
            "Encoded-Header": "dG9FbmNvZGU="
          }
        },
        "body": {
          "equals": "{\"JsonValueMember\":\"dontEncode\"}"
        }
      }
    }
  },
  {
    "description": "Input with greedy label in path, leading slash removed",
    "given": {
      "input": {
        "NonGreedyPathParam": "pathParamValue",
        "GreedyPathParam": "/foo/bar/baz"
      }
    },
    "when": {
      "action": "marshall",
      "operation": "OperationWithGreedyLabel"
    },
    "then": {
      "serializedAs": {
        "uri": "/2016-03-11/operationWithGreedyLabel/pathParamValue/foo/bar/baz"
      }
    }
  },
  {
    "description": "ListOfStrings in header is serialized as multi-valued header",
    "given": {
      "input": {
        "StringMember": "singleValue",
        "ListOfStringsMember": [
          "listValueOne",
          "listValueTwo"
        ]
      }
    },
    "when": {
      "action": "marshall",
      "operation": "MembersInHeaders"
    },
    "then": {
      "serializedAs": {
        "uri": "/2016-03-11/membersInHeaders",
        "headers": {
          "contains": {
            "x-amz-string": "singleValue",
            "x-amz-string-list": [
              "listValueOne",
              "listValueTwo"
            ]
          }
        }
      }
    }
  },
  {
    "description": "Null string header member is not serialized",
    "given": {
      "input": {
        "StringMember": null
      }
    },
    "when": {
      "action": "marshall",
      "operation": "MembersInHeaders"
    },
    "then": {
      "serializedAs": {
        "uri": "/2016-03-11/membersInHeaders",
        "headers": {
          "doesNotContain": [ "x-amz-string" ]
        }
      }
    }
  },
  {
    "description": "Null list header member is not serialized",
    "given": {
      "input": {
        "ListOfStringsMember": null
      }
    },
    "when": {
      "action": "marshall",
      "operation": "MembersInHeaders"
    },
    "then": {
      "serializedAs": {
        "uri": "/2016-03-11/membersInHeaders",
        "headers": {
          "doesNotContain": [ "x-amz-string-list" ]
        }
      }
    }
  },
  {
    "description": "List header member with only null value is not serialized",
    "given": {
      "input": {
        "ListOfStringsMember": [
          null
        ]
      }
    },
    "when": {
      "action": "marshall",
      "operation": "MembersInHeaders"
    },
    "then": {
      "serializedAs": {
        "uri": "/2016-03-11/membersInHeaders",
        "headers": {
          "doesNotContain": [ "x-amz-string-list" ]
        }
      }
    }
  },
  {
    "description": "List header member's null elements are not serialized",
    "given": {
      "input": {
        "ListOfStringsMember": [
          "listValueOne",
          null
        ]
      }
    },
    "when": {
      "action": "marshall",
      "operation": "MembersInHeaders"
    },
    "then": {
      "serializedAs": {
        "uri": "/2016-03-11/membersInHeaders",
        "headers": {
          "contains": {
            "x-amz-string-list": [
              "listValueOne"
            ]
          }
        }
      }
    }
  }
  // TODO This is a post process customization for API Gateway
  //  {
  //    "name": "NamedLocationsInJsonBody",
  //    "given": {
  //      "input": {
  //        "StringPayloadMember": "foo"
  //      }
  //    },
  //    "when": {
  //      "action": "marshall",
  //      "operation": "NamedLocationsInBOdy"
  //    },
  //    "then": {
  //      "serializedAs": {
  //        "body": {
  //          "jsonEquals": "{\"overridden_location\": \"foo\"}"
  //        }
  //      }
  //    }
  //  }
]
